###########################
# Annexation Events concerning Europe
###########################
# By lots of folks
# Converted from on_actions to decisions by Rylock and Dr_Njitram
# Any new post-annexation events need to have their triggers in the KR_on_actions file
###########################

# Table of Contents
#	This might sound arcane to you, but we are following a center-west-north-east-south route. You'll get the hang of it
#
# Europe
#	Central Europe
#		Germany
#			Alsace
#			Luxemburg
#			Rheinland
#			North Germany
#			Schleswig
#			Prussia (+ East & West Prussia)
#			Posen
#			Masuria
#			Memel
#			Upper Silesia
#			Bavaria
#		Poland
#			Bialystok
#		UBD
#			Estonia
#			Latvia
#		Lithuania
#			Vilnius
#		Austria
#			Austria proper
#			Bohemia
#			Galicia
#				Bukovina
#			Hungary
#				Slovakia
#				Transcarpathia
#				Transylvania
#				West Banat
#				Vojvodina
#				Burgenland
#			Croatia
#				Dalmatia
#				Littoral
#			Triest
#			Slovenia
#			Trentino
#		Switzerland
#			Romandie
#			Ticino
#
#	Western Europe
#		France
#			Brittany
#			Pas-de-Calais
#		Britain
#			Scotland
#			Wales
#		Ireland
#		Netherlands
#		Belgium
#			Wallonia
#
#	Northern Europe
#		Denmark
#			Iceland
#			Greenland
#		Norway
#		Sweden
#			Aland
#		Finland
#			Karelia
#
#	Eastern Europe
#		Ukraine
#			Brest
#		White Ruthenia
#			Eastern White Ruth.
#		European Russia
#			Dvinsk
#			Siberia
#
#	Southeastern Europe
#		Albania
#		Montenegro
#		Bosnia
#		Kosovo
#		Serbia
#			Nis
#			Macedonia
#		Romania
#		Bulgaria
#		Constantinople
#		Greece
#			Thessaloniki
#			Keraferia
#			Northern Epirus
#
#	Southern Europe
#		Spain
#			Galicia
#			Central Spain
#			Euskadi
#			Catalonia
#		Portugal
#		Southern France
#		Corsica
#		Italy
#			Aosta
#			Piedmont
#			Lombardy
#			Venetia
#			Emilia
#			Tuscany
#			Central Italy
#			Rome
#			Southern Italy
#			Sardinia
#		Malta

add_namespace = annex

country_event = { #Check for possible annexations (donotlog)
	id = annex.1
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_subject = no
		NOT = {
			# Special tags - these shouldn't exist outside of very specific circumstances
			tag = XXA #debug tag
			tag = SIR #SIA civil war
			tag = GRR #GRE civil war
			tag = PRC #GXC civil war
			tag = INR #HND civil war
			original_tag = IKH #not meant to survive
		}
	}

	option = {
		every_owned_state = {
			limit = {
				is_in_array = { global.annexation_relevant_states = THIS }
				NOT = { is_core_of = ROOT }
				is_controlled_by = ROOT
			}
			check_potential_annexations = yes
		}
		clr_country_flag = KR_checking_for_possible_annexations
	}
}

#####################################
##   C E N T R A L   E U R O P E   ##
#####################################

country_event = { #Fate of Germany
	id = annex.1000
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1000 FROM = [From.GetName]" }
	title = annexation_GER_CONQ
	desc = annexation_GER_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					tag = NFA
					28 = { is_claim_or_core_of_ROOT = no }
				}
				add_state_claim = 28
			}
			add_to_temp_array = { core_removal_array = GRU }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #german union
		name = annex.1000.a
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 60
		}
		create_german_union_cores = yes

		set_temp_variable = { tag_to_release = GRU }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				GRU = { create_socialist_german_government = yes }
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GRU = { create_autocratic_german_government = yes }
			}
			if = {
				limit = { has_elected_government = yes }
				GRU = {
					random_list = {
						20 = { create_rightist_democratic_german_government = yes }
						20 = { create_centrist_democratic_german_government = yes }
						20 = { create_natliberal_democratic_german_government = yes }
						20 = { create_leftliberal_democratic_german_government = yes }
						20 = { create_leftist_democratic_german_government = yes }
					}
				}
			}
			if = {
				limit = {
					tag = RUS
					has_cosmetic_tag = RUS_empire
					NOT = { has_country_leader = { name = "Pyetr IV" } }
				}
				country_event = part.16
			}
		}
	}
	option = { #german union, but split off Rheinland
		trigger = {
			OR = {
				tag = FRA
				tag = NFA
			}
			GRU = { exists = no }
			NOT = { is_ally_with = GEX }
		}
		name = annex.1000.l
		ai_chance = {
			base = 0
		}
		create_rhenish_cores = yes
		set_temp_variable = { tag_to_release = RHI }
		release_targeted_tag = yes

		create_german_union_cores = yes
		set_temp_variable = { tag_to_release = GRU }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				GRU = { create_socialist_german_government = yes }
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GRU = { create_autocratic_german_government = yes }
			}
			if = {
				limit = { has_elected_government = yes }
				GRU = {
					random_list = {
						20 = { create_rightist_democratic_german_government = yes }
						20 = { create_centrist_democratic_german_government = yes }
						20 = { create_natliberal_democratic_german_government = yes }
						20 = { create_leftliberal_democratic_german_government = yes }
						20 = { create_leftist_democratic_german_government = yes }
					}
				}
			}
		}
	}
	option = { #german union, annex Rheinland
		name = annex.1000.m
		trigger = {
			OR = {
				tag = FRA
				tag = NFA
			}
			GRU = { exists = no }
			owns_state = 42
			owns_state = 781
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 0
		}
		add_state_claim = 42
		add_state_claim = 781
		create_german_union_cores = yes
		set_temp_variable = { tag_to_release = GRU }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				GRU = { create_socialist_german_government = yes }
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GRU = { create_autocratic_german_government = yes }
			}
			if = {
				limit = { has_elected_government = yes }
				GRU = {
					random_list = {
						20 = { create_rightist_democratic_german_government = yes }
						20 = { create_centrist_democratic_german_government = yes }
						20 = { create_natliberal_democratic_german_government = yes }
						20 = { create_leftliberal_democratic_german_government = yes }
						20 = { create_leftist_democratic_german_government = yes }
					}
				}
			}
		}
	}
	option = { #GROSSDEUTSCHLAND
		trigger = {
			tag = AUS
			OR = {
				has_completed_focus = AUS_status_quo
				has_completed_focus = AUS_military_occupation
			}
			NOT = {
				country_exists = GER
				country_exists = GRU
			}
		}

		name = annex.1000.f
		ai_chance = {
			base = 60
		}
		every_state = {
			limit = {
				is_core_of = GER
				is_not_claim_or_core_of_ROOT = yes
			}
			add_claim_by = ROOT
		}
		every_country = {
			limit = {
				is_subject_of = ROOT
				OR = {
					tag = BAY
					tag = NGF
					tag = RHI
					tag = DDR
				}
			}
			ROOT = {
				annex_country = {
					target = PREV
					transfer_troops = yes
				}
			}
		}
		set_cosmetic_tag = AUS_GER
		set_country_flag = GER_CONQ
		occupy_large_country = yes
	}
	option = { #occupy Rheinland, break up rest
		name = annex.1000.k
		trigger = {
			OR = {
				tag = FRA
				tag = NFA
			}
			owns_state = 42
			owns_state = 781
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 0
		}
		add_state_claim = 42
		add_state_claim = 781
		set_country_flag = GER_CONQ
		recheck_annexations = yes
		custom_effect_tooltip = germany_split_tt
	}
	option = { #divide
		name = annex.1000.c
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 6
				tag = AUS
			}
			modifier = {
				factor = 6
				tag = FRA
			}
			modifier = {
				factor = 3
				OR = {
					tag = RUS
					tag = SOV
				}
			}
			modifier = {
				add = 10
				NOT = { tag = FRA }
				NOT = { country_exists = NGF }
				owns_state = 59 #Hanover
			}
		}
		custom_effect_tooltip = germany_split_tt
		set_country_flag = { flag = GER_CONQ days = 100 value = 1 }
		recheck_annexations_immediate = yes
	}
	option = { #give to GEX
		name = annex.1000.n
		trigger = {
			is_ally_with = GEX
		}
		ai_chance = {
			base = 100
		}
		every_owned_state = {
			limit = {
				OR = {
					is_germany = yes
					is_core_of = GEX
					is_claimed_by = GEX
				}
				is_claim_or_core_of_ROOT = no
			}
			GEX = { transfer_state = PREV }
		}
	}
	option = { #occupy all
		name = annex.1000.g
		trigger = {
			NOT = { is_ally_with = GEX }
			OR = {
				AND = {
					owns_state = 51 #Eastern Rheinland
					NOT = { country_exists = RHI }
				}
				AND = {
					owns_state = 52 #Upper Bavaria
					NOT = { country_exists = BAY }
				}
				AND = {
					owns_state = 59 #Hanover
					NOT = { country_exists = NGF }
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = GER_CONQ
		set_country_flag = DDR_CONQ
		set_country_flag = RHI_CONQ
		set_country_flag = BAY_CONQ
		set_country_flag = NGF_CONQ
		occupy_massive_country = yes
	}
}

country_event = { #Fate of Alsace-Lorraine
	id = annex.1001
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1001 FROM = [From.GetName]" }
	title = annexation_ALSACE_CONQ
	desc = annexation_ALSACE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1001.a #Give to FRA
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			FRA = {
				OR = {
					owns_state = 779 #Nancy
					owns_state = 785 #Plateau Lorrain
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = FRA }
		28 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1001.b #Give to NFA
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			NFA = {
				OR = {
					owns_state = 779 #Nancy
					owns_state = 785 #Plateau Lorrain
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = FRP
				NOT = { is_ally_with = NFA }
			}
		}
		set_temp_variable = { tag_to_release = NFA }
		28 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1001.c #Give to FRP
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			FRP = {
				OR = {
					owns_state = 779 #Nancy
					owns_state = 785 #Plateau Lorrain
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = NFA
				NOT = { is_ally_with = FRP }
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		28 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1001.d #Give to German tag 1 (owner of Palatinate)
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			var:42.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				any_allied_country = {
					is_french_tag = yes
					OR = {
						owns_state = 779 #Nancy
						owns_state = 785 #Plateau Lorrain
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 42.owner }
		28 = { transfer_state_and_add_core = yes }
	}

	option = {
		name = annex.1001.e #Give to German tag 2 (owner of Baden )
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			var:780.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
				NOT = { tag = var:42.owner } #avoids duplication with the next option
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				any_allied_country = {
					is_french_tag = yes
					OR = {
						owns_state = 779 #Nancy
						owns_state = 785 #Plateau Lorrain
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 780.owner }
		28 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				is_french_tag = yes
				is_germany_or_splinter_tag = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = ROOT }
		if = {
			limit = { is_french_tag = yes }
			28 = { transfer_state_and_add_claim = yes }
		}
		else = {
			28 = { transfer_state_and_add_core = yes }
		}
	}

	option = {
		name = annex.occupation #Occupy
		ai_chance = { base = 0 }
		set_country_flag = ALSACE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Luxembourg
	id = annex.1002
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1002 FROM = [From.GetName]" }
	title = annexation_LUX_CONQ
	desc = annexation_LUX_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1001.a #Give to FRA
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			FRA = {
				OR = {
					owns_state = 28 #Alsace-Lorraine
					owns_state = 741 #Ardennes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.2
				var:741.owner = {
					OR = {
						tag = BEL
						tag = WLL
					}
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = FRA }
		if = {
			limit = { owns_state = 741 }
			741 = { transfer_state_and_add_claim = yes }
		}
		8 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1001.b #Give to NFA
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			NFA = {
				OR = {
					owns_state = 28 #Alsace-Lorraine
					owns_state = 741 #Ardennes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = FRP
				NOT = { is_ally_with = NFA }
			}
			modifier = {
				factor = 0.2
				var:741.owner = {
					OR = {
						tag = BEL
						tag = WLL
					}
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = NFA }
		if = {
			limit = { owns_state = 741 }
			741 = { transfer_state_and_add_claim = yes }
		}
		8 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1001.c #Give to FRP
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			FRP = {
				OR = {
					owns_state = 28 #Alsace-Lorraine
					owns_state = 741 #Ardennes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = NFA
				NOT = { is_ally_with = FRP }
			}
			modifier = {
				factor = 0.2
				var:741.owner = { #Ardennes
					OR = {
						tag = BEL
						tag = WLL
					}
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		if = {
			limit = { owns_state = 741 }
			741 = { transfer_state_and_add_claim = yes }
		}
		8 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to Belgium
		name = annex.1002.c
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			741 = {
				OR = {
					is_valid_annexation_state = yes
					is_owned_by = BEL
					is_owned_by = WLL
				}
			}
			var:34.owner = { #Hainaut
				OR = {
					tag = BEL
					tag = WLL
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = 34.owner }
		8 = { transfer_state_and_add_claim = yes }
		if = {
			limit = { owns_state = 741 } #Ardennes
			741 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Give to Germany
		name = annex.1002.d
		trigger = {
			is_germany_or_splinter_tag = no
			var:781.owner = { #Eastern Rhineland
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_french_tag = yes
			}
			modifier = {
				factor = 0.5
				any_allied_country = {
					is_french_tag = yes
					OR = {
						owns_state = 779 #Nancy
						owns_state = 785 #Plateau Lorrain
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 781.owner }
		8 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = BEL
				tag = WLL
				is_french_tag = yes
				is_germany_or_splinter_tag = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_french_tag = yes
				NOT = {
					owns_state = 948 #Liège
					owns_state = 741 #Ardennes
				}
				var:34.owner = {
					OR = {
						tag = BEL
						tag = WLL
					}
					ROOT_can_grant_land = yes
				}
			}
		}
		add_state_claim = 8
		occupy_small_country = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_french_tag = no
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = LUX_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Rhineland
	id = annex.1003
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1003 FROM = [From.GetName]" }
	title = annexation_RHI_CONQ
	desc = annexation_RHI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = RHI }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet
		name = annex.1003.a
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = RHI }
		create_rhenish_cores = yes
		release_targeted_tag = yes
	}

	option = { #give it to NGF
		name = annex.1003.b
		trigger = {
			is_ally_with = NGF
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.1
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					region = 6 #Rhineland
					is_claim_or_core_of_ROOT = no
				}
				add_core_of = var:tag_to_release
				var:tag_to_release = { transfer_state = PREV }
			}
			every_state = {
				limit = {
					region = 6 #Rhineland
					is_valid_annexation_state = no
				}
				add_claim_by = var:tag_to_release
			}
		}
		hidden_effect = {
			every_state = {
				limit = { region = 6 } #Rhineland
				add_core_and_transfer_if_owned_else_add_claim = yes
			}
		}
	}

	option = { #occupy Rhineland, release rest
		name = annex.1003.c
		trigger = {
			is_french_tag = yes
			owns_state = 42
			owns_state = 781
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 0
		}
		add_state_claim = 42
		add_state_claim = 781
		occupy_medium_country = yes
		create_rhenish_cores = yes
		set_temp_variable = { tag_to_release = RHI }
		release_targeted_tag = yes
	}

	option = { #occupy Rhineland, give the rest to NGF
		name = annex.1003.d
		trigger = {
			is_french_tag = yes
			owns_state = 42
			owns_state = 781
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 0
		}
		add_state_claim = 42
		add_state_claim = 781
		occupy_medium_country = yes
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					region = 6 #Rhineland
					is_claim_or_core_of_ROOT = no
				}
				add_core_of = var:tag_to_release
				var:tag_to_release = { transfer_state = PREV }
			}
			every_state = {
				limit = {
					region = 6 #Rhineland
					is_valid_annexation_state = no
				}
				add_claim_by = var:tag_to_release
			}
		}
		hidden_effect = {
			every_state = {
				limit = { region = 6 } #Rhineland
				add_core_and_transfer_if_owned_else_add_claim = yes
			}
		}
	}

	option = { #give it to GEX
		name = annex.1000.n
		trigger = {
			is_ally_with = GEX
		}
		every_owned_state = {
			limit = {
				region = 6 #Rhineland
				is_claim_or_core_of_ROOT = no
			}
			GEX = { transfer_state = PREV }
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = RHI_CONQ
	}
}

country_event = { #Fate of North Germany
	id = annex.1004
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1004 FROM = [From.GetName]" }
	title = annexation_NGF_CONQ
	desc = annexation_NGF_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = NGF }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet
		name = annex.1004.a
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = NGF }
		create_hanoverian_cores = yes
		release_targeted_tag = yes
		if = {
			limit = {
				tag = FRA
				is_in_faction_with = ENG
				has_global_flag = UoB_war_par_1
			}
			clr_global_flag = UoB_war_par_1
			ENG = {
				country_event = { id = part.571 days = 2 }
			}
		}
	}

	option = { #puppet, include Rhineland
		name = annex.1004.b
		trigger = {
			owns_state = 51
			NOT = {
				tag = FRA
				is_ally_with = GEX
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.25
				is_actual_major = no
			}
			modifier = {
				factor = 2
				is_actual_major = yes
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						state = 56 #Oldenburg
						state = 58 #Schleswig-Holstein
						state = 59 #Hanover
						state = 60 #Thuringia
						state = 65 #Saxony
						state = 147 #Prussian Saxony
					}
					is_claim_or_core_of_ROOT = no
				}
				remove_claim_and_core_of_target = yes
			}
			every_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						state = 56 #Oldenburg
						state = 58 #Schleswig-Holstein
						state = 59 #Hanover
						state = 60 #Thuringia
						state = 65 #Saxony
						state = 147 #Prussian Saxony
					}
					is_valid_annexation_state = no
				}
				add_claim_of_target = yes
			}
		}
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						state = 56 #Oldenburg
						state = 58 #Schleswig-Holstein
						state = 59 #Hanover
						state = 60 #Thuringia
						state = 65 #Saxony
						state = 147 #Prussian Saxony
					}
				}
				add_core_if_owned_else_add_claim = yes
			}
		}
		release_targeted_tag = yes
	}

	option = { #puppet, include Prussia
		name = annex.1004.c
		trigger = {
			owns_state = 64
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.25
				is_actual_major = no
			}
			modifier = {
				factor = 2
				is_actual_major = yes
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					region = 8 #Lower Germany
					is_claim_or_core_of_ROOT = no
				}
				remove_claim_and_core_of_target = yes
			}
			every_state = {
				limit = {
					region = 8 #Lower Germany
					is_valid_annexation_state = no
				}
				add_claim_of_target = yes
			}
		}
		hidden_effect = {
			every_state = {
				limit = { region = 8 } #Lower Germany
				add_core_if_owned_else_add_claim = yes
			}
		}
		release_targeted_tag = yes
	}

	option = { #puppet full NGF
		name = annex.1004.d
		trigger = {
			owns_state = 51
			owns_state = 64
			NOT = {
				tag = FRA
				is_ally_with = GEX
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.25
				is_actual_major = no
			}
			modifier = {
				factor = 2
				is_actual_major = yes
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						region = 8 #Lower Germany
					}
					is_claim_or_core_of_ROOT = no
				}
				remove_claim_and_core_of_target = yes
			}
			every_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						region = 8 #Lower Germany
					}
					is_valid_annexation_state = no
				}
				add_claim_of_target = yes
			}
		}
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						region = 6 #Rhineland
						region = 8 #Lower Germany
					}
				}
				add_core_if_owned_else_add_claim = yes
			}
		}
		release_targeted_tag = yes
	}

	option = { #give it to GEX
		name = annex.1000.n
		trigger = {
			is_ally_with = GEX
		}
		every_owned_state = {
			limit = { region = 8 } #Lower Germany
			GEX = { transfer_state = PREV }
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = NGF_CONQ
	}
}

country_event = { #Fate of Northern Schleswig
	id = annex.1005
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1005 FROM = [From.GetName]" }
	title = annexation_SCHLESWIG_CONQ
	desc = annexation_SCHLESWIG_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Denmark/Scandinavia
		name = annex.1005.a
		trigger = {
			var:99.owner = { #Jutland
				OR = {
					tag = DEN
					tag = SCA
				}
				ROOT_can_grant_land = yes
			}
			is_germany_or_splinter_tag = no
			NOT = {
				tag = DEN
				tag = SCA
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0.1
				NOT = {
					is_ally_with = DEN
					is_ally_with = SCA
				}
			}
		}
		set_temp_variable = { tag_to_release = 99.owner }
		782 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give it to the Germans
		name = annex.1005.b
		trigger = {
			var:58.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
			is_germany_or_splinter_tag = no
			NOT = {
				tag = DEN
				tag = SCA
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_socialist_government = yes
				var:99.owner = { #Jutland
					OR = {
						tag = DEN
						tag = SCA
					}
					ROOT_can_grant_land = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = 58.owner }
		782 = { transfer_state_and_add_core = yes }
	}
	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 782 #Northern Schleswig
		recheck_annexations = yes
	}
	option = { #Integrate
		name = annex.1005.c
		trigger = {
			OR = {
				tag = DEN
				tag = SCA
			}
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 782 #Northern Schleswig
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = DEN
				tag = SCA
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SCHLESWIG_CONQ
	}
}

country_event = { #Fate of Prussia
	id = annex.1006
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1006 FROM = [From.GetName]" }
	title = annexation_DDR_CONQ
	desc = annexation_DDR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = DDR }
			if = {
				limit = { NOT = { country_exists = NGF } }
				add_to_temp_array = { core_removal_array = NGF }
			}
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet DDR
		name = annex.1006.a
		trigger = {
			NOT = {
				country_exists = DDR
				is_ally_with = GEX
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.1
				NOT = {
					count_triggers = {
						amount = 4
						60 = { is_valid_annexation_state = yes }
						62 = { is_valid_annexation_state = yes }
						63 = { is_valid_annexation_state = yes }
						64 = { is_valid_annexation_state = yes }
						65 = { is_valid_annexation_state = yes }
						66 = { is_valid_annexation_state = yes }
						68 = { is_valid_annexation_state = yes }
					}
				}
			}
		}
		create_prussian_cores = yes
		set_temp_variable = { tag_to_release = DDR }
		release_targeted_tag = yes
		if = {
			limit = {
				tag = RUS
				has_cosmetic_tag = RUS_empire
				NOT = { has_country_leader = { name = "Pyetr IV" } }
			}
			country_event = part.22
		}
		if = {
			limit = {
				tag = FRA
				is_in_faction_with = ENG
				has_global_flag = UoB_war_par_2
			}
			clr_global_flag = UoB_war_par_2
			ENG = {
				country_event = { id = part.572 days = 2 }
			}
		}
	}

	option = { #give it to NGF
		name = annex.1006.g
		trigger = {
			is_ally_with = NGF
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 10
				NOT = {
					count_triggers = {
						amount = 4
						60 = { is_valid_annexation_state = yes }
						62 = { is_valid_annexation_state = yes }
						63 = { is_valid_annexation_state = yes }
						64 = { is_valid_annexation_state = yes }
						65 = { is_valid_annexation_state = yes }
						66 = { is_valid_annexation_state = yes }
						68 = { is_valid_annexation_state = yes }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		effect_tooltip = {
			every_owned_state = {
				limit = {
					region = 8 #Lower Germany
					is_claim_or_core_of_ROOT = no
				}
				remove_claim_and_core_of_target = yes
			}
			every_state = {
				limit = {
					region = 8 #Lower Germany
					is_valid_annexation_state = no
				}
				add_claim_of_target = yes
			}
		}
		hidden_effect = {
			every_state = {
				limit = { region = 8 } #Lower Germany
				add_core_and_transfer_if_owned_else_add_claim = yes
			}
		}
	}

	option = { #give it to GEX
		name = annex.1000.n
		trigger = {
			is_ally_with = GEX
		}
		every_state = {
			limit = {
				region = 8 #Lower Germany
				is_claim_or_core_of_ROOT = no
			}
			GEX = { transfer_state = PREV }
		}
	}

	option = { #give it to POL
		name = annex.1006.h
		trigger = {
			country_exists = DDR
			is_ally_with = POL
			NOT = {
				tag = POL
				is_ally_with = DDR
				owns_state = 60 #Thuringia
				owns_state = 62 #Hither Pomerania
				owns_state = 64 #Brandenburg
				owns_state = 65 #Saxony
				owns_state = 147 #Prussian Saxony
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = POL }
		every_owned_state = {
			limit = {
				is_valid_annexation_state = yes
				OR = {
					region = 8 #Poland
					state = 63 #Farther Pomerania
					state = 66 #Lower Silesia
					state = 68 #Neumark
				}
			}
			add_claim_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = { factor = 0 }
		set_country_flag = DDR_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of West Prussia
	id = annex.1007
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1007 FROM = [From.GetName]" }
	title = annexation_WESTPRUSSIA_CONQ
	desc = annexation_WESTPRUSSIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Poland
		name = annex.1009.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			POL = {
				OR = {
					owns_state = 86 #Posen
					owns_state = 777 #Masuria
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = POL }
		776 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give it to the Germans
		name = annex.1007.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			var:63.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ENG
					is_french_tag = yes
					is_russian_tag = yes
				}
				POL = {
					OR = {
						owns_state = 86 #Posen
						owns_state = 777 #Masuria
					}
					ROOT_can_grant_land = yes
				}
			}
			modifier = {
				factor = 0.5
				POL = { is_ally_with = ROOT }
			}
			modifier = {
				factor = 0.2
				POL = { owns_state = 86 }
			}
		}
		set_temp_variable = { tag_to_release = 63.owner }
		776 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 776
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 100
		}
		add_state_claim = 776
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			10 = { is_claimed_by = ROOT } #== RUS has annexed Poland
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 776
		POL = { add_state_core = 776 }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = WESTPRUSSIA_CONQ
	}
}

country_event = { #Fate of East Prussia
	id = annex.1008
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1008 FROM = [From.GetName]" }
	title = annexation_EASTPRUSSIA_CONQ
	desc = annexation_EASTPRUSSIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to the Germans
		name = annex.1008.a
		trigger = {
			is_germany_or_splinter_tag = no
			var:63.owner = {
				is_germany_or_splinter_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = POL
				has_government = national_populist
			}
		}
		set_temp_variable = { tag_to_release = 63.owner }
		5 = { transfer_state_and_add_core = yes } #East Prussia
	}

	option = { #Give it to Poland
		name = annex.1008.b
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			OR = {
				POL = { owns_state = 777 }
				777 = { is_valid_annexation_state = yes } #Masuria
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				var:63.owner = {
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = POL }
		every_owned_state = {
			limit = {
				OR = {
					state = 5 #Konigsberg
					state = 777 #Masuria
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Split between Poland and Germany
		name = annex.1008.c
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			777 = { is_valid_annexation_state = yes } #Masuria
			POL = { ROOT_can_grant_land = yes }
			var:63.owner = {
				is_germany_or_splinter_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = 63.owner }
		5 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = POL }
		777 = { transfer_state_and_add_claim = yes }
	}

	option = { #Annex East Prussia
		name = annex.1008.d
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					has_government = national_populist
					var:63.owner = { is_germany_or_splinter_tag = no }
					var:63.owner = { ROOT_can_grant_land = no }
				}
			}
		}
		add_state_claim = 5
		occupy_small_country = yes
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 5
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = EASTPRUSSIA_CONQ
	}
}

country_event = { #Fate of Posen
	id = annex.1009
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1009 FROM = [From.GetName]" }
	title = annexation_POSEN_CONQ
	desc = annexation_POSEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Poland
		name = annex.1009.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			POL = {
				owns_state = 87 #Kalisz
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = POL }
		86 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to the Germans
		name = annex.1009.b
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			var:66.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ENG
					is_french_tag = yes
					is_russian_tag = yes
				}
				POL = {
					owns_state = 87 #Kalisz
					ROOT_can_grant_land = yes
				}
			}
			modifier = {
				factor = 0
				POL = { is_ally_with = ROOT }
			}
		}
		set_temp_variable = { tag_to_release = 66.owner }
		86 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 86
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 100
		}
		add_state_claim = 86
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			10 = { is_claimed_by = ROOT } #== RUS has annexed Poland
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 86
		POL = { add_state_core = 86 }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = POSEN_CONQ
	}
}

country_event = { #Fate of Masuria
	id = annex.1010
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1010 FROM = [From.GetName]" }
	title = annexation_MASURIA_CONQ
	desc = annexation_MASURIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Poland
		name = annex.1009.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			POL = {
				owns_state = 98 #Plock
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = POL }
		777 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Germans
		name = annex.1010.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			var:5.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					tag = ENG
					is_french_tag = yes
					is_russian_tag = yes
				}
				POL = {
					owns_state = 98 #Plock
					ROOT_can_grant_land = yes
				}
			}
			modifier = {
				factor = 0
				POL = { is_ally_with = ROOT }
			}
		}
		set_temp_variable = { tag_to_release = 5.owner }
		777 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 777
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 777
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			10 = { is_claimed_by = ROOT } #== RUS has annexed Poland
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 777
		POL = { add_state_core = 777 }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = MASURIA_CONQ
	}
}

country_event = { #Fate of Memel
	id = annex.1011
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1011 FROM = [From.GetName]" }
	title = annexation_MEMEL_CONQ
	desc = annexation_MEMEL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to the Germans
		name = annex.1010.a
		trigger = {
			NOT = {
				tag = LIT
				tag = BAT
			}
			var:5.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ENG
					is_french_tag = yes
					is_russian_tag = yes
				}
				OR = {
					LIT = { ROOT_can_grant_land = yes }
					BAT = {
						owns_state = 11 #Kaunas
						is_ally_with = ROOT
					}
				}
			}
			modifier = {
				factor = 0
				LIT = { is_ally_with = ROOT }
			}
		}
		set_temp_variable = { tag_to_release = 5.owner }
		188 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Lithuania
		name = annex.1011.b
		trigger = {
			NOT = {
				tag = LIT
				tag = BAT
			}
			LIT = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = LIT }
		188 = { transfer_state_and_add_core = yes }
	}

	option = { #give to BAT
		name = annex.1011.c
		trigger = {
			NOT = {
				tag = LIT
				tag = BAT
			}
			is_ally_with = BAT
			BAT = { owns_state = 11 } #Kaunas
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = BAT }
		188 = { transfer_state_and_add_core = yes }
	}

	option = { #give to POL
		name = annex.1011.d
		trigger = {
			NOT = {
				tag = LIT
				tag = BAT
				tag = POL
			}
			is_ally_with = POL
			POL = {
				OR = {
					owns_state = 5 #East Prussia
					AND = {
						owns_state = 189 #Samogitia
						has_cosmetic_tag = POL_PLC
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				LIT = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		188 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			OR = {
				tag = LIT
				AND = {
					owns_state = 189 #Samogitia
					OR = {
						tag = BAT
						tag = POL
						is_russian_tag = yes
					}
				}
				AND = {
					tag = POL
					owns_state = 5 #East Prussia
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				tag = POL
				NOT = { has_cosmetic_tag = POL_PLC }
				OR = {
					LIT = { ROOT_can_grant_land = yes }
					BAT = {
						owns_state = 11 #Kaunas
						is_ally_with = ROOT
					}
				}
			}
		}
		add_state_claim = 188
		if = {
			limit = { is_russian_tag = yes }
			LIT = { add_state_core = 188 } #Memel
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = LIT
				AND = {
					owns_state = 189 #Samogitia
					OR = {
						tag = BAT
						tag = POL
						is_russian_tag = yes
					}
				}
				AND = {
					tag = POL
					owns_state = 5 #East Prussia
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = MEMEL_CONQ
	}
}

country_event = { #Fate of Upper Silesia
	id = annex.1012
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1012 FROM = [From.GetName]" }
	title = annexation_UPPERSILESIA_CONQ
	desc = annexation_UPPERSILESIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Poland
		name = annex.1009.a
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			POL = {
				owns_state = 87 #Kalisz
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = POL }
		67 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give it to the Germans
		name = annex.1009.b
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { tag = POL }
			var:66.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.5
				POL = { is_ally_with = ROOT }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ENG
					is_french_tag = yes
					is_russian_tag = yes
				}
				POL = {
					owns_state = 87 #Kalisz
					ROOT_can_grant_land = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = 66.owner }
		67 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 67
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 100
		}
		add_state_claim = 67
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			10 = { is_claimed_by = ROOT } #== RUS has annexed Poland
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 67
		POL = { add_state_core = 67 }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = UPPERSILESIA_CONQ
	}
}

country_event = { #Fate of Bavaria
	id = annex.1013
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1013 FROM = [From.GetName]" }
	title = annexation_BAY_CONQ
	desc = annexation_BAY_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = BAY }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet
		name = annex.1013.a
		trigger = {
			NOT = { is_ally_with = GEX }
		}
		ai_chance = {
			base = 99
		}
		create_bavarian_cores = yes
		set_temp_variable = { tag_to_release = BAY }
		release_targeted_tag = yes
		if = {
			limit = { tag = AUS }
			BAY = { set_cosmetic_tag = SGF }
		}
	}
	option = { #give to AUS
		name = annex.1013.b
		trigger = {
			is_in_faction_with = AUS
			AUS = { is_subject = no }
			NOT = { tag = AUS }
		}
		ai_chance = {
			base = 100
		}
		every_owned_state = {
			limit = { region = 7 } #Upper Germany
			AUS = { transfer_state = PREV }
		}
	}
	option = { #give to GEX
		name = annex.1000.n
		trigger = {
			is_ally_with = GEX
		}
		ai_chance = {
			base = 200
		}
		every_owned_state = {
			limit = { region = 7 } #Upper Germany
			GEX = { transfer_state = PREV }
		}
	}
	option = { #integrate the south German lands
		name = annex.1013.c
		trigger = {
			tag = AUS
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = { region = 7 } #Upper Germany
			add_claim_of_ROOT = yes
		}
		occupy_medium_country = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = AUS
				is_ally_with = GEX
			}
		}
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = BAY_CONQ
	}
}

country_event = { #Fate of Poland
	id = annex.1014
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1014 FROM = [From.GetName]" }
	title = annexation_POL_CONQ
	desc = annexation_POL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { 11 = { is_core_of = POL } } #Kaunas == PLC formed
				every_state = {
					limit = {
						is_core_of = LIT
						is_core_of = POL
					}
					remove_core_of = POL
					if = {
						limit = {
							has_resistance = no
							NOT = { is_core_of = owner }
						}
						start_resistance = LIT
					}
				}
			}
			POL = {
				if = {
					limit = { POL_has_monarchy = yes }
					POL_remove_monarchy = yes
				}
				if = {
					limit = { has_unit_leader = 490 }
					event_target:POL_Konstanty_Rokossowski = { set_nationality = XXA }
				}
			}
		}
	}

	option = { #liberate only core
		name = annex.1014.a
		trigger = {
			any_of_scopes = {
				array = POL.core_states
				NOT = {
					state = 10 #Warsaw
					state = 87 #Kalisz
					state = 90 #Kielce
					state = 92 #Lublin
					state = 97 #Bialystok
					state = 98 #Plock
					state = 1088 #Chelm
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 3
				tag = GER
			}
		}
		every_state = {
			limit = {
				OR = {
					NOT = {
						state = 10 #Warsaw
						state = 87 #Kalisz
						state = 90 #Kielce
						state = 92 #Lublin
						state = 98 #Plock
						state = 1088 #Chelm
					}
					is_claim_or_core_of_ROOT = yes
				}
				is_core_of = POL
			}
			POL = {
				remove_state_core = PREV
				add_state_claim = PREV
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				var:tag_to_release = { country_event = poland.231 }
			}
			else = {
				var:tag_to_release = { set_cosmetic_tag = POL_REPUBLIC }
			}
		}
	}

	option = { #liberate full
		name = annex.1014.b
		trigger = {
			any_of_scopes = {
				array = POL.core_states
				NOT = {
					state = 10 #Warsaw
					state = 87 #Kalisz
					state = 90 #Kielce
					state = 92 #Lublin
					state = 97 #Bialystok
					state = 98 #Plock
					state = 1088 #Chelm
				}
			}
		}
		ai_chance = {
			base = 75
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0.33
				is_germany_or_splinter_tag = yes
				any_of_scopes = {
					array = POL.core_states
					is_claim_or_core_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				var:tag_to_release = { country_event = poland.231 }
			}
			else = {
				var:tag_to_release = { set_cosmetic_tag = POL_REPUBLIC }
			}
		}
	}

	option = { #liberate
		name = annex.1014.c
		trigger = {
			NOT = {
				any_of_scopes = {
					array = POL.core_states
					NOT = {
						state = 10 #Warsaw
						state = 87 #Kalisz
						state = 90 #Kielce
						state = 92 #Lublin
						state = 97 #Bialystok
						state = 98 #Plock
						state = 1088 #Chelm
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				var:tag_to_release = { country_event = poland.231 }
			}
			else = {
				var:tag_to_release = { set_cosmetic_tag = POL_REPUBLIC }
			}
		}
	}

	option = { #liberate with GAL
		name = annex.1014.d
		ai_chance = {
			base = 75
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0.3
				is_ally_with = UKR
			}
		}
		trigger = {
			OR = {
				has_subject = GAL
				89 = { is_valid_annexation_state = yes } #Krakow
				91 = { is_valid_annexation_state = yes } #Lwow
			}
			NOT = {
				89 = { is_core_of = POL } #Krakow
				91 = { is_core_of = POL } #Lwow
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					is_core_of = POL
					region = 155 #Galicia
				}
				NOT = {
					state = 80 #Cernauti
					state = 713 #Suceava
				}
				is_claim_or_core_of_ROOT = no
			}
			POL = { transfer_state = PREV }
		}
		if = {
			limit = { has_subject = GAL }
			hidden_effect = {
				GAL = {
					every_owned_state = {
						limit = {
							OR = {
								state = 80 #Cernauti
								state = 713 #Suceava
							}
						}
						ROOT = { transfer_state = PREV }
					}
				}
			}
			POL = {
				annex_country = {
					target = GAL
					transfer_troops = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = POL }
		puppet_released_tag_nocosmetic = yes
		hidden_effect = {
			GAL_generals_join_poland = yes
			if = {
				limit = { tag = GER }
				var:tag_to_release = { country_event = poland.231 }
			}
			else = {
				var:tag_to_release = { set_cosmetic_tag = POL_REPUBLIC }
			}
		}
	}

	option = { #annex
		name = annex.1014.e
		trigger = {
			OR = {
				tag = TRM
				has_completed_focus = RUS_Expansionism
			}
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = {
				OR = {
					state = 10 #Warsaw
					state = 87 #Kalisz
					state = 90 #Kielce
					state = 92 #Lublin
					state = 97 #Bialystok
					state = 98 #Plock
					state = 1088 #Chelm
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		set_country_flag = POL_CONQ
		occupy_medium_country = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = {
				tag = TRM
				has_completed_focus = RUS_Expansionism
			}
		}
		set_country_flag = POL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Southern Lithuania / Fate of Bialystok
	id = annex.1015
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1015 FROM = [From.GetName]" }
	title = annexation_BIALYSTOK_CONQ
	desc = annexation_BIALYSTOK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Poland
		name = annex.1015.a
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
				AND = {
					owns_state = 94 #Volkovysk
					owns_state = 96 #Vilnius
				}
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = POL }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Belarus
		name = annex.1015.b
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			WHR = {
				ROOT_can_grant_land = yes
				OR = {
					owns_state = 94 #Volkovysk
					94 = { is_valid_annexation_state = yes }
				}
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				OR = {
					state = 94 #Volkovysk
					state = 97 #Bialystok
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #Give it to Lithuania
		name = annex.1015.c
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			LIT = {
				ROOT_can_grant_land = yes
				OR = {
					is_subject_of = ROOT
					94 = { is_claim_or_core_of_PREV = yes }
					97 = { is_claim_or_core_of_PREV = yes }
				}
			}
			OR = {
				LIT = { owns_state = 94 } #Volkovysk
				94 = { is_valid_annexation_state = yes }
			}
			OR = {
				LIT = { owns_state = 96 } #Vilnius
				96 = { is_valid_annexation_state = yes }
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				OR = {
					state = 94 #Volkovysk
					state = 96 #Vilnius
					state = 97 #Bialystok
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #Give Bialystok to Poland
		name = annex.1015.e
		trigger = {
			owns_state = 94 #Volkovysk
			owns_state = 96 #Vilnius
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = POL }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it all to Poland
		name = annex.1015.f
		trigger = {
			owns_state = 94 #Volkovysk
			owns_state = 96 #Vilnius
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = POL }
		every_owned_state = {
			limit = {
				OR = {
					state = 94 #Volkovysk
					state = 96 #Vilnius
					state = 97 #Bialystok
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Split between Poland and Belarus/Russia
		name = annex.1015.d
		trigger = {
			owns_state = 94 #Volkovysk
			OR = {
				96 = { is_valid_annexation_state = no } #Vilnius
				var:11.owner = { is_russian_tag = yes }
			}
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
			var:204.owner = {
				OR = {
					AND = {
						tag = WHR
						ROOT_can_grant_land = yes
					}
					AND = {
						is_russian_tag = yes
						is_ally_with = ROOT
						OR = {
							96 = { is_valid_annexation_state = no } #Vilnius
							LIT = { ROOT_can_grant_land = no }
						}
					}
				}
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = POL }
		97 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = {
				var:204.owner = { is_russian_tag = yes }
				204 = { is_core_of = owner }
			}
			94 = { transfer_state_and_add_core = yes }
		}
		else = {
			94 = { transfer_state_and_add_claim = yes }
		}
		custom_effect_tooltip = tooltip_white_line

		if = {
			limit = { 96 = { is_valid_annexation_state = yes } }
			if = {
				limit = {
					var:11.owner = { is_russian_tag = yes }
					11 = { is_core_of = owner }
				}
				96 = { transfer_state_and_add_core = yes }
			}
			else = {
				96 = { transfer_state_and_add_claim = yes }
			}
		}
	}

	option = { #Split three-way
		name = annex.1015.g
		trigger = {
			owns_state = 94 #Volkovysk
			owns_state = 96 #Vilnius
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
			LIT = { ROOT_can_grant_land = yes }
			var:204.owner = {
				OR = {
					AND = {
						tag = WHR
						ROOT_can_grant_land = yes
					}
					AND = {
						is_russian_tag = yes
						is_ally_with = ROOT
					}
				}
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = {
				var:204.owner = { is_russian_tag = yes }
				204 = { is_core_of = owner }
			}
			94 = { transfer_state_and_add_core = yes }
		}
		else = {
			94 = { transfer_state_and_add_claim = yes }
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = LIT }
		96 = { transfer_state_and_add_core = yes }

		set_temp_variable = { tag_to_release = POL }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = POL
				tag = WHR
				tag = LIT
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = LIT }
			add_state_core = 94 #Volkovysk
			add_state_core = 97 #Bialystok
		}
		else_if = {
			limit = {
				OR = {
					tag = WHR
					96 = { is_valid_annexation_state = yes }
				}
			}
			add_state_claim = 94 #Volkovysk
			add_state_claim = 96 #Vilnius
			add_state_claim = 97 #Bialystok
		}
		else = {
			add_state_claim = 97 #Bialystok
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = LIT
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = BIALYSTOK_CONQ
	}
}

country_event = { #Fate of Estonia
	id = annex.1016
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1016 FROM = [From.GetName]" }
	title = annexation_EST_CONQ
	desc = annexation_EST_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet
		name = annex.1016.a
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0
				is_ally_with = BAT
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = EST }
		release_targeted_tag = yes
		hidden_effect = {
			event_target:EST_Johan_Pitka = { set_nationality = EST }
		}
	}

	option = { #give to UBD
		name = annex.1016.b
		trigger = {
			is_ally_with = BAT
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		add_to_temp_array = { target_cores_to_release = EST }
		transfer_territory_from_core_regions = yes
		hidden_effect = {
			event_target:EST_Johan_Pitka = { set_nationality = BAT }
		}
	}

	option = { #Integrate
		name = annex.1016.c
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = EST
			}
			hidden_effect = {
				if = {
					limit = { has_resistance = yes }
					set_temp_variable = { original_compliance = THIS.compliance }
					set_temp_variable = { original_resistance = THIS.resistance }
					cancel_resistance = yes
				}
				start_resistance = EST
				if = {
					limit = { has_variable = original_compliance }
					set_compliance = original_compliance
				}
				if = {
					limit = { has_variable = original_resistance }
					set_resistance = original_resistance
				}
			}
			if = {
				limit = {
					is_claim_or_core_of_ROOT = no
					NOT = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
				add_claim_by = ROOT
			}
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -25
		add_to_array = { RUS_integration_array = EST }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			is_russian_tag = no
		}
		occupy_small_country = yes
		set_country_flag = EST_CONQ
	}
}

country_event = { #Fate of Latvia
	id = annex.1017
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1017 FROM = [From.GetName]" }
	title = annexation_LAT_CONQ
	desc = annexation_LAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		if = {
			limit = {
				NOT = { country_exists = BAT }
			}
			add_to_temp_array = { core_removal_array = BAT }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	is_triggered_only = yes

	option = { #puppet
		name = annex.1017.a
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0
				is_ally_with = BAT
			}
			modifier = {
				factor = 0.25
				tag = GER
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = LAT }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = { has_socialist_government = yes }
					load_focus_tree = LAT_socialist_focus
					unlock_national_focus = LAT_the_second_iskolat
				}
				else = {
					load_focus_tree = LAT_auth_tree
					unlock_national_focus = LAT_2nd_awakening
				}
				if = {
					limit = { has_country_leader = { name = "Jānis Kurelis" } }
					kill_ideology_leader = paternal_autocrat
					kill_ideology_leader = authoritarian_democrat
				}
			}
		}
	}

	option = { #Liberate the Baltic Union!
		name = annex.1017.b
		trigger = {
			NOT = {
				tag = LIT
				tag = EST
				country_exists = BAT
			}
			has_socialist_government = yes
			OR = {
				11 = { is_valid_annexation_state = yes } #Kaunas
				13 = { is_valid_annexation_state = yes } #Estonia
				96 = { is_valid_annexation_state = yes } #Vilnius
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		every_state = {
			limit = {
				region = 37 #Baltic States
				NOT = {
					state = 96 #Vilnius
					state = 880 #Dvinsk
				}
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
		puppet_released_tag = yes
		setup_puppet_baltic_union = yes
	}

	option = { #restore UBD
		name = annex.1017.c
		trigger = {
			tag = GER
			NOT = { country_exists = BAT }
		}
		ai_chance = {
			base = 80
		}
		BAT = {
			add_state_core = 12 #Livonia
			add_state_core = 13 #Estonia
			add_state_core = 190 #Courland
			add_state_core = 191 #Northern Livonia
			add_state_core = 842 #Riga
		}
		set_temp_variable = { tag_to_release = BAT }
		release_targeted_tag = yes
	}

	option = { #give to BAT
		name = annex.1017.d
		trigger = {
			is_ally_with = BAT
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		add_to_temp_array = { target_cores_to_release = LAT }
		transfer_territory_from_core_regions_and_add_cores = yes
	}

	option = { #Integrate
		name = annex.1017.e
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = LAT
			}
			hidden_effect = {
				if = {
					limit = { has_resistance = yes }
					set_temp_variable = { original_compliance = THIS.compliance }
					set_temp_variable = { original_resistance = THIS.resistance }
					cancel_resistance = yes
					start_resistance = LAT
					if = {
						limit = { has_variable = original_compliance }
						set_compliance = original_compliance
					}
					if = {
						limit = { has_variable = original_resistance }
						set_resistance = original_resistance
					}
				}
			}
			if = {
				limit = {
					is_claim_or_core_of_ROOT = no
					NOT = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
				add_claim_by = ROOT
			}
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -25
		add_to_array = { RUS_integration_array = LAT }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			is_russian_tag = no
		}
		occupy_small_country = yes
		set_country_flag = LAT_CONQ
	}
}

country_event = { #Fate of Lithuania
	id = annex.1018
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1018 FROM = [From.GetName]" }
	title = annexation_LIT_CONQ
	desc = annexation_LIT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { 11 = { is_core_of = POL } } #Kaunas == PLC formed
				every_state = {
					limit = {
						is_core_of = LIT
						is_core_of = POL
					}
					remove_core_of = POL
					if = {
						limit = {
							has_resistance = no
							NOT = { is_core_of = owner }
						}
						start_resistance = LIT
					}
				}
				POL = { drop_cosmetic_tag = yes }
			}
			add_to_temp_array = { core_removal_array = LIT }
			remove_all_cores_and_claims_of_tags = yes
			LIT = {
				add_state_core = 11 #Kaunas
				add_state_core = 96 #Vilnius
				add_state_core = 189 #Samogitia
				add_state_core = 655 #Sudovia
				LIT_remove_monarchy = yes
				if = {
					limit = { has_country_leader = { name = "Unknown" ruling_only = no } }
					kill_ideology_leader = national_populist
				}
				remove_ideas = {
					LIT_german_aviation_advisors
					LIT_long_road_to_pluralism_idea
					LIT_german_economic_dominance_1
					LIT_german_economic_dominance_2
				}
			}
		}
	}

	option = { #Release Lithuania
		name = annex.1018.a
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = { state = 96 } #Vilnius
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		setup_puppet_lithuania = yes
	}

	option = { #give to BAT
		name = annex.1017.c
		trigger = {
			is_ally_with = BAT
			has_socialist_government = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		every_state = {
			limit = {
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = { state = 96 } #Vilnius
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #Integrate
		name = annex.1018.b
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 188 #Memel
					AND = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
			}
			add_claim_by = ROOT
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -40
		add_to_array = { RUS_integration_array = LIT }
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = LIT_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Vilnius
	id = annex.1019
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1019 FROM = [From.GetName]" }
	title = annexation_VILNIUS_CONQ
	desc = annexation_VILNIUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Lithuania
		name = annex.1019.a
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
			}
			LIT = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0.5
				is_ally_with = POL
			}
			modifier = {
				factor = 0
				is_ally_with = POL
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		96 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to BAT
		name = annex.1019.b
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
			}
			BAT = {
				is_ally_with = ROOT
				owns_state = 11 #Kaunas
			}
		}
		ai_chance = {
			base = 1000
		}
		set_temp_variable = { tag_to_release = BAT }
		96 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Poland
		name = annex.1019.c
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
			}
			POL = {
				owns_state = 97 #Bialystok
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_russian_tag = yes
				owns_state = 11 #Kaunas
			}
			modifier = {
				factor = 0
				is_ally_with = LIT
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		96 = { transfer_state_and_add_core = yes }
	}

	option = { #give to White Ruthenia
		name = annex.1019.d
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					is_ally_with = LIT
					is_ally_with = POL
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		96 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = POL
				tag = WHR
				tag = BAT
				AND = {
					is_russian_tag = yes
					owns_state = 11 #Kaunas
				}
			}
		}
		ai_chance = {
			base = 80
		}
		add_state_claim = 96
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				AND = {
					is_russian_tag = yes
					owns_state = 11 #Kaunas
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = VILNIUS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Austria
	id = annex.1020
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1020 FROM = [From.GetName]" }
	title = annexation_AUS_CONQ
	desc = annexation_AUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			AUS = {
				if = {
					limit = { AUS_has_habsburgs = yes }
					kill_ideology_leader = social_democrat
					kill_ideology_leader = social_liberal
					kill_ideology_leader = market_liberal
					kill_ideology_leader = social_conservative
					kill_ideology_leader = authoritarian_democrat
					kill_ideology_leader = paternal_autocrat
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = AUS_paternal_autocrat_party_long
					name = AUS_paternal_autocrat_party
				}
				remove_ideas = {
					AUS_financial_ties_broken
					AUS_paid_reparations
					AUS_imperial_development_scheme
					AUS_DNF_political_instability
					AUS_DNF_political_instability-1
					AUS_DNF_political_instability-2
					AUS_kaiser_faith
					AUS_k_u_k_armee_bonus
					AUS_k_u_k_armee_bonus_2
				}
			}
			every_state = {
				limit = {
					OR = {
						is_core_of = AUS
						is_claimed_by = AUS
						has_variable = ambition_area_AUS
					}
					NOT = {
						state = 4 #Lower Austria
						state = 152 #Upper Austria
						state = 153 #Tyrol
						state = 775 #Styria
						state = 835 #Carinthia
						state = 836 #Salzburg
						state = 942 #Vorarlberg
					}
				}
				remove_core_of = AUS
				remove_claim_by = AUS
				clear_variable = ambition_area_@AUS
			}
		}
	}

	option = { #liberate
		name = annex.1020.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = {
					ROOT = { has_government = social_liberal }
				}
				set_politics = {
					ruling_party = social_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = social_democrat
					popularity = 60
				}
			}
			else_if = {
				limit = {
					ROOT = { has_government = market_liberal }
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				set_political_party = {
					ideology = social_conservative
					popularity = 60
				}
			}
		}
	}

	option = { #give to Germany
		name = annex.1020.b
		trigger = {
			is_germany_or_splinter_tag = no
			var:52.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 0
		}
		set_temp_variable = { tag_to_release = 52.owner }
		add_to_temp_array = { target_cores_to_release = AUS }
		transfer_territory_from_core_regions = yes
		var:tag_to_release = { country_event = annex.15 }
	}

	option = { #Danubian Republic of Councils
		name = annex.1020.c
		trigger = {
			is_germany_or_splinter_tag = no
			has_socialist_government = yes
			AUS = { has_completed_focus = AUS_embrace_pluralism }
			43 = { #Budapest
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
		}
		ai_chance = {
			base = 1000
		}
		every_state = {
			limit = {
				OR = {
					region = 21 #Austria
					region = 27 #Hungary
					state = 664 #Southern Slovakia
				}
				NOT = {
					state = 39 #Southern Tyrol
					state = 45 #Vojvodina
					state = 488 #Trieste
					state = 736 #Istria
					state = 783 #Trentino
					state = 102 #Carniola
				}
			}
			add_core_of = AUS
		}
		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = DNF
		}
	}
	option = { #old idea
		name = annex.1020.d
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 100
		}
		set_country_flag = AUS_CONQ
		country_event = annex.15
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = AUS_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bohemia
	id = annex.1021
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1021 FROM = [From.GetName]" }
	title = annexation_CZE_CONQ
	desc = annexation_CZE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = CZE }
			remove_all_cores_and_claims_of_tags = yes
			CZE = {
				add_state_core = 9 #Prague
				add_state_core = 69 #Liberec
				add_state_core = 74 #Czech Silesia
				add_state_core = 75 #Moravia
				add_state_core = 786 #Budejovice
				add_state_claim = 924 #Teschen
				if = {
					limit = {
						has_country_leader = { name = "Johann II zu Schwarzenberg" ruling_only = yes }
					}
					kill_country_leader = yes
				}
			}
			if = {
				limit = { tag = POL }
				add_state_claim = 924 #Teschen
			}
		}
	}

	option = { #Liberate Bohemia
		name = annex.1021.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_socialist_government = yes
				AUS = {
					is_ally_with = ROOT
					has_cosmetic_tag = DNF
				}
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		release_targeted_tag = yes
	}

	option = { #Czechoslovakia
		name = annex.1021.b
		trigger = {
			70 = {
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		add_to_temp_array = { target_cores_to_release = CZE }
		add_to_temp_array = { target_cores_to_release = SLO }
		release_targeted_tag_from_core_regions_and_add_cores = yes
		var:tag_to_release = {
			set_cosmetic_tag = CZE_czechoslavakia
			if = {
				limit = { has_elected_government = yes }
				meta_effect = {
					text = {
						create_country_leader = {
							name = "Vavro Srobar"
							desc = "POLITICS_VAVRO_SROBAR_DESC"
							picture = "gfx/leaders/SLO/Portrait_SLO_Vavro_Srobar.png"
							expire = "1965.1.1"
							ideology = [OVERLORD_IDEOLOGY]
						}
					}
					OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
				}
				set_country_flag = was_puppeted
			}
		}
	}

	option = { #Give to Austria
		name = annex.1021.c
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 1000
		}
		set_temp_variable = { tag_to_release = AUS }
		add_to_temp_array = { target_cores_to_release = CZE }
		if = {
			limit = { has_subject = AUS }
			transfer_territory_from_core_regions_and_add_cores = yes
		}
		else = { transfer_territory_from_core_regions = yes }
	}

	option = { #Assimilate
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 70
		}
		add_state_claim = 9 #Prague
		add_state_claim = 69 #Liberec
		add_state_claim = 74 #Czech Silesia
		add_state_claim = 75 #Moravia
		add_state_claim = 786 #Budejovice
		add_state_claim = 924 #Teschen
		occupy_medium_country = yes
		recheck_annexations = yes
	}

	option = { #occupation
		name = annex.occupation
		trigger = {
			is_ai = no
			is_germany_or_splinter_tag = no
		}
		occupy_medium_country = yes
		set_country_flag = CZE_CONQ
	}
}

country_event = { #Fate of Galicia and Lodomeria
	id = annex.1022
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1022 FROM = [From.GetName]" }
	title = annexation_GAL_CONQ
	desc = annexation_GAL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1022.a #Liberate Galicia
		trigger = {
			NOT = {
				tag = POL
				tag = UKR
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0
				OR = {
					POL = { is_ally_of_ROOT = yes }
					UKR = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		release_targeted_tag = yes
	}

	option = {
		name = annex.1022.b #Give to Austria
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 71 #Eastern Slovakia
					owns_state = 75 #Moravia
				}
			}
			NOT = {
				tag = POL
				tag = UKR
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		88 = { remove_claim_and_add_core_of_target = yes }
		89 = { remove_claim_and_add_core_of_target = yes }
		91 = { remove_claim_and_add_core_of_target = yes }
		every_owned_state = {
			limit = { region = 155 } #Galicia
			var:tag_to_release = { transfer_state = PREV }
		}
	}

	option = {
		name = annex.1022.c #Give to Poland
		trigger = {
			POL = { is_ally_of_ROOT = yes }
			NOT = { tag = UKR }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0.5
				is_ally_with = UKR
			}
		}
		set_temp_variable = { tag_to_release = POL }
		88 = { add_claim_of_target = yes }
		89 = { add_claim_of_target = yes }
		91 = { add_claim_of_target = yes }
		every_owned_state = {
			limit = { region = 155 } #Galicia
			var:tag_to_release = { transfer_state = PREV }
		}
		hidden_effect = { GAL_generals_join_poland = yes }
	}

	option = {
		name = annex.1022.d #Give to Ukraine
		trigger = {
			UKR = { is_ally_of_ROOT = yes }
			NOT = {
				tag = POL
				owns_state = 88
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		89 = { remove_claim_and_add_core_of_target = yes }
		91 = { remove_claim_and_add_core_of_target = yes }
		every_owned_state = {
			limit = { region = 155 } #Galicia
			var:tag_to_release = { transfer_state = PREV }
		}
	}

	option = {
		name = annex.1022.e #Give to Ukraine, liberate the rest
		trigger = {
			UKR = { is_ally_of_ROOT = yes }
			owns_state = 88
			NOT = {
				tag = POL
				POL = { ROOT_can_grant_land = yes }
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
			modifier = {
				factor = 0
				POL = { is_ally_of_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		var:tag_to_release = { transfer_state = 88 } #Krakow
		puppet_released_tag = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { remove_claim_and_add_core_of_target = yes }
		91 = { remove_claim_and_add_core_of_target = yes }
		every_owned_state = {
			limit = {
				OR = {
					state = 89 #Stanislawow
					state = 91 #Lwow
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
	}

	option = {
		name = annex.1022.f #Split between UKR and POL
		trigger = {
			owns_state = 88 #Krakow
			owns_state = 89 #Stanislawow
			owns_state = 91 #Lwow
			UKR = { is_ally_of_ROOT = yes }
			POL = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}
		set_temp_variable = { tag_to_release = POL }
		88 = { transfer_state_and_add_claim = yes }
		91 = { transfer_state_and_add_claim = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { transfer_state_and_add_core = yes }
		hidden_effect = { GAL_generals_join_poland = yes }
	}

	option = {
		name = annex.1022.g #Keep Polish Galicia, give the rest to Ukraine
		trigger = {
			tag = POL
			UKR = { ROOT_can_grant_land = yes }
			owns_state = 89 #Stanislawow
		}
		ai_chance = {
			base = 0
		}
		add_state_claim = 88
		add_state_claim = 91
		GAL_generals_join_poland = yes
		set_temp_variable = { tag_to_release = UKR }
		89 = { transfer_state_and_add_core = yes }
	}

	option = {
		name = annex.1022.h #Keep Ukrainian Galicia, liberate the rest
		trigger = {
			tag = UKR
			owns_state = 88
			owns_state = 91
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				POL = { ROOT_can_grant_land = yes }
			}
		}
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = GAL }
		var:tag_to_release = { transfer_state = 88 } #Krakow
		puppet_released_tag = yes
	}

	option = {
		name = annex.1022.i #Keep Ukrainian Galicia, give the rest to Poland
		trigger = {
			tag = UKR
			POL = { ROOT_can_grant_land = yes }
			owns_state = 88
			owns_state = 91
		}
		ai_chance = {
			base = 100
		}
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = POL }
		88 = { transfer_state_and_add_claim = yes }
		hidden_effect = { GAL_generals_join_poland = yes }
	}

	option = {
		name = annex.1022.j #Keep Ukrainian Galicia, occupy the rest
		trigger = {
			tag = UKR
			owns_state = 88
			owns_state = 91
		}
		ai_chance = {
			base = 0
		}
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		occupy_small_country = yes
	}

	option = { #split with POL
		name = annex.1022.k
		trigger = {
			is_russian_tag = yes
			is_ally_with = POL
			owns_state = 89 #Stanislawow
		}
		ai_chance = {
			base = 0
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 88 #Krakow
					state = 91 #Lwow
				}
				is_claim_or_core_of_ROOT = no
			}
			POL = { transfer_state = PREV }
		}
		hidden_effect = { GAL_generals_join_poland = yes }

		custom_effect_tooltip = tooltip_white_line
		add_state_claim = 89 #Stanislawow
		occupy_small_country = yes
	}

	option = { #annex
		name = annex.1022.l
		trigger = {
			has_completed_focus = RUS_Expansionism
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = {
				region = 155 #Galicia
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		occupy_medium_country = yes
	}

	option = { #annex
		name = annex.integration
		trigger = {
			tag = AUS
			AUS_is_unified = yes
		}
		ai_chance = {
			base = 1000
		}
		88 = { remove_claim_and_add_core_of_ROOT = yes }
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			tag = POL
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 88
		add_state_claim = 89
		add_state_claim = 91
		GAL_generals_join_poland = yes
	}

	option = { #Occupy Galicia
		name = annex.occupation
		trigger = {
			NOT = {
				tag = POL
				tag = UKR
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
				has_completed_focus = RUS_Expansionism
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = GAL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bucovina
	id = annex.1023
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1023 FROM = [From.GetName]" }
	title = annexation_BUKOVINA_CONQ
	desc = annexation_BUKOVINA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1023.a #Give it to AUS
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
					AND = {
						owns_state = 713 #Suceava
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 76 #Cluj
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
			}
		}
		ai_chance = {
			base = 40
		}
		set_temp_variable = { tag_to_release = AUS }
		80 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
		713 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
	}

	option = {
		name = annex.1023.b #Give it to GAL
		trigger = {
			GAL = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				tag = ROM
				tag = TRS
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = GAL }
			}
			modifier = {
				factor = 10
				GAL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		80 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
		713 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
	}

	option = {
		name = annex.1023.c #Give it to ROM
		trigger = {
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				tag = GAL
				tag = TRS
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = ROM }
			}
			modifier = {
				factor = 10
				ROM = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		80 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_or_claim_of_target_and_transfer_if_owned = yes
			}
		}
		713 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_or_claim_of_target_and_transfer_if_owned = yes
			}
		}
	}

	option = {
		name = annex.1023.d #Give it to TRS
		trigger = {
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 10
				ROOT = { is_ally_with = TRS }
			}
			modifier = {
				factor = 10
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = TRS }
		80 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_or_claim_of_target_and_transfer_if_owned = yes
			}
		}
		713 = {
			if = {
				limit = { is_claim_or_core_of_ROOT = no }
				add_core_or_claim_of_target_and_transfer_if_owned = yes
			}
		}
	}

	option = {
		name = annex.1023.e #Give it to POL
		trigger = {
			POL = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 10
				POL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				POL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { add_claim_of_target_and_transfer_if_owned = yes }
		if = {
			limit = { 713 = { is_valid_annexation_state = yes } }
			var:tag_to_release = { transfer_state = 713 }
		}
	}

	option = {
		name = annex.1023.f #Give it to UKR
		trigger = {
			UKR = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = UKR }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { add_claim_of_target_and_transfer_if_owned = yes }
		if = {
			limit = { 713 = { is_valid_annexation_state = yes } }
			var:tag_to_release = { transfer_state = 713 }
		}
	}

	option = {
		name = annex.1023.g #Split it between UKR and ROM
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			UKR = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				UKR = { is_ally_of_ROOT = yes }
				ROM = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
				ROM = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { transfer_state_and_add_core = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = ROM }
		713 = { transfer_state_and_add_claim_or_core = yes }
	}

	option = {
		name = annex.1023.h #Split it between UKR and TRS
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			UKR = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				UKR = { is_ally_of_ROOT = yes }
				TRS = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { transfer_state_and_add_core = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = TRS }
		713 = { transfer_state_and_add_core = yes }
	}

	option = {
		name = annex.1023.i #Split it between POL and ROM
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			POL = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				POL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				add = 10
				POL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { transfer_state_and_add_claim = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = ROM }
		713 = { transfer_state_and_add_claim_or_core = yes }
	}

	option = {
		name = annex.1023.j #Split it between POL and TRS
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			POL = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				POL = { is_ally_of_ROOT = yes }
				TRS = { is_ally_of_ROOT = yes }
			}
			modifier = {
				add = 10
				POL = { same_government_type_as_ROOT = yes }
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { transfer_state_and_add_claim = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = TRS }
		713 = { transfer_state_and_add_claim_or_core = yes }
	}

	option = { #split with ROM
		name = annex.1023.k
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			ROM = { ROOT_can_grant_land = yes }
			OR = {
				has_completed_focus = RUS_Expansionism
				AND = {
					tag = UKR
					owns_state = 89 #Stanislawow
				}
				AND = {
					tag = POL
					owns_state = 89 #Stanislawow
				}
			}
		}
		ai_chance = {
			base = 10
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
		custom_effect_tooltip = tooltip_white_line
		713 = { save_event_target_as = granted_land }
		ROM = {
			add_state_claim = 713 #Suceava
			transfer_state = 713
			country_event = annex.38
		}
		recheck_annexations = yes
	}

	option = { #split with TRS
		name = annex.1023.l
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			TRS = { ROOT_can_grant_land = yes }
			OR = {
				has_completed_focus = RUS_Expansionism
				AND = {
					tag = UKR
					owns_state = 89 #Stanislawow
				}
				AND = {
					tag = POL
					owns_state = 89 #Stanislawow
				}
			}
		}
		ai_chance = {
			base = 10
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
		custom_effect_tooltip = tooltip_white_line
		713 = { save_event_target_as = granted_land }
		TRS = {
			add_state_claim = 713 #Suceava
			transfer_state = 713
			country_event = annex.38
		}
		recheck_annexations = yes
	}

	option = { #annex Cernauti
		name = annex.1023.m
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			OR = {
				has_completed_focus = RUS_Expansionism
				AND = {
					tag = UKR
					owns_state = 89 #Stanislawow
				}
				AND = {
					tag = POL
					owns_state = 89 #Stanislawow
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
			}
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
	}

	option = { #annex
		name = annex.integration
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = no } #Suceava
			OR = {
				has_completed_focus = RUS_Expansionism
				AND = {
					tag = UKR
					owns_state = 89 #Stanislawow
				}
				AND = {
					tag = POL
					owns_state = 89 #Stanislawow
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
			}
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
	}

	option = { #annex
		name = annex.integration
		trigger = {
			tag = ROM
		}
		ai_chance = {
			base = 1000
		}
		80 = { add_claim_of_ROOT = yes }
		713 = { add_claim_of_ROOT = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = GAL
				tag = TRS
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		80 = { remove_claim_and_add_core_of_ROOT = yes }
		713 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = ROM
				tag = TRS
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
				AND = {
					owns_state = 89 #Stanislawow
					80 = { is_valid_annexation_state = yes }
					OR = {
						tag = UKR
						tag = POL
						has_completed_focus = RUS_Expansionism
					}
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = BUKOVINA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Hungary
	id = annex.1024
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1024 FROM = [From.GetName]" }
	title = annexation_HUN_CONQ
	desc = annexation_HUN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			HUN = {
				if = {
					limit = {
						has_country_leader = { name = "IV. Károly" ruling_only = no }
					}
					kill_ideology_leader = paternal_autocrat
				}
			}
			add_to_temp_array = { core_removal_array = HUN }
			remove_all_cores_and_claims_of_tags = yes
			every_state = {
				limit = {
					OR = {
						state = 43 #Central Hungary
						state = 154 #Alfold
						state = 155 #Transdanubia
					}
				}
				add_core_of = HUN
			}
			if = {
				limit = {
					70 = { is_valid_annexation_state = no } #Western Slovakia
					SLO = { ROOT_can_grant_land = no }
				}
				HUN = { add_state_core = 664 } #Southern Slovakia
			}
		}
	}

	option = { #Liberate Greater Hungary
		name = annex.1024.a
		trigger = {
			NOT = { tag = ROM }
			OR = {
				70 = { is_valid_annexation_state = yes } #Western Slovakia
				84 = { is_valid_annexation_state = yes } #Transylvania
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					tag = POL
					tag = RUS
					tag = SOV
				}
			}
			modifier = {
				factor = 10
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				tag = ROM
				has_government = national_populist
			}
			add_state_claim = 154
		}
		set_temp_variable = { tag_to_release = HUN }
		every_state = {
			limit = {
				OR = {
					state = 43 #Central Hungary
					state = 45 #Vojvodina
					state = 70 #Western Slovakia
					state = 71 #Eastern Slovakia
					state = 73 #Transcarpathia
					state = 76 #North Transylvania
					state = 82 #Banat
					state = 83 #Partium
					state = 84 #Transylvania
					state = 154 #Alfold
					state = 155 #Transdanubia
					state = 664 #Southern Slovakia
					state = 789 #Szeklerland
					state = 875 #West Banat
				}
			}
			add_claim_of_target_and_transfer_if_owned = yes
		}
		puppet_released_tag = yes
	}
	option = { #Liberate national Hungary
		name = annex.1024.b
		ai_chance = {
			base = 95
			modifier = {
				add = -70
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		release_targeted_tag = yes
	}
	option = { #Give to Austria
		name = annex.1031.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 1000
		}
		every_state = {
			limit = { is_core_of = HUN }
			if = {
				limit = { is_claimed_by = AUS }
				remove_claim_by = AUS
			}
			if = {
				limit = { NOT = { is_core_of = AUS } }
				add_core_of = AUS
			}
			if = {
				limit = { is_owned_by = ROOT }
				AUS = { transfer_state = PREV }
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = HUN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Slovakia
	id = annex.1025
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1025 FROM = [From.GetName]" }
	title = annexation_SLO_CONQ
	desc = annexation_SLO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			664 = { add_core_of = SLO } #Southern Slovakia
		}
	}

	option = {
		name = annex.1025.a #Liberate Slovakia
		trigger = {
			NOT = {
				tag = HUN
				country_exists = SLO
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
					owns_state = 43
					owns_state = 75
				}
			}
		}
		set_temp_variable = { tag_to_release = SLO }
		release_targeted_tag = yes
	}
	option = {
		name = annex.1025.c #Give Southern Slovakia to Hungary
		trigger = {
			owns_state = 664
			HUN = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				country_exists = SLO
			}
		}
		ai_chance = {
			base = 50
		}
		set_temp_variable = { tag_to_release = HUN }
		664 = { transfer_state_and_add_claim = yes }

		set_temp_variable = { tag_to_release = SLO }
		release_targeted_tag = yes
	}
	option = { #Give to Austria
		name = annex.1025.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 43
			}
			NOT = { tag = HUN }
		}
		ai_chance = {
			base = 1000
		}
		set_temp_variable = { tag_to_release = AUS }
		70 = { add_core_of_target_and_transfer_if_owned = yes } #Western Slovakia
		71 = { add_core_of_target_and_transfer_if_owned = yes } #Eastern Slovakia
		664 = { add_core_of_target_and_transfer_if_owned = yes } #Southern Slovakia
	}
	option = { #Give to Hungary
		name = annex.1025.e
		trigger = {
			HUN = { is_ally_of_ROOT = yes }
			NOT = { tag = HUN }
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = HUN }
		70 = { add_claim_of_target_and_transfer_if_owned = yes } #Western Slovakia
		71 = { add_claim_of_target_and_transfer_if_owned = yes } #Eastern Slovakia
		664 = { add_claim_of_target_and_transfer_if_owned = yes } #Southern Slovakia
	}
	option = { #Give to Bohemia
		name = annex.1025.f
		trigger = {
			CZE = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = CZE
			}
		}
		ai_chance = {
			base = 50
		}
		set_temp_variable = { tag_to_release = CZE }
		70 = { add_claim_of_target_and_transfer_if_owned = yes } #Western Slovakia
		71 = { add_claim_of_target_and_transfer_if_owned = yes } #Eastern Slovakia
		664 = { add_claim_of_target_and_transfer_if_owned = yes } #Southern Slovakia
		CZE = {
			set_cosmetic_tag = CZE_czechoslavakia
			if = {
				limit = {
					has_elected_government = yes
					is_subject_of = ROOT
				}
				meta_effect = {
					text = {
						create_country_leader = {
							name = "Vavro Srobar"
							desc = "POLITICS_VAVRO_SROBAR_DESC"
							picture = "gfx/leaders/SLO/Portrait_SLO_Vavro_Srobar.png"
							expire = "1965.1.1"
							ideology = [CZE_IDEOLOGY]
						}
					}
					CZE_IDEOLOGY = "[CZE.GetRulingIdeologySubtype]"
				}
			}
		}
	}
	option = { #annex
		name = annex.integration
		trigger = {
			tag = HUN
		}
		ai_chance = {
			base = 1000
		}
		70 = { add_claim_of_ROOT = yes } #Western Slovakia
		71 = { add_claim_of_ROOT = yes } #Eastern Slovakia
		664 = { add_claim_of_ROOT = yes } #Southern Slovakia
	}
	option = { #annex
		name = annex.1025.g
		trigger = {
			tag = CZE
		}
		ai_chance = {
			base = 1000
		}
		70 = { remove_claim_and_add_core_of_ROOT = yes } #Western Slovakia
		71 = { remove_claim_and_add_core_of_ROOT = yes } #Eastern Slovakia
		664 = { remove_claim_and_add_core_of_ROOT = yes } #Southern Slovakia
		set_cosmetic_tag = CZE_czechoslavakia
	}
	option = { #Occupy Slovakia
		name = annex.occupation
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = SLO_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Transcarpathia
	id = annex.1026
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1026 FROM = [From.GetName]" }
	title = annexation_SLO_TRCARP_CONQ
	desc = annexation_SLO_TRCARP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1026.a #Give it to HUN
		trigger = {
			HUN = {
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 154
					owns_state = 71
				}
			}
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				SLO = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				CZE = {
					is_ally_of_ROOT = yes
					owns_state = 71
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		73 = { transfer_state_and_add_claim = yes }
	}
	option = {
		name = annex.1026.b #Give it to AUS
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 154
					owns_state = 71
				}
			}
			NOT = {
				tag = AUS
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				SLO = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				CZE = {
					is_ally_of_ROOT = yes
					owns_state = 71
				}
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		73 = { transfer_state_and_add_core = yes }
	}
	option = {
		name = annex.1026.c #Give it to GAL
		trigger = {
			GAL = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				SLO = { is_ally_of_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		73 = { transfer_state_and_add_core = yes }
	}
	option = {
		name = annex.1026.e #Give it to CZE
		trigger = {
			CZE = {
				is_ally_of_ROOT = yes
				owns_state = 71
			}
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 200
		}
		set_temp_variable = { tag_to_release = CZE }
		73 = { transfer_state_and_add_core = yes }
	}
	option = {
		name = annex.1026.f #Give it to SLO
		trigger = {
			SLO = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = SLO }
		73 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = HUN }
			73 = { add_claim_of_ROOT = yes }
		}
		else = {
			73 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				tag = GAL
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = SLO_TRCARP_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Transylvania
	id = annex.1027
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1027 FROM = [From.GetName]" }
	title = annexation_TRS_CONQ
	desc = annexation_TRS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			for_each_scope_loop = {
				array = global.ROM_transylvania_states
				force_disable_resistance = { occupier = TRS clear = yes }
			}
		}
	}

	option = { #Liberate Transylvania
		name = annex.1027.a
		trigger = {
			NOT = {
				tag = HUN
				tag = ROM
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
					owns_state = 154
				}
			}
			modifier = {
				factor = 0
				HUN = { is_ally_of_ROOT = yes }
				84 = { is_core_of = HUN }
			}
			modifier = {
				factor = 0
				ROM = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				OR = {
					tag = SER
					tag = POL
					tag = ITA
				}
				ROM = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = TRS }
		release_targeted_tag = yes
	}
	option = { #Give to Austria
		name = annex.1027.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 154
			}
			NOT = {
				tag = HUN
				tag = ROM
				tag = AUS
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = AUS }
		every_state = {
			limit = { is_core_of = TRS }
			add_core_of_target_and_transfer_if_owned = yes
		}
		recheck_annexations = yes
	}
	option = { #Give to Hungary
		name = annex.1027.c
		trigger = {
			HUN = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = ROM
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = HUN }
		every_state = {
			limit = { is_core_of = TRS }
			add_claim_of_target_and_transfer_if_owned = yes
		}
		recheck_annexations = yes
	}
	option = { #Give to Romania
		name = annex.1027.e
		trigger = {
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				tag = HUN
				tag = ROM
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				OR = {
					is_ally_with = HUN
					AUS = {
						is_ally_with = ROOT
						AUS_is_unified = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		every_state = {
			limit = { is_core_of = TRS }
			add_core_or_claim_of_target_and_transfer_if_owned = yes
		}
	}
	option = { #Split between HUN and ROM
		name = annex.1027.f
		trigger = {
			owns_state = 83
			ROM = { ROOT_can_grant_land = yes }
			HUN = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = ROM
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = ROM }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		82 = { add_claim_of_target_and_transfer_if_owned = yes }
		83 = { add_claim_of_target_and_transfer_if_owned = yes }

		set_temp_variable = { tag_to_release = ROM }
		76 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		84 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		789 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
	}
	option = { #Split between AUS and ROM
		name = annex.1027.g
		trigger = {
			owns_state = 83
			ROM = { ROOT_can_grant_land = yes }
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 154
			}
			NOT = {
				tag = HUN
				tag = ROM
				tag = AUS
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = ROM }
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		82 = { add_core_of_target_and_transfer_if_owned = yes }
		83 = { add_core_of_target_and_transfer_if_owned = yes }

		set_temp_variable = { tag_to_release = ROM }
		76 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		84 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		789 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = ROM
				tag = HUN
			}
		}
		ai_chance = {
			base = 1000
		}
		every_state = {
			limit = {
				is_core_of = TRS
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		recheck_annexations = yes
	}
	option = { #annex
		name = annex.integration
		trigger = {
			tag = AUS
			AUS_is_unified = yes
		}
		ai_chance = {
			base = 1000
		}
		every_state = {
			limit = { is_core_of = TRS }
			remove_claim_and_add_core_of_ROOT = yes
		}
	}
	option = { #Occupy Transylvania
		name = annex.occupation
		trigger = {
			NOT = {
				tag = HUN
				tag = ROM
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = TRS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of West Banat
	id = annex.1028
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1028 FROM = [From.GetName]" }
	title = annexation_WESTBANAT_CONQ
	desc = annexation_WESTBANAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Serbia
		name = annex.1028.a
		trigger = {
			can_annex_west_banat = no
			SER = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = ROM
					is_ally_with = TRS
					is_ally_with = CRO
					is_ally_with = HUN
				}
				NOT = { is_ally_with = SER }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		875 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Croatia
		name = annex.1028.b
		trigger = {
			can_annex_west_banat = no
			CRO = {
				owns_state = 45 #Vojvodina
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = ROM
					is_ally_with = TRS
					is_ally_with = SER
					is_ally_with = HUN
				}
				NOT = { is_ally_with = CRO }
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		875 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Romania
		name = annex.1028.c
		trigger = {
			can_annex_west_banat = no
			var:82.owner = { #Banat
				OR = {
					tag = ROM
					tag = TRS
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = SER
					is_ally_with = CRO
					is_ally_with = HUN
				}
				NOT = { is_ally_with = 82.owner }
			}
		}
		set_temp_variable = { tag_to_release = 82.owner }
		if = {
			limit = {
				var:tag_to_release = { tag = TRS }
			}
			875 = { transfer_state_and_add_core = yes }
		}
		else = {
			875 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #give to Hungary
		name = annex.1028.d
		trigger = {
			can_annex_west_banat = no
			HUN = {
				owns_state = 45 #Vojvodina
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = POL
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		875 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1028.e #Give it to AUS
		trigger = {
			can_annex_vojvodina = no
			AUS = {
				owns_state = 45 #Vojvodina
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 40
		}
		set_temp_variable = { tag_to_release = AUS }
		875 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			can_annex_west_banat = yes
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = {
				OR = {
					tag = SER
					tag = ROM
					tag = TRS
					tag = HUN
				}
			}
			875 = { add_claim_of_ROOT = yes }
		}
		else = {
			875 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			can_annex_west_banat = no
		}
		set_country_flag = WESTBANAT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Vojvodina
	id = annex.1029
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1029 FROM = [From.GetName]" }
	title = annexation_VOJVODINA_CONQ
	desc = annexation_VOJVODINA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1026.a #Give it to HUN
		trigger = {
			can_annex_vojvodina = no
			HUN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = CRO
					is_ally_with = SER
				}
				NOT = { is_ally_with = HUN }
			}
			modifier = {
				factor = 0
				AUS = {
					owns_state = 43
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		45 = { transfer_state_and_add_claim = yes }
	}
	option = {
		name = annex.1026.b #Give it to AUS
		trigger = {
			can_annex_vojvodina = no
			AUS = {
				owns_state = 43 #Central Hungary
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 40
		}
		set_temp_variable = { tag_to_release = AUS }
		45 = { transfer_state_and_add_core = yes }
	}
	option = {
		name = annex.1029.a #Give it to SER/CRO
		trigger = {
			can_annex_vojvodina = no
			var:794.owner = { #Syrmia
				OR = {
					tag = CRO
					tag = SER
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = HUN
				NOT = { is_ally_with = 794.owner }
			}
		}
		set_temp_variable = { tag_to_release = 794.owner }
		45 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		name = annex.integration
		trigger = {
			can_annex_vojvodina = yes
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = {
				OR = {
					tag = SER
					tag = HUN
				}
			}
			45 = { add_claim_of_ROOT = yes }
		}
		else = {
			45 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			can_annex_vojvodina = no
		}
		set_country_flag = VOJVODINA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Burgenland
	id = annex.1030
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1030 FROM = [From.GetName]" }
	title = annexation_BURGENLAND_CONQ
	desc = annexation_BURGENLAND_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1030.a #give it to Austria/Germany
		trigger = {
			var:4.owner = {
				OR = {
					tag = AUS
					is_germany_or_splinter_tag = yes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = HUN
				NOT = { is_ally_with = 4.owner }
			}
		}
		set_temp_variable = { tag_to_release = 4.owner }
		784 = { transfer_state_and_add_core = yes }
	}

	option = {
		name = annex.1030.b #give it to Hungary
		trigger = {
			HUN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = 4.owner
				NOT = { is_ally_with = HUN }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		784 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = AUS
				tag = HUN
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = HUN }
			784 = { add_claim_of_ROOT = yes }
		}
		else = {
			784 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = BURGENLAND_CONQ
	}
}

country_event = { #Fate of Croatia
	id = annex.1031
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1031 FROM = [From.GetName]" }
	title = annexation_CRO_CONQ
	desc = annexation_CRO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = CRO }
			remove_all_cores_and_claims_of_tags = yes
			every_state = {
				limit = {
					OR = {
						state = 103 #Lika
						state = 109 #Posavina
						state = 794 #Syrmia
					}
				}
				add_core_of = CRO
			}
		}
	}

	option = { #liberate
		name = annex.1031.a
		ai_chance = {
			base = 70
		}
		set_temp_variable = { tag_to_release = CRO }
		release_targeted_tag = yes
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
	option = { #Give to Austria
		name = annex.1031.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
			NOT = {
				tag = HUN
				tag = SER
				tag = AUS
			}
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = AUS }
		every_state = {
			limit = {
				is_core_of = CRO
				is_claim_or_core_of_ROOT = no
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
	option = { #Give it to Serbia
		name = annex.1070.d
		ai_chance = {
			base = 200
			modifier = {
				factor = 0.1
				104 = { is_valid_annexation_state = no }
				NOT = {
					SER = { owns_state = 104 }
				}
			}
		}
		trigger = {
			SER = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		every_state = {
			limit = {
				is_core_of = CRO
				is_claim_or_core_of_ROOT = no
			}
			add_claim_of_target_and_transfer_if_owned = yes
		}
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
	option = { #Give to Hungary
		name = annex.1031.c
		trigger = {
			HUN = { is_ally_of_ROOT = yes }
			NOT = {
				tag = HUN
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 10
		}
		set_temp_variable = { tag_to_release = HUN }
		every_state = {
			limit = {
				is_core_of = CRO
				is_claim_or_core_of_ROOT = no
			}
			add_claim_of_target_and_transfer_if_owned = yes
		}
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = HUN
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = {
				OR = {
					tag = SER
					tag = HUN
				}
			}
			every_state = {
				limit = { is_core_of = CRO }
				add_claim_of_ROOT = yes
			}
		}
		else = {
			every_state = {
				limit = { is_core_of = CRO }
				remove_claim_and_add_core_of_target = yes
			}
		}
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = {
				tag = SER
				tag = HUN
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		set_country_flag = CRO_CONQ
		occupy_medium_country = yes
		hidden_effect = {
			CRO = { add_state_core = 163 } #Dalmatia
		}
	}
}

country_event = { #Fate of Dalmatia
	id = annex.1032
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1032 FROM = [From.GetName]" }
	title = annexation_CRO_DALMATIA_CONQ
	desc = annexation_CRO_DALMATIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give to Austria
		name = annex.1032.a
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 103 #Lika
			}
			NOT = {
				tag = AUS
				tag = CRO
				tag = SER
				tag = HUN
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = AUS }
		163 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Croatia
		name = annex.1032.b
		trigger = {
			CRO = { ROOT_can_grant_land = yes }
			NOT = {
				tag = SER
				tag = CRO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
				AND = {
					tag = HUN
					owns_state = 103 #Lika
				}
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = CRO }
		163 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Serbia
		name = annex.1032.c
		trigger = {
			SER = {
				is_ally_of_ROOT = yes
				owns_state = 103 #Lika
			}
			NOT = {
				tag = SER
				tag = CRO
				tag = HUN
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 40
		}
		set_temp_variable = { tag_to_release = SER }
		163 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give to Hungary
		name = annex.1032.d
		trigger = {
			HUN = {
				is_ally_of_ROOT = yes
				owns_state = 103 #Lika
			}
			NOT = {
				tag = SER
				tag = CRO
				tag = HUN
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = HUN }
		163 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Italians
		name = annex.1032.e
		trigger = {
			var:160.owner = {
				is_italian_tag = yes
				is_ally_of_ROOT = yes
			}
			NOT = {
				is_italian_tag = yes
				tag = SER
				tag = CRO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
				AND = {
					tag = HUN
					owns_state = 103 #Lika
				}
			}
		}
		ai_chance = {
			base = 5
		}
		set_temp_variable = { tag_to_release = 160.owner }
		163 = { transfer_state_and_add_claim = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = CRO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		163 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = HUN
				is_italian_tag = yes
			}
		}
		ai_chance = {
			base = 1000
		}
		163 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = SER
				tag = CRO
				AND = {
					tag = HUN
					owns_state = 103 #Lika
				}
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = CRO_DALMATIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Slovenia
	id = annex.1033
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1033 FROM = [From.GetName]" }
	title = annexation_SLV_CONQ
	desc = annexation_SLV_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate
		name = annex.1033.a
		trigger = {
			NOT = {
				tag = SER
				tag = AUS
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				AUS = {
					is_ally_of_ROOT = yes
					owns_state = 736
				}
			}
		}
		set_temp_variable = { tag_to_release = SLV }
		release_targeted_tag = yes
	}

	option = { #give to Austria
		name = annex.1033.b
		trigger = {
			AUS = { is_ally_with = ROOT }
			NOT = {
				tag = SER
				tag = AUS
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = AUS }
		add_to_temp_array = { target_cores_to_release = SLV }
		if = {
			limit = { has_subject = AUS }
			transfer_territory_from_core_regions_and_add_cores = yes
		}
		else = { transfer_territory_from_core_regions = yes }
		recheck_annexations = yes
	}

	option = { #give to Germany
		name = annex.1033.c
		trigger = {
			var:835.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
			is_germany_or_splinter_tag = no
			NOT = {
				tag = SER
				tag = AUS
			}
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = 835.owner }
		add_to_temp_array = { target_cores_to_release = SLV }
		if = {
			limit = { has_subject = AUS }
			transfer_territory_from_core_regions_and_add_cores = yes
		}
		else = { transfer_territory_from_core_regions = yes }
		recheck_annexations = yes
	}

	option = { #give to Serbia
		name = annex.1033.d
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				AUS = {
					is_ally_of_ROOT = yes
					owns_state = 736
				}
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				owns_state = 4 #Vienna
			}
		}
		trigger = {
			SER = {
				is_ally_with = ROOT
				OR = {
					owns_state = 109
					owns_state = 103
				}
			}
			NOT = {
				tag = SER
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		102 = { transfer_state_and_add_claim = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0.24
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				OR = {
					tag = SER
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 4 #Vienna
					}
				}
			}
			102 = { add_claim_by = ROOT }
			recheck_annexations = yes
		}
		else = {
			102 = { remove_claim_and_add_core_of_ROOT = yes }
			occupy_small_country = yes
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = SER
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = SLV_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of the Austrian Littoral
	id = annex.1034
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1034 FROM = [From.GetName]" }
	title = annexation_AUS_LIT_CONQ
	desc = annexation_AUS_LIT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give Italy
		name = annex.1034.a
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
			}
			var:759.owner = { #Friuli
				is_italian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = 759.owner }
		736 = { transfer_state_and_add_core = yes }
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give Austria
		name = annex.1034.b
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
			}
			AUS = { is_ally_with = ROOT }
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = AUS }
		736 = { transfer_state_and_add_core = yes }
	}

	option = { #Give Slovenia
		name = annex.1034.c
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
			}
			SLV = { is_ally_with = ROOT }
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = SLV }
		736 = { transfer_state_and_add_core = yes }
	}

	option = { #Give Serbia
		name = annex.1034.e
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
			}
			SER = {
				is_ally_with = ROOT
				OR = {
					owns_state = 102 #Carniola
					owns_state = 103 #Lika
				}
			}
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = SER }
		736 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give Croatia
		name = annex.1034.f
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
			}
			CRO = {
				is_ally_with = ROOT
				OR = {
					owns_state = 102 #Carniola
					owns_state = 103 #Lika
				}
			}
		}
		ai_chance = {
			base = 1
		}
		set_temp_variable = { tag_to_release = CRO }
		736 = { transfer_state_and_add_core = yes }
	}
	option = { #Give to Italians
		name = annex.1034.g
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
				SER = {
					is_ally_with = ROOT
					OR = {
						owns_state = 102 #Carniola
						owns_state = 103 #Lika
					}
				}
				CRO = {
					is_ally_with = ROOT
					OR = {
						owns_state = 102 #Carniola
						owns_state = 103 #Lika
					}
				}
			}
			var:759.owner = { #Friuli
				is_italian_tag = yes
				ROOT_can_grant_land = yes
				NOT = { is_ally_with = ROOT }
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				AUS = { is_ally_of_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = 759.owner }
		736 = { transfer_state_and_add_core = yes }
		var:tag_to_release = { country_event = annex.18 }
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				is_italian_tag = yes
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0.09
				is_germany_or_splinter_tag = yes
				owns_state = 4 #Vienna
			}
		}
		if = {
			limit = {
				OR = {
					is_italian_tag = yes
					tag = SER
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 4 #Vienna
					}
				}
			}
			if = {
				limit = { 736 = { is_claim_or_core_of_ROOT = no } }
				add_state_claim = 736
			}
			recheck_annexations = yes
		}
		else = {
			set_temp_variable = { tag_to_release = ROOT }
			736 = { remove_claim_and_add_core_of_target = yes }
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
				tag = CRO
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = AUS_LIT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Trieste
	id = annex.1035
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1035 FROM = [From.GetName]" }
	title = annexation_TRIESTE_CONQ
	desc = annexation_TRIESTE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give Italy
		name = annex.1034.a
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
			}
			var:759.owner = { #Friuli
				is_italian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = 759.owner }
		488 = { transfer_state_and_add_core = yes }
		var:tag_to_release = { country_event = annex.18 }
	}
	option = { #Give Austria
		name = annex.1034.b
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
			}
			AUS = {
				owns_state = 736 #Istria
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 10
		}
		set_temp_variable = { tag_to_release = AUS }
		488 = { transfer_state_and_add_core = yes }
	}
	option = { #Give Slovenia
		name = annex.1034.c
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
			}
			SLV = {
				owns_state = 736 #Istria
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 10
		}
		set_temp_variable = { tag_to_release = SLV }
		488 = { transfer_state_and_add_core = yes }
	}
	option = { #Give Serbia
		name = annex.1034.e
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
				tag = SER
			}
			SER = {
				owns_state = 736 #Istria
				SER_has_founded_yugoslavia = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 10
		}
		set_temp_variable = { tag_to_release = SER }
		488 = { transfer_state_and_add_claim = yes }
	}
	option = { #Give to Italians
		name = annex.1034.g
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				tag = SLV
			}
			var:759.owner = {
				is_italian_tag = yes
				ROOT_can_grant_land = yes
				NOT = { is_ally_with = ROOT }
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				AUS = {
					is_ally_of_ROOT = yes
					owns_state = 736 #Istria
				}
			}
		}
		set_temp_variable = { tag_to_release = 759.owner }
		488 = { transfer_state_and_add_core = yes }
		var:tag_to_release = { country_event = annex.18 }
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				is_italian_tag = yes
				tag = AUS
				tag = SLV
				AND = {
					tag = SER
					SER_has_founded_yugoslavia = yes
					owns_state = 736 #Istria
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 736 #Istria
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0.09
				is_germany_or_splinter_tag = yes
				owns_state = 736 #Istria
			}
		}
		if = {
			limit = {
				OR = {
					is_italian_tag = yes
					tag = SER
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 736 #Istria
					}
				}
			}
			if = {
				limit = { 488 = { is_claim_or_core_of_ROOT = no } }
				add_state_claim = 488
			}
			recheck_annexations = yes
		}
		else = {
			488 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				is_italian_tag = yes
				tag = AUS
				tag = SLV
				AND = {
					tag = SER
					SER_has_founded_yugoslavia = yes
					owns_state = 736 #Istria
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 736 #Istria
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = TRIESTE_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Southern Tirol & the Trentino
	id = annex.1036
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1036 FROM = [From.GetName]" }
	title = annexation_AUS_TRENT_CONQ
	desc = annexation_AUS_TRENT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give Italy
		name = annex.1034.a
		trigger = {
			NOT = { tag = AUS }
			is_italian_tag = no
			var:160.owner = {
				is_italian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = AUS
			}
		}
		set_temp_variable = { tag_to_release = 160.owner }
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				OR = {
					state = 39 #South Tyrol
					state = 783 #Trentino
				}
			}
			transfer_state_and_add_core = yes
		}
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give Austria
		name = annex.1034.b
		trigger = {
			NOT = { tag = AUS }
			is_italian_tag = no
			AUS = { is_ally_with = ROOT }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				any_other_country = {
					is_italian_tag = yes
					is_ally_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				OR = {
					state = 39 #South Tyrol
					state = 783 #Trentino
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #Divide it between our Italian and Austrian/German Allies
		name = annex.1036.a
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
			783 = { is_valid_annexation_state = yes } #Trentino
			39 = { is_valid_annexation_state = yes } #South Tyrol
			var:160.owner = {
				is_italian_tag = yes
				is_ally_with = ROOT
			}
			var:153.owner = {
				OR = {
					tag = AUS
					is_germany_or_splinter_tag = yes
				}
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
		}

		# Trentino
		set_temp_variable = { tag_to_release = 160.owner }
		783 = { transfer_state_and_add_core = yes }
		var:160.owner = { country_event = annex.18 }

		# South Tyrol
		set_temp_variable = { tag_to_release = 153.owner }
		39 = { transfer_state_and_add_core = yes }
	}

	option = { #Give the Italians their lands, and the rest to Germany/Austria
		name = annex.1036.b
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
			783 = { is_valid_annexation_state = yes } #Trentino
			39 = { is_valid_annexation_state = yes } #South Tyrol
			var:160.owner = {
				is_italian_tag = yes
				ROOT_can_grant_land = yes
				NOT = { is_ally_with = ROOT }
			}
			var:153.owner = {
				OR = {
					tag = AUS
					is_germany_or_splinter_tag = yes
				}
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
		}

		# South Tyrol
		set_temp_variable = { tag_to_release = 153.owner }
		39 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line

		# Trentino
		set_temp_variable = { tag_to_release = 160.owner }
		783 = { transfer_state_and_add_core = yes }
		var:160.owner = { country_event = annex.18 }
	}

	option = { #Annex the German lands, give the rest to Italy
		name = annex.1036.c
		trigger = {
			OR = {
				tag = AUS
				is_germany_or_splinter_tag = yes
			}
			owns_state = 4 #Vienna
			783 = { is_valid_annexation_state = yes } #Trentino
			39 = { is_valid_annexation_state = yes } #South Tyrol
			var:160.owner = {
				is_italian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}

		# South Tyrol
		add_state_core = 39
		custom_effect_tooltip = tooltip_white_line

		# Trentino
		set_temp_variable = { tag_to_release = 160.owner }
		783 = { transfer_state_and_add_core = yes }
		var:160.owner = { country_event = annex.18 }
	}

	option = { #Annex the Italian lands, give the rest to Germany/Austria
		name = annex.1036.d
		trigger = {
			is_italian_tag = yes
			783 = { is_valid_annexation_state = yes } #Trentino
			39 = { is_valid_annexation_state = yes } #South Tyrol
			var:153.owner = {
				OR = {
					tag = AUS
					is_germany_or_splinter_tag = yes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}

		# South Tyrol
		set_temp_variable = { tag_to_release = 153.owner }
		39 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line

		# Trentino
		add_state_claim = 783
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = AUS
				is_italian_tag = yes
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = { #Germany doesn't want Trentino
				factor = 0
				is_germany_or_splinter_tag = yes
				var:160.owner = {
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			modifier = { #Non-NatPop Italy is hesitant to annex Southern Tyrol
				factor = 0.25
				is_italian_tag = yes
				NOT = { has_government = national_populist }
				var:153.owner = {
					OR = {
						tag = AUS
						is_germany_or_splinter_tag = yes
					}
					ROOT_can_grant_land = yes
				}
			}
		}
		every_owned_state = {
			limit = {
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 39
					state = 783
				}
			}
			if = {
				limit = { ROOT = { is_italian_tag = yes } }
				if = {
					limit = { is_claim_or_core_of_ROOT = no }
					add_claim_by = ROOT
				}
			}
			else = {
				remove_claim_and_add_core_of_ROOT = yes
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = AUS
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = AUS_TRENT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Switzerland
	id = annex.1037
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1037 FROM = [From.GetName]" }
	title = annexation_SWI_CONQ
	desc = annexation_SWI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate
		name = annex.1037.a
		ai_chance = {
			base = 90
		}

		# Romandie back from French tags
		if = {
			limit = {
				760 = { # Romandie
					NOT = { is_core_of = SWI }
				}
			}
			760 = { add_core_of = SWI }
		}
		# Ticino back from Italian tags
		if = {
			limit = {
				761 = { # Ticino
					NOT = { is_core_of = SWI }
				}
			}
			761 = { add_core_of = SWI }
		}
		# The rest of the cores
		every_owned_state = {
			limit = {
				is_core_of = SWI
				is_not_claim_or_core_of_ROOT = yes
			}
			SWI = { transfer_state = PREV }
		}
		# Haute-Savoie (if ROOT is not French)
		if = {
			limit = {
				owns_state = 943 # Haute-Savoie
				is_french_tag = no
				NOT = {
					owns_state = 16 # Ile de France
					owns_state = 21 # Provence
					943 = { is_claim_or_core_of_ROOT = yes }
					any_allied_country = {
						943 = { is_claim_or_core_of_PREV = yes }
					}
				}
			}
			SWI = { transfer_state = 943 }
		}
		# clr SWI rename setting if SWI was NatPop and ROOT is not
		if = {
			limit = { NOT = { has_government = national_populist } }
			clr_global_flag = SWI_germanization
		}
		set_temp_variable = { tag_to_release = SWI }
		puppet_released_tag = yes
		if = {
			limit = { tag = GER }
			SWI = { complete_national_focus = SWI_german_aid }
			set_global_flag = SWI_germanization
		}
		else_if = {
			limit = { tag = AUS }
			SWI = { complete_national_focus = SWI_austrian_assisstance }
		}
		else_if = {
			limit = { has_socialist_government = yes }
			SWI = {
				complete_national_focus = SWI_bend_to_france
				unlock_national_focus = SWI_referendum_syndicalism
			}
		}
	}

	option = { #Take Romandie (French)
		name = annex.1037.b
		ai_chance = {
			base = 10
		}
		trigger = {
			is_french_tag = yes
			owns_state = 760 # Romandie
		}
		add_state_claim = 760

		set_temp_variable = { tag_to_release = SWI }
		release_targeted_tag = yes
		SWI = {
			if = {
				limit = { has_socialist_government = yes }
				complete_national_focus = SWI_bend_to_france
				unlock_national_focus = SWI_referendum_syndicalism
			}
		}
	}

	option = { #Take Ticino (Italian)
		name = annex.1037.c
		ai_chance = {
			base = 10
		}
		trigger = {
			is_italian_tag = yes
			owns_state = 761 # Ticino
		}
		add_state_claim = 761

		set_temp_variable = { tag_to_release = SWI }
		release_targeted_tag = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = SWI_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Switzerland II: Germany partitioning
	id = annex.1038
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1038 FROM = [From.GetName]" }
	title = annex.1038.t
	desc = annex.1038.d
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #unified swi
		name = annex.1038.a
		ai_chance = {
			base = 25
		}
		set_temp_variable = { tag_to_release = SWI }
		release_targeted_tag = yes
	}

	option = { #propose partition
		name = annex.1038.b
		trigger = {
			# Italy Checks
			OR = {
				var:158.owner = { #Piedmont
					is_italian_tag = yes
					has_capitulated = no
					OR = {
						is_subject = no
						is_subject_of = ROOT
						is_in_faction_with = ROOT
					}
					has_socialist_government = no
					NOT = {
						has_government = national_populist
						has_war_with = ROOT
					}
				}
				var:159.owner = { #Lombardy
					is_italian_tag = yes
					has_capitulated = no
					OR = {
						is_subject = no
						is_subject_of = ROOT
						is_in_faction_with = ROOT
					}
					has_socialist_government = no
					NOT = {
						has_government = national_populist
						has_war_with = ROOT
					}
				}
			}
			# France Checks
			27 = { #Burgundy
				owner = {
					is_french_tag = yes
					has_capitulated = no
					OR = {
						is_subject = no
						is_subject_of = ROOT
						is_in_faction_with = ROOT
					}
					has_socialist_government = no
					NOT = { has_war_with = ROOT }
				}
			}
		}
		ai_chance = {
			base = 75
		}
		add_state_claim = 3
		add_state_claim = 151
		hidden_effect = {
			country_event = {
				id = annex.90
				days = 360
			}
		}
		if = {
			limit = {
				var:158.owner = {
					is_italian_tag = yes
					has_capitulated = no
					OR = {
						is_subject = no
						is_subject_of = ROOT
						is_in_faction_with = ROOT
					}
					has_socialist_government = no
					NOT = {
						has_government = national_populist
						has_war_with = ROOT
					}
				}
			}
			var:158.owner = {
				country_event = {
					id = annex.92
					days = 1
				}
			}
		}
		else = {
			var:159.owner = {
				country_event = {
					id = annex.92
					days = 1
				}
			}
		}
		27 = {
			owner = {
				country_event = {
					id = annex.96
					days = 1
				}
			}
		}
	}

	option = { #annex all
		name = annex.1038.c
		ai_chance = {
			base = 0
		}
		add_state_claim = 3
		add_state_claim = 151
		hidden_effect = {
			country_event = {
				id = annex.90
				days = 360
			}
		}
		set_country_flag = SWI_CONQ
	}
}

country_event = { #Fate of Romandie
	id = annex.1039
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1039 FROM = [From.GetName]" }
	title = annexation_ROMANDIE_CONQ
	desc = annexation_ROMANDIE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SWI
		name = annex.1039.a
		trigger = {
			SWI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				var:27.owner = { #Bourgogne
					is_italian_tag = yes
					is_ally_with = ROOT
				}
				NOT = { is_ally_with = SWI }
			}
			modifier = {
				factor = 10
				is_ally_with = SWI
			}
		}
		SWI = { transfer_state = 760 }
	}

	option = { #Return to our French allies
		name = annex.1039.b
		trigger = {
			is_french_tag = no
			var:27.owner = { #Bourgogne
				is_french_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 5
				is_ally_with = var:27.owner
			}
		}
		var:27.owner = { transfer_state = 760 }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = {
			base = 100
		}
		add_political_power = -75
		add_state_claim = 760
		recheck_annexations = yes
	}

	option = { #Keep it
		name = annex.4005.d
		trigger = {
			is_ai = no
			is_french_tag = no
		}
		occupy_small_country = yes
		set_country_flag = ROMANDIE_CONQ
	}
}

country_event = { #Fate of Ticino/Tessin
	id = annex.1040
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1040 FROM = [From.GetName]" }
	title = annexation_TICINO_CONQ
	desc = annexation_TICINO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SWI
		name = annex.1039.a
		trigger = {
			SWI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				var:159.owner = { #Lombardy
					is_italian_tag = yes
					is_ally_with = ROOT
				}
				NOT = { is_ally_with = SWI }
			}
			modifier = {
				factor = 10
				is_ally_with = SWI
			}
		}
		SWI = { transfer_state = 761 }
	}

	option = { #Return to our Italian allies
		name = annex.1040.c
		trigger = {
			is_italian_tag = no
			var:159.owner = { #Lombardy
				is_italian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 5
				is_ally_with = var:159.owner
			}
		}
		var:159.owner = { transfer_state = 761 }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_italian_tag = yes
		}
		ai_chance = {
			base = 100
		}
		add_political_power = -75
		add_state_claim = 761
		recheck_annexations = yes
	}

	option = { #Keep it
		name = annex.occupation
		trigger = {
			is_ai = no
			is_italian_tag = no
		}
		occupy_small_country = yes
		set_country_flag = TICINO_CONQ
	}
}

#####################################
##   W E S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of France
	id = annex.1041
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1041 FROM = [From.GetName]" }
	title = annexation_FRA_CONQ
	desc = annexation_FRA_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	option = {
		name = annex.1041.a #Restore the Commune of France!
		ai_chance = {
			base = 1000
		}
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = FRA }
		}
		set_temp_variable = { tag_to_release = FRA }
		release_france = yes

		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = yes
			}
			set_autonomy = {
				target = FRA
				autonomy_state = autonomy_free
			}
			add_to_faction = FRA
		}
	}

	option = {
		name = annex.1041.b #Restore National France!
		ai_chance = {
			base = 1000
		}
		trigger = {
			has_socialist_government = no
			is_ally_with = ENT
			NOT = { country_exists = NFA }
		}
		set_temp_variable = { tag_to_release = NFA }
		release_france = yes
		NFA = {
			set_capital = 16
			set_variable = { historical_capital_state = 16.id }
		}
		ENT = { add_to_faction = NFA }
	}

	option = {
		name = annex.1041.c #Set up a French Puppet Government
		ai_chance = {
			base = 90
			modifier = { # Make the GER AI, more likely to go to the Congress of Lyon if NFA is a player
				factor = 0.5
				tag = GER
				NFA = { is_ai = no }
			}
		}
		trigger = {
			has_socialist_government = no
			NOT = {
				is_ally_with = ENT
				is_ally_with = NFA
				country_exists = FRP
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		release_france = yes
	}

	option = {
		name = annex.1041.d #Set up a French Puppet Government and liberate Brittany
		ai_chance = {
			base = 30
		}
		trigger = {
			has_socialist_government = no
			owns_state = 14
			NOT = {
				is_ally_with = ENT
				is_ally_with = NFA
				country_exists = FRP
				AND = {
					tag = GER
					NFA = {
						any_owned_state = { is_european_france = yes }
					}
				}
			}
		}
		BRI = {
			add_state_core = 14
			add_state_core = 983
		}
		set_temp_variable = { tag_to_release = BRI }
		release_targeted_tag = yes

		set_temp_variable = { tag_to_release = FRP }
		release_france = yes
	}

	option = {
		name = annex.1041.e #Give it to our French allies
		trigger = {
			is_ally_with = NFA
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				is_european_france = yes
				is_claim_or_core_of_ROOT = no
				if = {
					limit = {
						ROOT = { is_italian_tag = yes }
					}
					NOT = {
						state = 762 #Nice
						state = 735 #Savoy
						state = 943 #Upper Savoy
					}
				}
				else_if = {
					limit = {
						ROOT = { is_germany_or_splinter_tag = yes }
					}
					NOT = { state = 28 } #Alsace-Lorraine
				}
			}
			NFA = { transfer_state = PREV }
		}
	}

	option = {
		name = annex.1041.f #Meet with the French
		trigger = {
			tag = GER
			NFA = {
				any_owned_state = { is_european_france = yes }
			}
		}
		ai_chance = {
			base = 225
		}
		NFA = { country_event = nfa.120 }
	}

	option = {
		name = annex.occupation
		trigger = { is_ai = no }
		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = occupied_france
			}
		}
		occupy_large_country = yes
		set_country_flag = FRA_CONQ
	}
}

country_event = { #Fate of Brittany
	id = annex.1042
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1042 FROM = [From.GetName]" }
	title = annexation_BRI_CONQ
	desc = annexation_BRI_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	option = { #Liberate Brittany
		name = annex.1042.a
		trigger = {
			is_french_tag = no
		}
		ai_chance = {
			base = 10
		}
		hidden_effect = {
			BRI = {
				add_state_core = 14 #Upper Brittany
				add_state_core = 983 #Brittany
			}
		}
		set_temp_variable = { tag_to_release = BRI }
		release_targeted_tag = yes
	}

	option = { #give to France
		name = annex.1042.b
		trigger = {
			is_french_tag = no
			var:30.owner = { #Loire
				is_french_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 90
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 14 #Upper Brittany
					state = 983 #Brittany
				}
			}
			var:30.owner = { #Loire
				add_state_core = PREV
				transfer_state = PREV
			}
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 14 #Upper Brittany
					state = 983 #Brittany
				}
			}
			add_core_of = ROOT
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
		set_country_flag = BRI_CONQ
	}
}

country_event = { #Fate of Pas de Calais
	id = annex.1043
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1043 FROM = [From.GetName]" }
	title = annexation_PASDECALAIS_CONQ
	desc = annexation_PASDECALAIS_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { BEL = { ROOT_can_grant_land = yes } }
			BEL = { save_event_target_as = belgium }
		}
		else_if = {
			limit = { WLL = { ROOT_can_grant_land = yes } }
			WLL = {
				if = {
					limit = {
						OR = {
							has_cosmetic_tag = BEL
							has_cosmetic_tag = BEL_flanders_wallonia
						}
					}
					save_event_target_as = belgium
				}
				else = {
					save_event_target_as = wallonia
				}
			}
		}
		if = {
			limit = { FLN = { ROOT_can_grant_land = yes } }
			FLN = { save_event_target_as = flanders }
		}
		if = {
			limit = {
				var:24.owner = { #Picardy
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:24.owner = { save_event_target_as = france }
		}
	}

	option = { #give to France
		name = annex.1043.a
		trigger = {
			is_french_tag = no
			has_event_target = france
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas de Calais
					state = 29 #Maritime Flanders
					state = 980 #French Hainaut
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #give to Belgium
		name = annex.1043.b
		trigger = {
			is_french_tag = no
			has_event_target = belgium
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Maritime Flanders
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #give to Wallonia
		name = annex.1043.c
		trigger = {
			is_french_tag = no
			has_event_target = wallonia
			OR = {
				event_target:wallonia = { owns_state = 980 } #French Hainaut
				980 = { is_valid_annexation_state = yes }
			}
			OR = {
				29 = { is_valid_annexation_state = no }
				NOT = { has_event_target = flanders }
			}
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = WLL }
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Maritime Flanders
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #give to Flanders
		name = annex.1043.d
		trigger = {
			is_french_tag = no
			17 = { is_valid_annexation_state = no }
			980 = { is_valid_annexation_state = no }
			has_event_target = flanders
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = FLN }
		29 = { transfer_state_and_add_core = yes } #Maritime Flanders
	}

	option = { #split between Flanders and Wallonia
		name = annex.1043.e
		trigger = {
			is_french_tag = no
			29 = { is_valid_annexation_state = yes } #Maritime Flanders
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas de Calais
				980 = { is_valid_annexation_state = yes } #French Hainaut
			}
			has_event_target = wallonia
			has_event_target = flanders
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = FLN }
		29 = { transfer_state_and_add_core = yes } #Maritime Flanders
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = WLL }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #split between France and Belgium
		name = annex.1043.f
		trigger = {
			is_french_tag = no
			17 = { is_valid_annexation_state = yes } #Pas de Calais
			OR = {
				29 = { is_valid_annexation_state = yes } #Maritime Flanders
				980 = { is_valid_annexation_state = yes } #French Hainaut
			}
			has_event_target = france
			has_event_target = belgium
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = event_target:france }
		17 = { transfer_state_and_add_core = yes } #Maritime Flanders
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:belgium }
		if = {
			limit = { 29 = { is_valid_annexation_state = yes } }
			29 = { transfer_state_and_add_core = yes }
		}
		if = {
			limit = { 980 = { is_valid_annexation_state = yes } }
			29 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #split between France and Wallonia
		name = annex.1043.g
		trigger = {
			is_french_tag = no
			980 = { is_valid_annexation_state = yes } #French Hainaut
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas de Calais
				29 = { is_valid_annexation_state = yes } #Maritime Flanders
			}
			has_event_target = france
			has_event_target = wallonia
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas de Calais
					state = 29 #Maritime Flanders
				}
			}
			transfer_state_and_add_core = yes
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = WLL }
		980 = { transfer_state_and_add_claim = yes } #French Hainaut
	}

	option = { #split between France and Flanders
		name = annex.1043.h
		trigger = {
			is_french_tag = no
			29 = { is_valid_annexation_state = yes } #Maritime Flanders
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas de Calais
				980 = { is_valid_annexation_state = yes } #French Hainaut
			}
			has_event_target = france
			has_event_target = flanders
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #French Hainaut
					state = 980 #French Hainaut
				}
			}
			transfer_state_and_add_core = yes
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = FLN }
		29 = { transfer_state_and_add_core = yes } #Maritime Flanders

	}

	option = { #split between France, Flanders and Wallonia
		name = annex.1043.i
		trigger = {
			is_french_tag = no
			17 = { is_valid_annexation_state = yes } #Pas de Calais
			29 = { is_valid_annexation_state = yes } #Maritime Flanders
			980 = { is_valid_annexation_state = yes } #French Hainaut
			has_event_target = france
			has_event_target = flanders
			has_event_target = wallonia
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = 24.owner }
		17 = { transfer_state_and_add_core = yes } #Pas de Calais
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = FLN }
		29 = { transfer_state_and_add_core = yes } #Maritime Flanders
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = WLL }
		980 = { transfer_state_and_add_claim = yes } #French Hainaut
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Maritime Flanders
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			remove_claim_and_add_core_of_ROOT = yes
		}
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = BEL
				AND = {
					tag = WLL
					OR = {
						has_cosmetic_tag = BEL
						has_cosmetic_tag = BEL_flanders_wallonia
					}
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Maritime Flanders
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			tag = WLL
			NOT = {
				has_cosmetic_tag = BEL
				has_cosmetic_tag = BEL_flanders_wallonia
			}
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas de Calais
					state = 980 #French Hainaut
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = PASDECALAIS_CONQ
	}
}

country_event = { #Fate of Britain
	id = annex.1044
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1044 FROM = [From.GetName]" }
	title = annexation_ENG_CONQ
	desc = annexation_ENG_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = GBP }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #united britian
		name = annex.1044.a
		trigger = {
			owns_state = 121
			NOT = {
				AND = {
					is_in_faction_with = ENT
					ENT = {
						NOT = { tag = CAN }
					}
					event_target:KR_king_base = { exists = yes }
				}
			}
			has_socialist_government = no
		}
		ai_chance = {
			base = 30
		}
		custom_effect_tooltip = GBP_british_collab
		hidden_effect = {
			GBP = {
				add_state_core = 123
				add_state_core = 338
				add_state_core = 127
				add_state_core = 126
				add_state_core = 125
				add_state_core = 129
				add_state_core = 128
				add_state_core = 130
				add_state_core = 132
				add_state_core = 131
				add_state_core = 122
				add_state_core = 121
				add_state_core = 133
				add_state_core = 120
				add_state_core = 136
				add_state_core = 938
				add_state_core = 957
				country_event = part.65
			}
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes
			if = {
				limit = { has_elected_government = yes }
				GBP = {
					random_list = {
						60 = { create_centrist_democratic_english_government = yes }
						40 = { create_leftist_democratic_english_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GBP = {
					create_autocratic_english_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			if = {
				limit = { tag = GER }
				country_event = part.62
			}
		}
	}
	option = { #divide GBP/SCO
		name = annex.1044.b
		trigger = {
			owns_state = 121
			NOT = {
				AND = {
					is_in_faction_with = ENT
					ENT = {
						NOT = { tag = CAN }
					}
					event_target:KR_king_base = { exists = yes }
				}
			}
			has_socialist_government = no
		}
		ai_chance = {
			base = 40
		}
		custom_effect_tooltip = GBP_two_collabs
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SCO }
			remove_all_cores_and_claims_of_tags = yes
			GBP = {
				add_state_core = 123
				add_state_core = 338
				add_state_core = 127
				add_state_core = 126
				add_state_core = 125
				add_state_core = 129
				add_state_core = 128
				add_state_core = 130
				add_state_core = 132
				add_state_core = 131
				add_state_core = 122
				add_state_core = 957
				country_event = part.65
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = GBP_authoritarian_democrat_party_long_england
					name = GBP_authoritarian_democrat_party_england
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
			}
			SCO = {
				add_state_core = 938
				add_state_core = 120
				add_state_core = 136
				add_state_core = 121
				add_state_core = 133
				country_event = part.66
			}
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			set_temp_variable = { tag_to_release = SCO }
			release_targeted_tag = yes

			if = {
				limit = { has_elected_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					random_list = {
						60 = { create_centrist_democratic_english_government = yes }
						40 = { create_leftist_democratic_english_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				SCO = {
					random_list = {
						30 = { create_leftist_democratic_scottish_government = yes }
						40 = { create_centrist_democratic_scottish_government = yes }
						30 = { create_rightist_democratic_scottish_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					create_autocratic_english_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				SCO = {
					create_autocratic_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			if = {
				limit = { tag = GER }
				country_event = part.62
				country_event = part.63
			}
		}
	}
	option = { #divide all
		name = annex.1044.c
		trigger = {
			owns_state = 121
			owns_state = 122
			NOT = {
				AND = {
					is_in_faction_with = ENT
					ENT = {
						NOT = { tag = CAN }
					}
					event_target:KR_king_base = { exists = yes }
				}
			}
			has_socialist_government = no
		}
		ai_chance = {
			base = 30
		}
		custom_effect_tooltip = GBP_three_collabs
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SCO }
			remove_all_cores_and_claims_of_tags = yes
			add_to_temp_array = { core_removal_array = WLS }
			remove_all_cores_and_claims_of_tags = yes
			GBP = {
				add_state_core = 123
				add_state_core = 338
				add_state_core = 127
				add_state_core = 126
				add_state_core = 125
				add_state_core = 129
				add_state_core = 128
				add_state_core = 130
				add_state_core = 132
				add_state_core = 131
				country_event = part.65
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = GBP_authoritarian_democrat_party_long_england
					name = GBP_authoritarian_democrat_party_england
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
			}
			SCO = {
				add_state_core = 133
				add_state_core = 121
				add_state_core = 136
				add_state_core = 120
				add_state_core = 938
				country_event = part.66
			}
			WLS = {
				add_state_core = 122
				add_state_core = 957
				country_event = part.67
			}

			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			set_temp_variable = { tag_to_release = WLS }
			release_targeted_tag = yes

			set_temp_variable = { tag_to_release = SCO }
			release_targeted_tag = yes

			if = {
				limit = { has_elected_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					random_list = {
						60 = { create_centrist_democratic_english_government = yes }
						40 = { create_leftist_democratic_english_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				SCO = {
					random_list = {
						30 = { create_leftist_democratic_scottish_government = yes }
						40 = { create_centrist_democratic_scottish_government = yes }
						30 = { create_rightist_democratic_scottish_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				WLS = {
					random_list = {
						40 = { set_country_flag = wales_social_liberal }
						60 = { set_country_flag = wales_social_conservative }
					}
					create_welsh_interim_government = yes
					remove_all_ministers = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					create_autocratic_english_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				SCO = {
					create_autocratic_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
				WLS = {
					set_country_flag = wales_paternal_autocrat
					create_welsh_interim_government = yes
					remove_all_ministers = yes
				}
			}
			if = {
				limit = { tag = GER }
				country_event = part.62
				country_event = part.63
				country_event = part.64
			}
		}
	}
	option = { #England
		name = annex.1044.g
		trigger = {
			NOT = {
				AND = {
					is_in_faction_with = ENT
					ENT = {
						NOT = { tag = CAN }
					}
					event_target:KR_king_base = { exists = yes }
				}
			}
			NOT = {
				owns_state = 121
			}
			has_socialist_government = no
		}
		ai_chance = {
			base = 0
		}
		custom_effect_tooltip = GBP_eng_collab
		hidden_effect = {
			GBP = {
				add_state_core = 123
				add_state_core = 338
				add_state_core = 127
				add_state_core = 126
				add_state_core = 125
				add_state_core = 129
				add_state_core = 128
				add_state_core = 130
				add_state_core = 132
				add_state_core = 131
				country_event = part.65
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = GBP_authoritarian_democrat_party_long_england
					name = GBP_authoritarian_democrat_party_england
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
			}
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes
			if = {
				limit = { has_elected_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					random_list = {
						60 = { create_centrist_democratic_english_government = yes }
						40 = { create_leftist_democratic_english_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				GBP = {
					set_cosmetic_tag = GBP_england
					create_autocratic_english_government = yes

					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			if = {
				limit = { tag = GER }
				country_event = part.62
			}
		}
	}
	option = { #restore a free United Kingdom
		name = annex.1044.e
		ai_chance = {
			base = 10
		}
		trigger = {
			is_in_faction_with = ENT
			event_target:KR_king_base = { exists = yes }
			ENT = {
				NOT = { tag = CAN }
			}
		}
		country_event = uk.1
	}
	option = { #return land to Canada
		name = annex.1044.f
		ai_chance = {
			base = 1000
		}
		trigger = {
			CAN = { is_faction_leader = yes }
			is_in_faction_with = CAN
			event_target:KR_king_base = { tag = CAN }
		}
		every_owned_state = {
			limit = { is_british_isles = yes }
			CAN = {
				transfer_state = PREV
			}
		}
	}
	option = {
		name = annex.1044.h #Restore the Union of Britain!
		ai_chance = {
			base = 1000
		}
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = ENG }
		}
		set_temp_variable = { tag_to_release = ENG }
		release_targeted_tag = yes
		hidden_effect = {
			ENG = {
				create_syndicalist_english_government = yes
			}
		}
	}
	option = {
		name = annex.1044.i #Puppet Socialist England!
		ai_chance = {
			base = 0
		}
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = ENG }
		}
		hidden_effect = {
			add_to_temp_array = { core_removal_array = ENG }
			remove_all_cores_and_claims_of_tags = yes
			ENG = {
				add_state_core = 123
				add_state_core = 338
				add_state_core = 127
				add_state_core = 126
				add_state_core = 125
				add_state_core = 129
				add_state_core = 128
				add_state_core = 130
				add_state_core = 132
				add_state_core = 131
			}
		}
		set_temp_variable = { tag_to_release = ENG }
		release_targeted_tag = yes
		hidden_effect = {
			ENG = {
				set_cosmetic_tag = GBP_england
				create_syndicalist_english_government = yes
			}
		}
	}
	option = { #occupy all
		name = annex.1044.j
		ai_chance = {
			base = 0
		}
		set_country_flag = ENG_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of Scotland
	id = annex.1045
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1045 FROM = [From.GetName]" }
	title = annexation_SCO_CONQ
	desc = annexation_SCO_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SCO }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet SCO
		name = annex.1045.a
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				owns_state = 131
			}
		}
		hidden_effect = {
			SCO = {
				add_state_core = 133
				add_state_core = 121
				add_state_core = 136
				add_state_core = 120
				add_state_core = 938
				country_event = part.66
			}
		}
		set_temp_variable = { tag_to_release = SCO }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				country_event = part.63
			}
			else_if = {
				limit = { has_socialist_government = yes }
				SCO = {
					create_syndicalist_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_elected_government = yes }
				SCO = {
					random_list = {
						30 = { create_leftist_democratic_scottish_government = yes }
						40 = { create_centrist_democratic_scottish_government = yes }
						30 = { create_rightist_democratic_scottish_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				SCO = {
					create_autocratic_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
		}
	}
	option = { #puppet larger SCO
		name = annex.1045.b
		trigger = { owns_state = 131 }
		ai_chance = {
			base = 80
		}
		hidden_effect = {
			SCO = {
				add_state_core = 133
				add_state_core = 121
				add_state_core = 136
				add_state_core = 120
				add_state_core = 938
				add_state_core = 131
				country_event = part.66
			}
		}
		set_temp_variable = { tag_to_release = SCO }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				country_event = part.63
			}
			else_if = {
				limit = { has_socialist_government = yes }
				SCO = {
					create_syndicalist_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_elected_government = yes }
				SCO = {
					random_list = {
						30 = { create_leftist_democratic_scottish_government = yes }
						40 = { create_centrist_democratic_scottish_government = yes }
						30 = { create_rightist_democratic_scottish_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				SCO = {
					create_autocratic_scottish_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
		}
	}
	option = { #give to the British
		name = annex.1046.b
		trigger = {
			GBP = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				GBP = { has_cosmetic_tag = GBP_england }
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 133
					state = 121
					state = 136
					state = 120
					state = 938
				}
			}
			add_core_of = GBP
			GBP = { transfer_state = PREV }
		}
		GBP = {
			if = {
				limit = { has_cosmetic_tag = GBP_england }
				drop_cosmetic_tag = yes
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = SCO_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Wales
	id = annex.1046
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1046 FROM = [From.GetName]" }
	title = annexation_WLS_CONQ
	desc = annexation_WLS_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = WLS }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #puppet WLS
		name = annex.1046.a
		ai_chance = {
			base = 80
		}
		hidden_effect = {
			WLS = {
				add_state_core = 122
				add_state_core = 957
				country_event = part.67
			}
		}
		set_temp_variable = { tag_to_release = WLS }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { tag = GER }
				country_event = part.64
			}
			else_if = {
				limit = { has_government = totalist }
				WLS = {
					create_totalist_welsh_government = yes
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = {
					OR = {
						has_government = syndicalist
						has_government = radical_socialist
					}
				}
				WLS = {
					random_list = {
						40 = { create_syndicalist_welsh_government = yes }
						60 = { create_radical_socialist_welsh_government = yes }
					}
					remove_all_ministers = yes
					set_puppet_minister_europe = yes
				}
			}
			else_if = {
				limit = { has_elected_government = yes }
				WLS = {
					random_list = {
						40 = { set_country_flag = wales_social_liberal }
						60 = { set_country_flag = wales_social_conservative }
					}
					create_welsh_interim_government = yes
					remove_all_ministers = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				WLS = {
					set_country_flag = wales_paternal_autocrat
					create_welsh_interim_government = yes
					remove_all_ministers = yes
				}
			}
		}
	}
	option = { #give to the British
		name = annex.1046.b
		trigger = {
			GBP = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 80
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 122
					state = 957
				}
			}
			add_core_of = GBP
			GBP = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = WLS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Ireland
	id = annex.1047
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1047 FROM = [From.GetName]" }
	title = annexation_IRE_CONQ
	desc = annexation_IRE_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					is_british_isles_tag = yes
					has_socialist_government = no
					119 = {
						is_owned_by = ROOT
						is_claim_or_core_of_ROOT = no
					}
				}
				add_state_claim = 119 #Ulster
			}
		}
	}

	option = { #liberate
		name = annex.1047.a
		trigger = {
			is_british_tag = no
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		if = {
			limit = {
				OR = {
					tag = POR
					tag = SPR
					tag = PAP
					tag = SPA
				}
			}
			country_event = annex.184
		}
		else = {
			hidden_effect = {
				var:tag_to_release = {
					if = {
						limit = { has_socialist_government = yes }
						create_syndicalist_irish_government = yes
					}
					else_if = {
						limit = { has_elected_government = yes }
						create_democratic_irish_government = yes
					}
					else = {
						create_autocratic_irish_government = yes
					}
				}
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			is_british_tag = no
		}
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
	}

	option = {
		name = annex.1047.c #Puppet the south
		trigger = {
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = {
			base = 90
		}
		add_political_power = -50
		add_stability = -0.05
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = IRE_gbr
				set_popularities = {
					totalist = 3
					radical_socialist = 5
					syndicalist = 7
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 50
					authoritarian_democrat = 9
					paternal_autocrat = 7
					national_populist = 5
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				create_country_leader = {
					name = "Frank McDermott"
					desc = "POLITICS_FRANK_MACDERMOT_DESC"
					picture = "Portrait_Ireland_Frank_MacDermot.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				remove_all_minister_types = yes
				add_ideas = {
					IRE_Sean_Lemass_hog_mli
					IRE_Eamon_de_Valera_for_sli
					IRE_Frank_Aiken_eco_sli
					IRE_James_Dillon_sec_sco
				}
			}
			119 = { #Ulster
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.50
					}
				}
			}
		}
	}

	option = {
		name = annex.1047.d #Ireland independent
		trigger = {
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = {
			base = 10
		}
		every_owned_state = {
			limit = {
				is_core_of = IRE
				is_claim_or_core_of_ROOT = no
			}
			IRE = { transfer_state = PREV }
		}
		if = {
			limit = { is_in_faction = yes }
			faction_leader = { add_to_faction = IRE }
		}
		hidden_effect = {
			IRE = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = IRE_gbr
				set_popularities = {
					totalist = 3
					radical_socialist = 5
					syndicalist = 7
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 50
					authoritarian_democrat = 9
					paternal_autocrat = 7
					national_populist = 5
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				remove_all_minister_types = yes
				add_ideas = {
					IRE_Sean_Lemass_hog_mli
					IRE_Eamon_de_Valera_for_sli
					IRE_Frank_Aiken_eco_sli
					IRE_James_Dillon_sec_sco
				}
			}
		}
	}

	option = {
		name = annex.1047.e #Direct Rule
		trigger = {
			is_ai = no
			is_british_tag = yes
			has_socialist_government = no
		}
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
		set_country_flag = ENG_IRA
		add_ideas = ENG_IRA_only
		irish_republican_army_events = yes
	}

	option = {
		name = annex.1047.f #Puppet
		trigger = {
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					has_government = totalist
					has_government = radical_socialist
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = { create_syndicalist_irish_government = yes }
		}
	}

	option = {
		name = annex.1047.g #Independent
		trigger = {
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = {
			base = 30
		}
		every_owned_state = {
			limit = {
				is_core_of = IRE
				is_claim_or_core_of_ROOT = no
			}
			IRE = { transfer_state = PREV }
		}
		if = {
			limit = { is_in_faction = yes }
			faction_leader = { add_to_faction = IRE }
		}
		hidden_effect = {
			IRE = {
				set_popularities = {
					totalist = 12
					radical_socialist = 16
					syndicalist = 40
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 7
					authoritarian_democrat = 9
					paternal_autocrat = 2
					national_populist = 0
				}
				set_politics = {
					ruling_party = syndicalist
					elections_allowed = no
				}
				remove_all_minister_types = yes
				add_ideas = {
					IRE_William_X_O'Brien_hog_syn
					IRE_John_O'Leary_for_syn
					IRE_Jim_Larkin_Jnr_eco_syn
					IRE_Noel_Browne_sec_syn
				}
			}
		}
	}

	option = {
		name = annex.1047.h #Direct Rule
		trigger = {
			is_ai = no
			is_british_tag = yes
			has_socialist_government = yes
		}
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
		set_country_flag = ENG_IRA
		add_ideas = ENG_IRA
		irish_republican_army_events = yes
	}
}

country_event = { #Fate of the Netherlands
	id = annex.1048
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1048 FROM = [From.GetName]" }
	title = annexation_HOL_CONQ
	desc = annexation_HOL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = HOL }
			remove_all_cores_and_claims_of_tags = yes
			HOL = {
				add_state_core = 7 #Holland
				add_state_core = 35 #North Brabant
				add_state_core = 36 #Frisia
				add_state_core = 866 #Guelders
				add_state_core = 978 #Limburg
				add_state_core = 979 #Zeeuws-Vlaanderen
				if = {
					limit = { has_country_leader = { name = "Revolutionary Committee" } }
					kill_country_leader = yes
				}
			}
			if = {
				limit = { tag = BEL }
				add_state_claim = 979 #Zeeuws-Vlaanderen
			}
		}
	}

	option = { #liberate
		name = annex.1048.a
		trigger = {
			NOT = { is_in_faction_with = DEI }
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
	}

	option = { #Annex Limburg, liberate the rest
		name = annex.1048.b
		ai_chance = {
			base = 80
		}
		trigger = {
			is_germany_or_splinter_tag = yes
			NOT = { is_in_faction_with = DEI }
		}
		add_state_claim = 978
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
	}

	option = { #Annex Limburg + Zeeuws-Vlaanderen, liberate the rest
		name = annex.1048.c
		ai_chance = {
			base = 80
		}
		trigger = {
			OR = {
				tag = BEL
				tag = FLN
				tag = WLL
			}
			NOT = { is_in_faction_with = DEI }
		}
		add_state_claim = 978
		add_state_claim = 979
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
	}

	option = { #Give Limburg + Zeeuws-Vlaanderen to Belgium, liberate the rest
		name = annex.1048.d
		ai_chance = {
			base = 80
		}
		trigger = {
			OR = {
				owns_state = 978 #Limburg
				owns_state = 979 #Zeeuws-Vlaanderen
			}
			var:925.owner = {
				OR = {
					tag = BEL
					tag = FLN
					tag = WLL
				}
				ROOT_can_grant_land = yes
			}
			NOT = { is_in_faction_with = DEI }
		}
		set_temp_variable = { tag_to_release = 925.owner }
		every_owned_state = {
			limit = {
				OR = {
					state = 978 #Limburg
					state = 979 #Zeeuws-Vlaanderen
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
	}

	option = { #Restore to the government in exile
		name = annex.1048.e
		trigger = {
			is_in_faction_with = DEI
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				OR = {
					tag = BEL
					tag = FLN
					tag = WLL
				}
			}
		}
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			DEI = { transfer_state = PREV }
		}
	}

	option = { #Annex Limburg, restore the government in exile
		name = annex.1048.f
		trigger = {
			is_germany_or_splinter_tag = yes
			owns_state = 978
			is_in_faction_with = DEI
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 978 #Limburg
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			DEI = { transfer_state = PREV }
		}
	}

	option = { #Annex Limburg + Zeeuws-Vlaanderen, restore the government in exile
		name = annex.1048.g
		trigger = {
			OR = {
				tag = BEL
				tag = FLN
				tag = WLL
			}
			is_in_faction_with = DEI
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 978 #Limburg
		add_state_claim = 979 #Zeeuws-Vlaanderen
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			DEI = { transfer_state = PREV }
		}
	}

	option = { #Give Limburg + Zeeuws-Vlaanderen to Belgium, restore the government in exile
		name = annex.1048.h
		trigger = {
			NOT = {
				tag = BEL
				tag = FLN
				tag = WLL
			}
			OR = {
				is_ally_with = BEL
				is_ally_with = FLN
				is_ally_with = WLL
			}
			is_in_faction_with = DEI
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 978 #Limburg
		add_state_claim = 979 #Zeeuws-Vlaanderen
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			DEI = { transfer_state = PREV }
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = { is_in_faction_with = DEI }
		}
		ai_chance = { base = 0 }
		set_country_flag = HOL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Belgium
	id = annex.1049
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1049 FROM = [From.GetName]" }
	title = annexation_BEL_CONQ
	desc = annexation_BEL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = BEL }
			remove_all_cores_and_claims_of_tags = yes
			BEL = {
				add_state_core = 6 #Flanders
				add_state_core = 34 #Hainaut
				add_state_core = 741 #Ardennes
				add_state_core = 925 #Brabant
				add_state_core = 948 #Liège
			}
			BEL = {
				drop_cosmetic_tag = yes
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = Interim_Governement
					name = Interim_Governement
				}
				BEL_remove_monarchy = yes
				if = {
					limit = { has_country_leader = { name = "Belgian Parliament" ruling_only = no } }
					kill_ideology_leader = authoritarian_democrat
				}
				load_focus_tree = BEL_Independent_focus
				remove_ideas = {
					BEL_anti_german_sentiment1
					BEL_anti_german_sentiment2
					BEL_anti_german_sentiment3
					BEL_anti_german_sentiment4
					BEL_anti_german_sentiment5
				}
			}
		}
	}

	option = { #puppet Belgium
		name = annex.1049.a
		ai_chance = {
			base = 100
			modifier = {
				add = -80
				tag = HOL
			}
			modifier = {
				add = -30
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		hidden_effect = {
			BEL = {
				WLL_move_unit_leaders = yes
				FLN_move_unit_leaders = yes
			}
		}
		if = {
			limit = { tag = GER }
			BEL = {
				BEL_create_adelbert = yes
				set_party_name = {
					ideology = authoritarian_democrat
					name = BEL_authoritarian_democrat_party
					long_name = BEL_authoritarian_democrat_party_long
				}
				add_ideas = BEL_anti_german_sentiment5
				load_focus_tree = BEL_focus
			}
		}
		else_if = {
			limit = { is_in_faction_with = ENT }
			BEL = {
				BEL_create_albert = yes
				complete_national_focus = BEL_Elections
			}
			set_autonomy = {
				target = BEL
				autonomy_state = autonomy_free
			}
			ENT = { add_to_faction = BEL }
		}
	}

	option = { #Split it
		name = annex.1049.b
		ai_chance = {
			base = 0
			modifier = {
				add = 80
				tag = HOL
			}
			modifier = {
				add = 30
				is_french_tag = yes
			}
		}
		set_country_flag = { flag = BEL_CONQ days = 100 value = 1 }
		recheck_annexations_immediate = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		if = {
			limit = { is_french_tag = yes }
			add_state_claim = 34
			add_state_claim = 741
			add_state_claim = 948
		}
		else = {
			set_country_flag = WLL_CONQ
		}
		set_country_flag = FLN_CONQ
		set_country_flag = BEL_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of Flanders
	id = annex.1050
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1050 FROM = [From.GetName]" }
	title = annexation_FLN_CONQ
	desc = annexation_FLN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = FLN }
			remove_all_cores_and_claims_of_tags = yes
			FLN = {
				add_state_core = 6 #Flanders
				add_state_core = 925 #Brabant
				add_state_claim = 29 #Maritime Flanders
				if = {
					limit = { has_country_leader = { name = "Karel" } }
					kill_ideology_leader = social_democrat
					kill_ideology_leader = social_liberal
					kill_ideology_leader = market_liberal
					kill_ideology_leader = social_conservative
					kill_ideology_leader = authoritarian_democrat
					kill_ideology_leader = paternal_autocrat
					kill_ideology_leader = national_populist
				}
			}
		}
	}

	option = { #puppet Flanders
		name = annex.1050.a
		ai_chance = {
			base = 25
		}
		set_temp_variable = { tag_to_release = FLN }
		release_targeted_tag = yes
		hidden_effect = {
			FLN = { FLN_move_unit_leaders = yes }
		}
		if = {
			limit = { tag = GER }
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				effect_tooltip = {
					create_country_leader = {
						name = "Karel"
						picture = "gfx/leaders/BEL/Portrait_Belgium_Karel_Van_Vlaanderen.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
				}
				FLN_create_karel = yes
			}
		}
	}

	option = { #Give it to HOL
		name = annex.1050.b
		trigger = {
			is_ally_with = HOL
			NOT = { tag = HOL }
		}
		ai_chance = {
			base = 50
		}
		add_to_temp_array = { target_cores_to_release = FLN }
		set_temp_variable = { tag_to_release = HOL }
		transfer_territory_from_core_regions = yes
	}

	option = { #Give Flanders to Wallonia
		name = annex.1050.c
		trigger = {
			WLL = {
				is_ally_with = ROOT
				is_subject = no
			}
			NOT = { tag = WLL }
		}
		ai_chance = {
			base = 25
		}
		add_to_temp_array = { target_cores_to_release = FLN }
		set_temp_variable = { tag_to_release = WLL }
		transfer_territory_from_core_regions = yes
	}

	option = { #reunite Belgium under Wallonia
		name = annex.1050.d
		trigger = {
			has_subject = WLL
		}
		ai_chance = {
			base = 25
		}
		add_to_temp_array = { target_cores_to_release = FLN }
		set_temp_variable = { tag_to_release = WLL }
		transfer_territory_from_core_regions = yes
		WLL = {
			add_state_core = 6 #Flanders
			add_state_core = 925 #Brabant
			if = {
				limit = { owns_state = 29 } #Maritime Flanders
				add_state_core = 29
			}
			else_if = {
				limit = { NOT = { is_ally_with = 29.owner } }
				add_state_claim = 29
			}
			FLN_move_unit_leaders = yes
			set_cosmetic_tag = BEL
		}
	}

	option = { #reunite Belgium
		name = annex.1050.e
		trigger = {
			tag = WLL
		}
		ai_chance = {
			base = 100
		}
		add_state_core = 6 #Flanders
		add_state_core = 925 #Brabant
		if = {
			limit = { owns_state = 29 } #Maritime Flanders
			add_state_core = 29
		}
		else_if = {
			limit = { NOT = { is_ally_with = 29.owner } }
			add_state_claim = 29
		}
		FLN_move_unit_leaders = yes
		set_cosmetic_tag = BEL
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = FLN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Wallonia
	id = annex.1051
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1051 FROM = [From.GetName]" }
	title = annexation_WLL_CONQ
	desc = annexation_WLL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = WLL }
			remove_all_cores_and_claims_of_tags = yes
			WLL = {
				add_state_core = 34 #Hainaut
				add_state_core = 741 #Ardennes
				add_state_core = 948 #Liège
				set_party_name = {
					ideology = authoritarian_democrat
					name = Interim_Governement
					long_name = Interim_Governement
				}
				if = {
					limit = { has_country_leader = { name = "Adelbert" ruling_only = no } }
					kill_ideology_leader = authoritarian_democrat
					event_target:BEL_Adelbert = { set_nationality = XXA }
				}
			}
		}
	}

	option = { #puppet Wallonia
		name = annex.1051.a
		ai_chance = {
			base = 25
		}
		set_temp_variable = { tag_to_release = WLL }
		release_targeted_tag = yes
		WLL = {
			WLL_reset_focus_tree_and_ideas = yes
			WLL_move_unit_leaders = yes
		}
	}

	option = { #Give it to FLN
		name = annex.1051.b
		trigger = {
			FLN = {
				is_ally_with = ROOT
				is_subject = no
			}
			NOT = { tag = FLN }
		}
		ai_chance = {
			base = 50
		}
		every_owned_state = {
			limit = {
				is_core_of = WLL
				is_not_claim_or_core_of_ROOT = yes
			}
			FLN = { transfer_state = PREV }
		}
	}

	option = { #Give it to France
		name = annex.1051.c
		trigger = {
			is_french_tag = no
			var:24.owner = {
				is_french_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 25
		}
		add_to_temp_array = { target_cores_to_release = WLL }
		set_temp_variable = { tag_to_release = 24.owner }
		transfer_territory_from_core_regions = yes
	}

	option = { #reunite Belgium under Flanders
		name = annex.1050.d
		trigger = {
			has_subject = FLN
		}
		ai_chance = {
			base = 25
		}
		add_to_temp_array = { target_cores_to_release = WLL }
		set_temp_variable = { tag_to_release = FLN }
		transfer_territory_from_core_regions = yes
		FLN = {
			add_state_core = 34 #Hainaut
			add_state_core = 741 #Ardennes
			add_state_core = 948 #Liège
			WLL_move_unit_leaders = yes
			set_cosmetic_tag = BEL
		}
	}

	option = { #reunite Belgium
		name = annex.1050.e
		trigger = {
			tag = FLN
		}
		ai_chance = {
			base = 50
		}
		add_state_core = 34 #Hainaut
		add_state_core = 741 #Ardennes
		add_state_core = 948 #Liège
		WLL_move_unit_leaders = yes
		set_cosmetic_tag = BEL
	}

	option = { #Annex Wallonia
		name = annex.integration
		trigger = {
			is_french_tag = yes
			owns_state = 16 #Paris
		}
		ai_chance = {
			base = 25
		}
		add_state_claim = 34 #Hainaut
		add_state_claim = 741 #Ardennes
		add_state_claim = 948 #Liège
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = FLN
				AND = {
					is_french_tag = yes
					owns_state = 16
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = WLL_CONQ
		occupy_medium_country = yes
	}
}

#####################################
##  N O R T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Denmark
	id = annex.1052
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1052 FROM = [From.GetName]" }
	title = annexation_DEN_CONQ
	desc = annexation_DEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate as monarchy
		name = annex.1052.a
		ai_chance = {
			base = 98

		}
		trigger = {
			has_socialist_government = no
			NOT = {
				has_government = national_populist
			}
		}

		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes

		DEN = {
			clr_country_flag = den_hybrid
			clr_country_flag = den_danish_republic
		}
		hidden_effect = {
			DEN = {
				if = {
					limit = {
						date < 1947.05.20
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Christian X"
						desc = "CHRISTIAN_X_DESC"
						picture = "Portrait_Denmark_Christian_X.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
				}
				else_if = {
					limit = {
						date > 1947.05.20
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = "Frederick IX"
						picture = "Portrait_Denmark_Frederick.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
				}
			}
		}
	}

	option = { #liberate as republic
		name = annex.1052.b
		ai_chance = {
			base = 98

		}
		trigger = {
			NOT = {
				tag = GER
				tag = AUS
			}
		}

		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes

		DEN = {
			if = {
				limit = {
					NOT = {
						has_socialist_government = yes
					}
				}
				clr_country_flag = den_hybrid
			}
			set_country_flag = den_danish_republic
		}

		hidden_effect = {
			DEN = {
				create_country_leader = {
					name = "Thorvald Stauning"
					picture = "Portrait_Denmark_Thorvald_Stauning_kr.png"
					expire = "1965.1.1"
					ideology = social_democrat_subtype
				}
				create_country_leader = {
					name = "Peter Munch"
					picture = "Portrait_Denmark_Peter_Munch.png"
					expire = "1965.1.1"
					ideology = social_liberal_subtype
				}
				create_country_leader = {
					name = "Thomas Madsen-Mygdal"
					picture = "Portrait_Denmark_Thomas_Madsen_Mygdal.png"
					expire = "1965.1.1"
					ideology = market_liberal_subtype
				}
				create_country_leader = {
					name = "John Christmas Møller"
					picture = "Portrait_Denmark_Christmas_Moller.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				create_country_leader = {
					name = "Erik With"
					picture = "Portrait_Denmark_Erik_With.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				create_country_leader = {
					name = "Christian von Schalburg"
					picture = "Portrait_Denmark_Christian_von_Schalburg.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = DEN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Iceland
	id = annex.1053
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1053 FROM = [From.GetName]" }
	title = annexation_ICE_CONQ
	desc = annexation_ICE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate ICE
		name = annex.1053.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				AND = {
					OR = {
						is_in_faction_with = DEN
						is_in_faction_with = NOR
					}
					NOT = {
						tag = DEN
						tag = NOR
						tag = CAN
						tag = USA
						has_country_flag = swe_flag_sweden_norway
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = ICE }
		release_targeted_tag = yes
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		occupy_small_country = yes
		set_country_flag = ICE_CONQ
	}
}

country_event = { #Fate of Greenland
	id = annex.1054
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1054 FROM = [From.GetName]" }
	title = annexation_GRN_CONQ
	desc = annexation_GRN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give Greenland to DEN
		name = annex.1054.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
		}
		trigger = {
			DEN = { is_ally_of_ROOT = yes }
		}
		DEN = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to NOR
		name = annex.1054.b
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
			modifier = {
				factor = 0
				OR = {
					DEN = { is_ally_of_ROOT = yes }
					SCA = { is_ally_of_ROOT = yes }
				}
			}
		}
		trigger = {
			NOR = { is_ally_of_ROOT = yes }
		}
		NOR = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to SWE-NOR
		name = annex.1054.c
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
			modifier = {
				factor = 0
				DEN = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			SWE = {
				has_country_flag = swe_flag_sweden_norway
				is_ally_of_ROOT = yes
			}
		}
		SWE = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to SCA
		name = annex.1054.d
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
		}
		trigger = {
			SCA = { is_ally_of_ROOT = yes }
		}
		SCA = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to CAN
		name = annex.1054.e
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				DEN = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			CAN = {
				is_ally_of_ROOT = yes
				NOT = { owns_state = 101 }
				OR = {
					is_faction_leader = yes
					is_subject = yes
					NOT = {
						DEN = { is_ally_of_ROOT = yes }
						SCA = { is_ally_of_ROOT = yes }
					}
				}
			}
		}
		CAN = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				is_american_tag = yes
			}
		}
		set_country_flag = GRN_CONQ
	}
}

country_event = { #Fate of Norway
	id = annex.1055
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1055 FROM = [From.GetName]" }
	title = annexation_NOR_CONQ
	desc = annexation_NOR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { tag = FIN }
				add_state_claim = 937 #Finnmark Plateau
			}
			if = {
				limit = {
					NOR = { has_completed_focus = NOR_NAT_hirden }
				}
				if = {
					limit = {
						NOT = {
							has_government = paternal_autocrat
							has_government = national_populist
						}
					}
					NOR = {
						every_unit_leader = {
							limit = { has_unit_leader_flag = NOR_rikshirden }
							set_nationality = XXA
						}
					}
					XXA = {
						every_unit_leader = {
							limit = { has_unit_leader_flag = NOR_leader }
							set_nationality = NOR
						}
					}
				}
				else = {
					NOR = {
						every_unit_leader = {
							limit = { has_unit_leader_flag = NOR_leader }
							set_nationality = XXA
						}
					}
					XXA = {
						every_unit_leader = {
							limit = { has_unit_leader_flag = NOR_rikshirden }
							set_nationality = NOR
						}
					}
				}
			}
		}
	}

	option = { #liberate as monarchy
		name = annex.1055.a
		ai_chance = {
			base = 100

			modifier = {
				factor = 0
				tag = SWE
				OR = {
					has_completed_focus = SWE_a_new_king
					NOT = {
						has_completed_focus = SWE_forced_abdication
					}
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
		hidden_effect = {
			NOR = {
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = social_democrat_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = national_populist_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = market_liberal_subtype
				}
				create_country_leader = {
					name = "Haakon VII"
					desc = "POLITICS_Haakon_VII_DESC"
					picture = "Portrait_Norway_Haakon_VII.png"
					expire = "1965.1.1"
					ideology = social_liberal_subtype
				}
			}
		}
	}

	option = { #liberate as republic
		name = annex.1055.c
		ai_chance = {
			base = 100

			modifier = {
				factor = 0
				tag = SWE
				OR = {
					has_completed_focus = SWE_a_new_king
					NOT = {
						has_completed_focus = SWE_forced_abdication
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
		hidden_effect = {
			NOR = {
				create_country_leader = {
					name = "Nils Trædal"
					picture = "Portrait_Norway_Nils_Traedal.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				create_country_leader = {
					name = "Rolf Fuglesang"
					picture = "Portrait_Norway_Rolf_Fuglesang.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				create_country_leader = {
					name = "Konrad Nordahl"
					picture = "Portrait_Norway_Konrad_Nordahl.png"
					expire = "1965.1.1"
					ideology = social_democrat_subtype
				}
				create_country_leader = {
					name = "Vidkun Quisling"
					picture = "Portrait_Norway_Vidkun_Quisling_KR.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
				create_country_leader = {
					name = "Jonas Lie"
					picture = "Portrait_Norway_Jonas_Lie.png"
					expire = "1965.1.1"
					ideology = national_populist_subtype
				}
				create_country_leader = {
					name = "C.J. Hambro"
					picture = "Portrait_Norway_CJ_Hambro.png"
					expire = "1965.1.1"
					ideology = market_liberal_subtype
				}
				create_country_leader = {
					name = "Johan Ludwig Mowinckel"
					picture = "Portrait_Norway_JL_Mowinckel.png"
					expire = "1965.1.1"
					ideology = social_liberal_subtype
				}
			}
		}
	}

	option = { #Form Sweden-Norway
		name = annex.1055.b
		ai_chance = {
			base = 100
		}
		trigger = {
			tag = SWE
			OR = {
				NOT = {
					has_completed_focus = SWE_forced_abdication
				}
				has_completed_focus = SWE_a_new_king
			}
		}
		set_cosmetic_tag = SWENOR
		set_country_flag = NOR_CONQ
		set_country_flag = swe_flag_sweden_norway
		occupy_small_country = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = NOR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Sweden
	id = annex.1056
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1056 FROM = [From.GetName]" }
	title = annexation_SWE_CONQ
	desc = annexation_SWE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { tag = FIN }
				add_state_claim = 909 #Tornedalen
			}
			SWE = {
				remove_ideas = {
					SWE_union_activity
					SWE_totalistmilitary
					SWE_radicalistmilitary
					SWE_syndicalistmilitary
					SWE_totalisteconomy
					SWE_radicalisteconomy
					SWE_syndicalisteconomy
					SWE_totalistsociety
					SWE_radicalistsociety
					SWE_syndicalistsociety
					SWE_totalistpeople
					SWE_radicalistpeople
					SWE_syndicalistpeople
					SWE_collectivisation
					SWE_idea_true_folkhemmet
					SWE_idea_reactionary_resistance
				}
			}
		}
	}

	option = { #liberate as monarchy
		name = annex.1056.a
		ai_chance = {
			base = 98

		}
		trigger = {
			has_socialist_government = no
		}

		hidden_effect = {
			if = {
				limit = {
					tag = NOR
				}
				908 = {
					add_claim_by = NOR
				}
			}
			if = {
				limit = {
					tag = NOR
					OR = {
						has_government = totalist
						has_government = paternal_autocrat
						has_government = national_populist
					}
				}
				778 = {
					add_claim_by = NOR
				}
			}
		}

		set_temp_variable = { tag_to_release = SWE }
		every_owned_state = {
			limit = {
				is_core_of = SWE
				is_claim_or_core_of_ROOT = no
				if = {
					limit = { state = 145 } #Aland
					NOT = {
						SWE = { ROOT_can_grant_land = yes }
						FIN = { ROOT_can_grant_land = yes }
					}
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		hidden_effect = {
			SWE = {
				if = {
					limit = {
						date < 1950.10.29
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Gustaf V"
						desc = "POLITICS_Gustaf_V_DESC"
						picture = "Portrait_Sweden_Gustaf_V.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
				}
				else_if = {
					limit = {
						date > 1950.10.29
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
					create_country_leader = {
						name = "Gustaf VI Adolf"
						picture = "Portrait_Sweden_Gustaf_Adolf_Sr.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
				}
			}
		}
	}

	option = { #liberate as republic
		name = annex.1056.b
		ai_chance = {
			base = 98

		}
		trigger = {
			NOT = {
				tag = GER
				tag = AUS
			}
		}

		hidden_effect = {
			if = {
				limit = {
					tag = NOR
				}
				908 = {
					add_claim_by = NOR
				}
			}
			if = {
				limit = {
					tag = NOR
					OR = {
						has_government = totalist
						has_government = paternal_autocrat
						has_government = national_populist
					}
				}
				778 = {
					add_claim_by = NOR
				}
			}
		}

		set_temp_variable = { tag_to_release = SWE }
		every_owned_state = {
			limit = {
				is_core_of = SWE
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 145 #Aland
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		hidden_effect = {
			SWE = {
				set_cosmetic_tag = SWEREP
				if = {
					limit = {
						date < 1950.10.29
					}
					create_country_leader = {
						name = "Ivar Andersson"
						picture = "Portrait_Sweden_Ivar_Anderson.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Carl August Ehrensvärd"
						picture = "Portrait_Sweden_Carl_August_Ehrensvard.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = "Carl Lindhagen"
						picture = "Portrait_Sweden_Carl_Lindhagen.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = "Helge Jung"
						picture = "Portrait_Sweden_Helge_Jung.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Martin Ekström"
						picture = "Portrait_Sweden_Martin_Ekstrom.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
					}
					create_country_leader = {
						name = "Carl Gustaf Ekman"
						picture = "Portrait_Sweden_Carl_Gustaf_Ekman.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Nils Quensel"
						picture = "Portrait_Sweden_Nils_Quensel.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
				}
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = SWE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of the Aland Islands
	id = annex.1057
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1057 FROM = [From.GetName]" }
	title = annexation_ALAND_CONQ
	desc = annexation_ALAND_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Finland
		name = annex.1057.a
		trigger = {
			if = {
				limit = { tag = RUS }
				is_ally_with = FIN
			}
			else = {
				FIN = { ROOT_can_grant_land = yes }
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.25
				is_ally_with = SWE
			}
		}
		set_temp_variable = { tag_to_release = FIN }
		145 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to the Swedes
		name = annex.1057.b
		trigger = {
			if = {
				limit = { tag = RUS }
				is_ally_with = SWE
			}
			else = {
				SWE = { ROOT_can_grant_land = yes }
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.25
				is_ally_with = FIN
			}
		}
		set_temp_variable = { tag_to_release = SWE }
		145 = { transfer_state_and_add_core = yes }
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			OR = {
				is_ai = no
				AND = {
					tag = RUS
					NOT = { has_subject = FIN }
				}
			}
		}
		occupy_small_country = yes
		set_country_flag = ALAND_CONQ
	}
}

country_event = { #Fate of Finland
	id = annex.1058
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1058 FROM = [From.GetName]" }
	title = annexation_FIN_CONQ
	desc = annexation_FIN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			FIN = {
				if = {
					limit = {
						OR = {
							has_country_leader = { name = "Fredrik Kaarle I" ruling_only = no }
							has_country_leader = { name = "Väinö I" ruling_only = no }
						}
					}
					kill_ideology_leader = paternal_autocrat
				}
			}
			if = {
				limit = { is_russian_tag = yes }
				add_state_claim = 146 #Karelia
			}
		}
	}

	option = { #liberate
		name = annex.1058.a
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}

		hidden_effect = {
			if = {
				limit = {
					tag = SWE
					has_government = national_populist
				}
				add_state_claim = 149
				add_state_claim = 863
			}
		}

		set_temp_variable = { tag_to_release = FIN }
		every_owned_state = {
			limit = {
				is_core_of = FIN
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 145 #Aland
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		if = {
			limit = { tag = GER }
			var:tag_to_release = {
				set_cosmetic_tag = FIN_kingdom
				if = {
					limit = { has_country_flag = Fredrik_Kaarle_I_dead }
					create_country_leader = {
						name = "Väinö I"
						picture = "Portrait_FIN_Vaino_I.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
				}
				else = {
					create_country_leader = {
						name = "Fredrik Kaarle I"
						desc = "POLITICS_FREDRIK_KAARLE_DESC"
						picture = "Portrait_FIN_Fredrik_Kaarle_I.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
				}
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = paternal_autocrat
					popularity = 60
				}
			}
		}
	}

	option = { #annex
		name = annex.1058.b
		trigger = {
			has_completed_focus = RUS_Expansionism
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = {
				is_core_of = FIN
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		set_country_flag = FIN_CONQ
		occupy_medium_country = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_completed_focus = RUS_Expansionism }
		}
		set_country_flag = FIN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Karelia
	id = annex.1059
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1059 FROM = [From.GetName]" }
	title = annexation_KARELIA_CONQ
	desc = annexation_KARELIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { country_exists = SOV }
				SOV = {
					add_state_core = 213 #Murmansk
					add_state_core = 215 #Kem
					add_state_core = 216 #Petrozavodsk
					add_state_core = 722 #Petsamo
				}
			}
			else_if = {
				limit = {
					country_exists = TRM
					TRM = { owns_state = 219 } #Moscow
				}
				SOV = {
					add_state_core = 213 #Murmansk
					add_state_core = 215 #Kem
					add_state_core = 216 #Petrozavodsk
					add_state_core = 722 #Petsamo
				}
			}
			else = {
				RUS = {
					add_state_core = 213 #Murmansk
					add_state_core = 215 #Kem
					add_state_core = 216 #Petrozavodsk
					add_state_core = 722 #Petsamo
				}
			}
		}
	}

	option = { #Give it to Finland
		name = annex.1059.a
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
			FIN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = FIN }
		146 = { #Viipuri
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_and_add_core = yes
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #Kem
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Give it to the Russians
		name = annex.1059.b
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
			var:219.owner = { #Moscow
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_german_tag = yes
				FIN = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 0.25
				is_ally_with = FIN
			}
		}
		set_temp_variable = { tag_to_release = var:219.owner }
		146 = { #Viipuri
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_and_add_claim = yes
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #Kem
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_core = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.1005.c
		trigger = {
			OR = {
				tag = FIN
				tag = SCA
			}
		}
		ai_chance = {
			base = 100
		}
		occupy_small_country = yes
		146 = { #Viipuri
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				add_core_of = ROOT
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #Kem
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = KARELIA_CONQ
	}
}

#####################################
##   E A S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of the Ukraine
	id = annex.1060
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1060 FROM = [From.GetName]" }
	title = annexation_UKR_CONQ
	desc = annexation_UKR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		UKR_remove_king = yes
		hidden_effect = {
			if = {
				limit = {
					NOT = { tag = RUS }
					OR = {
						NOT = { country_exists = RUS }
						has_subject = RUS
					}
				}
				RUS = {
					every_unit_leader = {
						limit = { has_unit_leader_flag = UKR_leader }
						set_nationality = UKR
						clr_unit_leader_flag = UKR_leader
					}
				}
			}
			UKR = {
				set_cosmetic_tag = UKR_republic
				clr_country_flag = kingdom_survives
			}
		}
	}

	option = { #Puppet
		name = annex.1060.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		every_owned_state = {
			limit = {
				is_core_of = UKR
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 80 #Cernauti
					state = 91 #Lwow
					state = 93 #Brest
					state = 241 #Gomel
					state = 997 #Polesia
					state = 1088 #Chelm
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag_nocosmetic = yes
		if = {
			limit = { tag = GER }
			var:tag_to_release = {
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = paternal_autocrat
					popularity = 60
				}
			}
		}
		else_if = {
			limit = {
				is_russian_tag = yes
				has_socialist_government = no
			}
			var:tag_to_release = {
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				set_political_party = {
					ideology = social_conservative
					popularity = 60
				}
			}
		}
	}

	option = { #TUR - take Crimea
		name = annex.1060.b
		trigger = {
			tag = TUR
			owns_state = 137
		}
		ai_chance = { base = 50 }
		add_state_claim = 137
		set_temp_variable = { tag_to_release = UKR }
		every_owned_state = {
			limit = {
				is_core_of = UKR
				is_claim_or_core_of_ROOT = no
				if = {
					limit = { state = 93 } #Brest
					NOT = {
						ROOT = { tag = POL }
						ROOT = { tag = WHR }
						POL = { ROOT_can_grant_land = yes }
						WHR = {
							OR = {
								owns_state = 997 #Polesia
								997 = { is_valid_annexation_state = yes }
							}
							ROOT_can_grant_land = yes
						}
						10 = { is_valid_annexation_state = yes } #Warsaw
						206 = { is_valid_annexation_state = yes } #Minsk
					}
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag_nocosmetic = yes
	}

	option = { #Integrate
		name = annex.1060.c
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = {
				OR = {
					region = 130 #Western Ukraine
					region = 165 #Eastern Ukraine
				}
				NOT = {
					AND = {
						is_claim_or_core_of_owner = yes
						owner = { is_ally_with = ROOT }
					}
				}
			}
			add_claim_by = ROOT
		}
		add_political_power = -100
		add_to_array = { RUS_integration_array = UKR }
		recheck_annexations = yes
	}

	option = { #Give to Russia
		name = annex.1060.d
		trigger = {
			is_russian_tag = no
			var:219.owner = {
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_german_tag = yes
			}
		}
		add_to_temp_array = { target_cores_to_release = UKR }
		set_temp_variable = { tag_to_release = 219.owner }
		transfer_territory_from_core_regions = yes
	}

	option = { #Occupy
		name = annex.occupation
		trigger = {
			is_ai = no
			is_russian_tag = no
		}
		set_country_flag = UKR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Brest
	id = annex.1061
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1061 FROM = [From.GetName]" }
	title = annexation_BREST_CONQ
	desc = annexation_BREST_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Poland
		name = annex.1061.a
		trigger = {
			997 = { is_valid_annexation_state = no } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = WHR
					LIT = {
						is_ally_with = ROOT
						owns_state = 206 #Minsk
					}
				}
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Ukraine
		name = annex.1061.b
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = POL
					is_ally_with = WHR
					LIT = {
						is_ally_with = ROOT
						owns_state = 206 #Minsk
					}
				}
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		93 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Belarus
		name = annex.1061.c
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			WHR = {
				OR = {
					owns_state = 997 #Polesia
					997 = { is_valid_annexation_state = yes }
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = POL
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		93 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to LitBel
		name = annex.1061.d
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				tag = LIT
			}
			LIT = {
				OR = {
					owns_state = 997 #Polesia
					997 = { is_valid_annexation_state = yes }
				}
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = POL
				}
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		93 = { transfer_state_and_add_claim = yes }
	}

	option = { #split between Poland and Ukraine
		name = annex.1061.e
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				OR = {
					is_ally_with = WHR
					is_ally_with = POL
				}
				NOT = { is_ally_with = UKR }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		set_temp_variable = { tag_to_release = UKR }
		997 = { transfer_state_and_add_core = yes }
	}

	option = { #split between Poland and Belarus
		name = annex.1061.f
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = POL
				}
				NOT = { is_ally_with = WHR }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		set_temp_variable = { tag_to_release = WHR }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #split between Poland and LitBel
		name = annex.1061.g
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
			LIT = {
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = POL
				}
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		set_temp_variable = { tag_to_release = LIT }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #split between Poland and Russia
		name = annex.1061.h
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			var:204.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = 204.owner }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = {
				204 = { is_core_of = owner }
			}
			997 = { transfer_state_and_add_core = yes }
		}
		else = {
			997 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #split with POL
		name = annex.1061.i
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			is_russian_tag = yes
			POL = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_completed_focus = RUS_Expansionism
			}
		}
		997 = { add_claim_of_ROOT = yes } #Polesia
		custom_effect_tooltip = tooltip_white_line
		93 = { save_event_target_as = granted_land }
		POL = {
			add_state_claim = 93 #Brest
			transfer_state = 93
			country_event = annex.38
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
				is_russian_tag = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
				POL = { is_ally_of_ROOT = yes }
				NOT = { has_completed_focus = RUS_Expansionism }
			}
		}
		add_state_claim = 93
		if = {
			limit = {
				NOT = { tag = POL }
				997 = { is_valid_annexation_state = yes }
			}
			add_state_claim = 997
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			is_russian_tag = no
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = BREST_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Polesia
	id = annex.1062
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1062 FROM = [From.GetName]" }
	title = annexation_POLESIA_CONQ
	desc = annexation_POLESIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Ukraine
		name = annex.1061.b
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_ally_with = WHR
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		997 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Belarus
		name = annex.1061.c
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_ally_with = UKR
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to LitBel
		name = annex.1061.d
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				tag = LIT
			}
			LIT = {
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_ally_with = UKR
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 997
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = POLESIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Belarus
	id = annex.1063
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1063 FROM = [From.GetName]" }
	title = annexation_WHR_CONQ
	desc = annexation_WHR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = WHR
						is_claimed_by = WHR
					}
					NOT = {
						state = 95 #Pinsk
						state = 194 #Mozyr
						state = 204 #Novogrudok
						state = 206 #Minsk
						state = 207 #Braslaw
						state = 1087 #Mogilev
					}
				}
				remove_core_of = WHR
				remove_claim_by = WHR
			}
			XXA = {
				random_army_leader = {
					limit = { has_id = 191801 }
					set_nationality = WHR
				}
			}
			WHR = {
				clr_country_flag = Kanstancin_Jezavitau_dead
				remove_unit_leader = 191802
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = annex.1063.a #Liberate White Ruthenia
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				is_core_of = WHR
				is_claim_or_core_of_ROOT = no
				NOT = { state = 94 } #Volkovysk
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		if = {
			limit = { tag = GER }
			WHR = {
				create_country_leader = {
					name = "Werner Kempf"
					desc = "POLITICS_WERNER_KEMPF_DESC"
					picture = "Portrait_WHR_Werner_Kempf.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = WHR_paternal_autocrat2_party_long
					name = WHR_paternal_autocrat2_party
				}
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
				create_field_marshal = {
					name = "Werner Kempf"
					picture = "Portrait_WHR_Werner_Kempf.png"
					traits = {
						career_officer
						panzer_leader
						organizer
					}
					skill = 3
					attack_skill = 3
					defense_skill = 3
					planning_skill = 2
					logistics_skill = 2
					id = 191802
				}
			}
		}
		hidden_effect = {
			WHR = { add_state_core = 94 } #Volkovysk
		}
	}

	option = { #Integrate
		name = annex.1063.b
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 100
		}
		every_state = {
			limit = {
				is_core_of = WHR
				NOT = {
					AND = {
						is_claim_or_core_of_owner = yes
						owner = { is_ally_with = ROOT }
					}
					state = 94 #Volkovysk
				}
			}
			add_claim_by = ROOT
		}
		add_political_power = -50
		add_to_array = { RUS_integration_array = WHR }
		recheck_annexations = yes
		hidden_effect = {
			WHR = { add_state_core = 94 } #Volkovysk
		}
	}

	option = {
		name = annex.1063.c #Give to Russia
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_german_tag = yes
			}
		}
		trigger = {
			is_russian_tag = no
			var:219.owner = {
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		add_to_temp_array = { target_cores_to_release = WHR }
		set_temp_variable = { tag_to_release = 219.owner }
		transfer_territory_from_core_regions = yes
		hidden_effect = {
			WHR = { add_state_core = 94 } #Volkovysk
		}
	}

	option = { #Occupy White Ruthenia
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = WHR_CONQ
		occupy_medium_country = yes
		hidden_effect = {
			WHR = { add_state_core = 94 } #Volkovysk
		}
	}
}

country_event = { #Fate of Eastern Belarus
	id = annex.1064
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1064 FROM = [From.GetName]" }
	title = annexation_EASTERN_BELARUS_CONQ
	desc = annexation_EASTERN_BELARUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Belarus
		name = annex.1064.a
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					207 = { is_claim_or_core_of_ROOT = yes }
				}
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = WHR }
				var:219.owner = {
					is_russian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Give it to Russia
		name = annex.1064.b
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = 219.owner }
				OR = {
					is_ally_with = WHR
					LIT = {
						owns_state = 204 #Minsk
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #Give it to LitBel
		name = annex.1064.c
		trigger = {
			NOT = {
				tag = WHR
				tag = LIT
			}
			LIT = {
				owns_state = 204 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				NOT = { is_ally_with = LIT }
				var:219.owner = {
					is_russian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Split between Russia and Belarus
		name = annex.1064.d
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			owns_state = 242 #Smolensk
			owns_state = 243 #Krichev
			owns_state = 755 #Vitebsk
			WHR = { ROOT_can_grant_land = yes }
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = WHR }
			}
			modifier = {
				factor = 0.5
				NOT = {
					var:219.owner = {
						is_russian_tag = yes
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		242 = { transfer_state_and_add_core = yes } #Smolensk
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				OR = {
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Split between Russia and LitBel
		name = annex.1064.e
		trigger = {
			NOT = {
				tag = WHR
				tag = LIT
			}
			owns_state = 242 #Smolensk
			owns_state = 243 #Krichev
			owns_state = 755 #Vitebsk
			LIT = {
				owns_state = 204 #Minsk
				ROOT_can_grant_land = yes
			}
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0.5
				NOT = {
					var:219.owner = {
						is_russian_tag = yes
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		242 = { transfer_state_and_add_core = yes } #Smolensk
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				OR = {
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 242 #Smolensk
		add_state_claim = 243 #Krichev
		add_state_claim = 755 #Vitebsk
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = EASTERN_BELARUS_CONQ
	}
}

country_event = { #Fate of Russia
	id = annex.1065
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1065 FROM = [From.GetName]" }
	title = annexation_RUS_CONQ
	desc = annexation_RUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					tag = JAP
					NOT = { country_exists = TRM }
				}
				every_owned_state = {
					limit = {
						OR = {
							state = 408 #Vladivostok
							state = 409 #Khabarovsk
							state = 560 #Nikolayevsk
							state = 562 #Okhotsk
							state = 637 #Kamchatka
						}
					}
					add_claim_by = JAP
				}
			}
			RUS = {
				drop_cosmetic_tag = yes
				RUS_remove_monarchy = yes
				set_party_name = {
					ideology = social_democrat
					name = RUS_authoritarian_democrat_party
					long_name = RUS_authoritarian_democrat_party_long
				}
				remove_ideas = {
					RUS_constitutional_monarchy_1
					RUS_constitutional_monarchy_2
					RUS_constitutional_monarchy_3
					RUS_constitutional_monarchy_5
					RUS_constitutional_monarchy_6
					RUS_imperial_glory_1
					RUS_imperial_glory_2
					RUS_imperial_glory_3
					RUS_imperial_glory_5
					RUS_imperial_glory_6
					RUS_imperial_glory_7
					RUS_imperial_glory_8
					RUS_imperial_glory_9
					RUS_a_new_russia_1
					RUS_a_new_russia_2
					RUS_a_new_russia_3
					RUS_a_new_russia_4
					RUS_legacy_of_the_whites_1
					RUS_legacy_of_the_whites_2
					RUS_legacy_of_the_whites_3
					RUS_legacy_of_the_whites_4
				}
			}
		}
	}

	option = { #Liberate core Russia
		name = annex.1065.a
		trigger = {
			NOT = { has_country_flag = SIB_CONQ }
		}
		ai_chance = {
			base = 85
			modifier = {
				add = -70
				OR = {
					tag = GER
					tag = JAP
				}
			}
		}
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
		}
		hidden_effect = { remove_all_russian_cores = yes }
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 213 #Murmansk
					state = 215 #Kem
					state = 216 #Petrozavodsk
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 722 #Petsamo
					state = 755 #Vitebsk
					state = 880 #Dvinsk
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		hidden_effect = { RUS_puppet_setup = yes }
	}

	option = { #liberate core Russia and Siberia
		name = annex.1065.b
		trigger = {
			owns_state = 570 #Novo-Nikolayevsk
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 75
				OR = {
					tag = GER
					tag = JAP
				}
			}
		}
		set_temp_variable = { tag_to_release = SIB }
		every_state = {
			limit = { is_siberia = yes }
			add_core_of_target_and_transfer_if_owned = yes
		}
		puppet_released_tag = yes
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
		}
		hidden_effect = { remove_all_russian_cores = yes }
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				is_siberia = no
				is_russian_far_east = no
				NOT = {
					state = 213 #Murmansk
					state = 215 #Kem
					state = 216 #Petrozavodsk
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 722 #Petsamo
					state = 755 #Vitebsk
					state = 880 #Dvinsk
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
		puppet_released_tag = yes
		hidden_effect = { RUS_puppet_setup = yes }
	}

	option = { #Liberate max Russia
		name = annex.1065.c
		trigger = {
			OR = {
				any_of = {
					array = SOV.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
					}
				}
				any_of = {
					array = RUS.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
					}
				}
				any_of = {
					array = TRM.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
						var:v = { state = 408 } #Vladivostok
						var:v = { state = 409 } #Khabarovsk
					}
				}
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					tag = GER
					tag = JAP
				}
			}
		}
		add_to_temp_array = { target_cores_to_release = RUS }
		add_to_temp_array = { target_cores_to_release = SOV }
		add_to_temp_array = { target_cores_to_release = TRM }
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
			release_targeted_tag_from_core_regions = yes
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
			release_targeted_tag_from_core_regions = yes
		}
		hidden_effect = {
			var:tag_to_release = {
				every_owned_state = {
					limit = {
						is_in_array = { RUS.RUS_starting_states_array = THIS }
					}
					add_core_of = PREV
				}
			}
			remove_all_russian_cores = yes
			RUS_puppet_setup = yes
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		occupy_massive_country = yes
		set_country_flag = RUS_CONQ
	}
}

country_event = { #Fate of Dvinsk
	id = annex.1066
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1066 FROM = [From.GetName]" }
	title = annexation_DVINSK_CONQ
	desc = annexation_DVINSK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Latvia
		name = annex.1066.a
		trigger = {
			NOT = {
				tag = LAT
				tag = BAT
			}
			LAT = {
				ROOT_can_grant_land = yes
				OR = {
					owns_state = 12 #Livonia
					owns_state = 190 #Courland
				}
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = LAT }
		880 = { transfer_state_and_add_core = yes }
		recheck_annexations = yes
	}

	option = { #Give it to BAT
		name = annex.1066.b
		trigger = {
			NOT = {
				tag = LAT
				tag = BAT
			}
			BAT = {
				is_ally_with = ROOT
				OR = {
					owns_state = 12 #Livonia
					owns_state = 190 #Courland
				}
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = BAT }
		880 = { transfer_state_and_add_core = yes }
		recheck_annexations = yes
	}

	option = { #Give it to the Russians
		name = annex.1066.d
		trigger = {
			NOT = {
				tag = LAT
				tag = BAT
			}
			var:209.owner = { #Pskov
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_german_tag = yes
				OR = {
					LAT = { ROOT_can_grant_land = yes }
					BAT = {
						is_ally_with = ROOT
						OR = {
							owns_state = 12 #Livonia
							owns_state = 190 #Courland
						}
					}
				}
			}
			modifier = {
				factor = 0.2
				LAT = { is_ally_with = ROOT }
			}
			modifier = {
				factor = 0.2
				BAT = {
					is_ally_with = ROOT
					OR = {
						owns_state = 12 #Livonia
						owns_state = 190 #Courland
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = var:209.owner }
		880 = { transfer_state_and_add_core = yes }
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = LAT
				tag = BAT
			}
		}
		ai_chance = {
			base = 1000
		}
		occupy_small_country = yes
		add_state_core = 880
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = LAT
				tag = BAT
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = DVINSK_CONQ
	}
}

country_event = { #Fate of the Don-Kuban Union
	id = annex.1067
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1067 FROM = [From.GetName]" }
	title = annexation_DKB_CONQ
	desc = annexation_DKB_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { tag = UKR }
				add_state_claim = 218 #Rostov
				add_state_claim = 234 #Kuban
				add_state_claim = 1006 #Novorossiysk
			}
			DKB = { remove_ideas = RUS_fraying_union }
		}
	}

	option = { #puppet
		name = annex.1067.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				var:219.owner = {
					is_russian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = DKB }
		release_targeted_tag = yes
	}

	option = {
		name = annex.1067.b #Give to Russia
		ai_chance = {
			base = 80
		}
		trigger = {
			var:219.owner = {
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		add_to_temp_array = { target_cores_to_release = DKB }
		add_to_array = { target_cores_to_release = DKB }
		set_temp_variable = { tag_to_release = 219.owner }
		transfer_territory_from_core_regions = yes
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		occupy_medium_country = yes
		set_country_flag = DKB_CONQ
	}
}

#####################################
##   SOUTH EASTERN   E U R O P E   ##
#####################################

country_event = { #Fate of Albania
	id = annex.1068
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1068 FROM = [From.GetName]" }
	title = annexation_ALB_CONQ
	desc = annexation_ALB_CONQ_desc
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = ALB }
			remove_all_cores_and_claims_of_tags = yes
			44 = { add_core_of = ALB }
		}
	}

	option = { #liberate
		name = annex.1068.a
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes
		if = {
			limit = { tag = AUS }
			if = {
				limit = {
					NOT = { ALB = { has_completed_focus = ALB_restoration_of_the_king } }
				}
				ALB = {
					create_country_leader = {
						name = "Wilhelm zu Wied"
						desc = "POLITICS_WILLIAM_WIED_DESC"
						picture = "Portrait_Albania_Wilhelm_Wied.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					set_party_name = {
						ideology = authoritarian_democrat
						long_name = "Grafschaft Wied-Neuwied"
						name = "Grafschaft Wied-Neuwied"
					}
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
					set_political_party = {
						ideology = authoritarian_democrat
						popularity = 60
					}
					unlock_national_focus = ALB_restoration_of_the_king
				}
			}
			else = {
				hidden_effect = {
					ALB = {
						every_unit_leader = {
							limit = {
								OR = {
									has_id = 5480
									has_id = 5490
								}
							}
							set_nationality = XXA
						}
					}
				}
			}
		}
		else = {
			hidden_effect = {
				XXA = {
					every_unit_leader = {
						limit = {
							OR = {
								has_id = 5480
								has_id = 5490
							}
						}
						set_nationality = ALB
					}
				}
			}
		}
		if = {
			limit = {
				tag = BUL
				OR = {
					has_country_leader = {
						ruling_only = yes
						name = "Ferdinand I"
					}
					has_country_leader = {
						ruling_only = yes
						name = "Boris III"
					}
				}
			}
			random_unit_leader = {
				limit = { has_id = 91024 }
				set_nationality = ALB
			}
			ALB = {
				create_country_leader = {
					name = "Kyril I"
					picture = "gfx/leaders/BUL/Portrait_BUL_Prince_Kyril.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = "Bŭlgarska Voenna Administratsiya (Bulgarian Military Administration)"
					name = "Military Administration"
				}
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
			}
		}
		else = {
			hidden_effect = {
				ALB = {
					random_unit_leader = {
						limit = { has_id = 91024 }
						set_nationality = BUL
					}
				}
			}
		}
		hidden_effect = {
			765 = { add_core_of = ALB }
			766 = { add_core_of = ALB }
			ALB = {
				unlock_national_focus = ALB_albanian_elections_of_1936
				if = {
					limit = {
						OR = {
							has_government = social_conservative
							has_authoritarian_government = yes
						}
					}
					unlock_national_focus = ALB_progressive_victory
				}
				else = {
					unlock_national_focus = ALB_bashkimi_victory
				}
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = ALB_CONQ
		occupy_small_country = yes
		hidden_effect = {
			765 = { add_core_of = ALB }
			766 = { add_core_of = ALB }
		}
	}
}

country_event = { #Fate of Montenegro
	id = annex.1069
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1069 FROM = [From.GetName]" }
	title = annexation_MNT_CONQ
	desc = annexation_MNT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate
		name = annex.1069.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SER
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		var:tag_to_release = { transfer_state = 105 } #Montenegro
		puppet_released_tag = yes
	}

	option = { #Give it to Croatia
		name = annex.1070.c
		ai_chance = {
			base = 100
		}
		trigger = {
			CRO = {
				is_ally_of_ROOT = yes
				owns_state = 163
			}
			NOT = {
				tag = CRO
				tag = SER
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		105 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Serbia
		name = annex.1070.d
		ai_chance = {
			base = 300
			modifier = {
				factor = 0
				OR = {
					tag = AUS
					tag = BUL
				}
			}
		}
		trigger = {
			SER = { is_ally_of_ROOT = yes }
			NOT = {
				tag = CRO
				tag = SER
			}
		}
		set_temp_variable = { tag_to_release = SER }
		105 = { transfer_state_and_add_core = yes }
	}

	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = CRO
				tag = SER
			}
		}
		ai_chance = {
			base = 1000
		}
		105 = { remove_claim_and_add_core_of_ROOT = yes }
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = CRO
				tag = SER
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = MNT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Bosnia
	id = annex.1070
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1070 FROM = [From.GetName]" }
	title = annexation_BOS_CONQ
	desc = annexation_BOS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate
		name = annex.1070.a
		ai_chance = {
			base = 50
		}
		set_temp_variable = { tag_to_release = BOS }
		release_targeted_tag = yes
	}
	option = { #Give it to Austria
		name = annex.1070.b
		ai_chance = {
			base = 100
		}
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 109
			}
			NOT = {
				tag = CRO
				tag = SER
				tag = AUS
			}
		}
		104 = {
			if = {
				limit = { is_claimed_by = AUS }
				remove_claim_by = AUS
			}
			if = {
				limit = { NOT = { is_core_of = AUS } }
				add_core_of = AUS
			}
			AUS = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = { #Give it to Croatia
		name = annex.1070.c
		ai_chance = {
			base = 20
		}
		trigger = {
			CRO = { is_ally_of_ROOT = yes }
			NOT = {
				tag = CRO
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		104 = {
			if = {
				limit = { is_claimed_by = CRO }
				remove_claim_by = CRO
			}
			if = {
				limit = { NOT = { is_core_of = CRO } }
				add_core_of = CRO
			}
			CRO = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = { #Give it to Serbia
		name = annex.1070.d
		ai_chance = {
			base = 200
		}
		trigger = {
			SER = { is_ally_of_ROOT = yes }
			NOT = {
				tag = CRO
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		104 = {
			if = {
				limit = {
					NOT = {
						is_claimed_by = SER
						is_core_of = SER
					}
				}
				add_claim_by = SER
			}
			SER = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = CRO
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = SER }
			104 = { add_claim_by = ROOT }
		}
		else = {
			104 = {
				if = {
					limit = { is_claimed_by = ROOT }
					remove_claim_by = ROOT
				}
				if = {
					limit = { NOT = { is_core_of = ROOT } }
					add_core_of = ROOT
				}
			}
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = CRO
				tag = SER
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = BOS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Kosovo
	id = annex.1071
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1071 FROM = [From.GetName]" }
	title = annexation_SER_KOSOVO_CONQ
	desc = annexation_SER_KOSOVO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1071.a #Give it to SER
		trigger = {
			SER = { is_ally_of_ROOT = yes }
			NOT = {
				tag = SER
				tag = ALB
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 5
				SER = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		765 = {
			if = {
				limit = { is_claimed_by = SER }
				remove_claim_by = SER
			}
			if = {
				limit = { NOT = { is_core_of = SER } }
				add_core_of = SER
			}
			SER = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1071.b #Give it to ALB
		trigger = {
			ALB = { is_ally_of_ROOT = yes }
			NOT = {
				tag = SER
				tag = ALB
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 5
				ALB = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		765 = {
			if = {
				limit = { is_claimed_by = ALB }
				remove_claim_by = ALB
			}
			if = {
				limit = { NOT = { is_core_of = ALB } }
				add_core_of = ALB
			}
			ALB = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1071.c #Grant it to SER
		trigger = {
			NOT = {
				SER = { is_ally_of_ROOT = yes }
				tag = SER
				tag = ALB
			}
			SER = {
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0.25
				ALB = { is_ally_of_ROOT = yes }
			}
		}
		765 = {
			save_event_target_as = granted_land
			if = {
				limit = { is_claimed_by = SER }
				remove_claim_by = SER
			}
			if = {
				limit = { NOT = { is_core_of = SER } }
				add_core_of = SER
			}
			SER = { transfer_state = PREV }
		}
		SER = { country_event = annex.38 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1071.d #Grant it to ALB
		trigger = {
			NOT = {
				ALB = { is_ally_of_ROOT = yes }
				tag = SER
				tag = ALB
			}
			ALB = {
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0.25
				SER = { is_ally_of_ROOT = yes }
			}
		}
		765 = {
			save_event_target_as = granted_land
			if = {
				limit = { is_claimed_by = ALB }
				remove_claim_by = ALB
			}
			if = {
				limit = { NOT = { is_core_of = ALB } }
				add_core_of = ALB
			}
			ALB = { transfer_state = PREV }
		}
		ALB = { country_event = annex.38 }
		recheck_annexations = yes
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = ALB
			}
		}
		ai_chance = {
			base = 1000
		}
		765 = {
			if = {
				limit = { is_claimed_by = ROOT }
				remove_claim_by = ROOT
			}
			if = {
				limit = { NOT = { is_core_of = ROOT } }
				add_core_of = ROOT
			}
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = SER
				tag = ALB
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = SER_KOSOVO_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Serbia
	id = annex.1072
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1072 FROM = [From.GetName]" }
	title = annexation_SER_CONQ
	desc = annexation_SER_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = SER
						is_claimed_by = SER
					}
					NOT = {
						state = 107 #Belgrade
						state = 108 #Morava
					}
				}
				remove_core_of = SER
				remove_claim_by = SER
			}
			SER = {
				remove_ideas = {
					SER_the_dream_of_yugoslavia
					SER_the_dream_of_yugoslavia_no_AUS
					SER_the_dream_of_yugoslavia_fulfilled
					SER_konspiracija_idea
				}
				set_party_name = {
					ideology = national_populist
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				create_country_leader = {
					name = "Milan Nedić"
					picture = "Portrait_SER_Milan_Nedic.png"
					expire = "1965.1.1"
					ideology = national_populist_subtype
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				create_country_leader = {
					name = "Milan Nedić"
					picture = "Portrait_SER_Milan_Nedic.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
			}
		}
	}

	option = { #liberate
		name = annex.1072.a
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SER }
		release_targeted_tag = yes
		hidden_effect = {
			SER = {
				set_cosmetic_tag = SER_republic
				add_state_core = 765 #Kosovo
				add_state_core = 767 #Nis
			}
		}
		if = {
			limit = {
				OR = {
					tag = GER
					tag = AUS
					tag = HUN
					tag = BUL
				}
				has_socialist_government = no
			}
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				mark_focus_tree_layout_dirty = yes
			}
		}
		else_if = {
			limit = { #unlock socialist tree for puppet SER
				has_socialist_government = yes
			}
			var:tag_to_release = {
				unlock_national_focus = SER_Third_Revolution
			}
		}
	}
	option = { #make Yugoslavia
		trigger = {
			109 = {
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
			104 = {
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
			105 = {
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
			NOT = {
				is_south_slav_tag = yes
				tag = AUS
				tag = HUN
			}
		}

		name = annex.1072.b
		ai_chance = {
			base = 40
		}
		every_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				OR = {
					state = 102 #Carniola
					state = 109 #Posavina
					state = 103 #Lika
					state = 163 #Dalmatia
					state = 104 #Bosnia
					state = 794 #Syrmia
					state = 767 #Nis
					state = 765 #Kosovo
					state = 105 #Montenegro
					state = 106 #Macedonia
					state = 841 #Kotor
					state = 736 #Austrian Littoral
					state = 45 #Vojvodina
					state = 875 #West Banat
				}
			}
			if = {
				limit = { is_claimed_by = SER }
				remove_claim_by = SER
			}
			if = {
				limit = { NOT = { is_core_of = SER } }
				add_core_of = SER
			}
		}
		set_temp_variable = { tag_to_release = SER }
		release_targeted_tag = yes
		SER = {
			set_cosmetic_tag = YUG_rep
		}
		if = { #unlock socialist tree for puppet SER
			limit = {
				has_socialist_government = yes
			}
			var:tag_to_release = {
				unlock_national_focus = SER_Third_Revolution
			}
		}
	}
	option = { #AUS: Give it to Illyria
		name = annex.1072.c
		trigger = {
			tag = AUS
			has_subject = CRO
			CRO = { has_cosmetic_tag = CRO_illyria }
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = CRO }
		every_owned_state = {
			limit = {
				OR = {
					state = 107 #Belgrade
					state = 108 #Morava
					state = 767 #Nis
				}
			}
			transfer_state_and_add_claim = yes
		}
		hidden_effect = {
			SER = {
				set_cosmetic_tag = SER_republic
				add_state_core = 765 #Kosovo
				add_state_core = 767 #Nis
			}
		}
	}
	option = { #Integrate (Zveno)
		name = annex.1072.e
		trigger = {
			tag = BUL
			has_government = paternal_autocrat
			NOT = {
				has_completed_focus = BUL_balkan_war_defeat
			}
			NOT = {
				has_country_flag = BUL_disabled_bulgoslavia # received volunteers from AUS, GER, or their allies
			}
			NOT = {
				has_completed_focus = BUL_german_diplomacy
			}
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
		ai_chance = {
			base = 10
		}
		add_state_claim = 107
		add_state_claim = 108
		add_state_claim = 765
		add_state_claim = 105
		set_country_flag = BUL_hijacked_yugoslavism
		mark_focus_tree_layout_dirty = yes
		custom_effect_tooltip = SER_new_focuses_unlocked
		country_event = bulgariaflavour.8
		recheck_annexations = yes
		hidden_effect = {
			SER = {
				set_cosmetic_tag = SER_republic
				add_state_core = 765 #Kosovo
				add_state_core = 767 #Nis
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = SER_CONQ
		occupy_medium_country = yes
		hidden_effect = {
			SER = {
				set_cosmetic_tag = SER_republic
				add_state_core = 765 #Kosovo
				add_state_core = 767 #Nis
			}
		}
	}
}

country_event = { #Fate of Nis
	id = annex.1073
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1073 FROM = [From.GetName]" }
	title = annexation_NIIS_CONQ
	desc = annexation_NIIS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Transfer to Serbia
		name = annex.1073.a
		trigger = {
			SER = { is_ally_with = ROOT }
			NOT = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				is_ally_with = BUL
				NOT = { is_ally_with = SER }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		767 = { transfer_state_and_add_core = yes }
	}

	option = { #Transfer to Bulgaria
		name = annex.1073.b
		trigger = {
			BUL = { is_ally_with = ROOT }
			NOT = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				is_ally_with = SER
				NOT = { is_ally_with = BUL }
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		767 = { transfer_state_and_add_claim = yes }
	}

	option = { #Grant to Serbia
		name = annex.1073.c
		trigger = {
			SER = {
				NOT = { is_ally_with = ROOT }
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				is_ally_with = BUL
				NOT = { is_ally_with = SER }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		767 = {
			save_event_target_as = granted_land
			transfer_state_and_add_core = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}
	option = { #Grant to Bulgaria
		name = annex.1073.d
		trigger = {
			BUL = {
				NOT = { is_ally_with = ROOT }
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				is_ally_with = SER
				NOT = { is_ally_with = BUL }
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		767 = {
			save_event_target_as = granted_land
			transfer_state_and_add_claim = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = SER }
			767 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else = {
			add_state_claim = 767
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = NIS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Kotor
	id = annex.1074
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1074 FROM = [From.GetName]" }
	title = annexation_KOTOR_CONQ
	desc = annexation_KOTOR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Transfer to Montenegro
		name = annex.1074.a
		trigger = {
			MNT = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				CRO = {
					owns_state = 163 #Dalmatia
					is_ally_with = ROOT
				}
				NOT = { is_ally_with = MNT }
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		841 = {
			save_event_target_as = granted_land
			transfer_state_and_add_core = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Transfer to Croatia
		name = annex.1074.b
		trigger = {
			NOT = {
				tag = SER
				AND = {
					tag = BUL
					has_country_flag = BUL_hijacked_yugoslavism
				}
			}
			CRO = {
				owns_state = 163 #Dalmatia
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					is_ally_with = MNT
					is_ally_with = SER
				}
				NOT = { is_ally_with = CRO }
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		841 = {
			save_event_target_as = granted_land
			transfer_state_and_add_core = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Transfer to Serbia
		name = annex.1074.c
		trigger = {
			NOT = {
				tag = CRO
				AND = {
					tag = BUL
					has_country_flag = BUL_hijacked_yugoslavism
				}
			}
			SER = {
				owns_state = 105 #Montenegro
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				CRO = {
					owns_state = 163 #Dalmatia
					is_ally_with = ROOT
				}
				NOT = { is_ally_with = SER }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		841 = {
			save_event_target_as = granted_land
			transfer_state_and_add_claim = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Transfer to Bulgaria
		name = annex.1074.d
		trigger = {
			BUL = {
				owns_state = 105 #Montenegro
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				CRO = {
					owns_state = 163 #Dalmatia
					is_ally_with = ROOT
				}
				NOT = { is_ally_with = BUL }
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		841 = {
			save_event_target_as = granted_land
			transfer_state_and_add_claim = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Transfer to Italy
		name = annex.1074.e
		trigger = {
			is_italian_tag = no
			NOT = {
				tag = SER
				tag = CRO
				AND = {
					tag = BUL
					has_country_flag = BUL_hijacked_yugoslavism
				}
			}
			var:163.owner = {
				is_italian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 5
		}
		set_temp_variable = { tag_to_release = 163.owner }
		841 = {
			save_event_target_as = granted_land
			transfer_state_and_add_claim = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				is_italian_tag = yes
				tag = SER
				tag = CRO
				AND = {
					tag = BUL
					has_country_flag = BUL_hijacked_yugoslavism
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = CRO }
			add_state_core = 841
		}
		else = {
			add_state_claim = 841
		}
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = KOTOR_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Macedonia
	id = annex.1075
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1075 FROM = [From.GetName]" }
	title = annexation_SER_MACED_CONQ
	desc = annexation_SER_MACED_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1075.a #Give it to SER
		trigger = {
			SER = {
				owns_state = 767 #Nis
				is_ally_with = ROOT
			}
			NOT = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 5
				SER = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		106 = {
			if = {
				limit = { SER = { has_country_flag = SER_has_integrated_macedonia } }
				transfer_state_and_add_core = yes
			}
			else = {
				transfer_state_and_add_claim = yes
			}
		}
	}
	option = {
		name = annex.1075.b #Give it to BUL
		trigger = {
			BUL = { is_ally_with = ROOT }
			NOT = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 5
				BUL = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		106 = { transfer_state_and_add_claim = yes }
	}
	option = {
		name = annex.1075.c #Grant it to SER
		trigger = {
			SER = {
				owns_state = 767 #Nis
				NOT = { is_ally_with = ROOT }
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 90
		}
		set_temp_variable = { tag_to_release = SER }
		106 = {
			save_event_target_as = granted_land
			if = {
				limit = { SER = { has_country_flag = SER_has_integrated_macedonia } }
				transfer_state_and_add_core = yes
			}
			else = {
				transfer_state_and_add_claim = yes
			}
		}
		var:tag_to_release = { country_event = annex.38 }
	}
	option = {
		name = annex.1075.e #Grant it to BUL
		trigger = {
			BUL = {
				NOT = { is_ally_with = ROOT }
				ROOT_can_grant_land = yes
			}
			if = {
				limit = {
					tag = AUS
					is_faction_leader = yes
				}
				BUL = {
					OR = {
						is_subject = yes
						AND = {
							is_in_faction = yes
							is_faction_leader = no
						}
					}
				}
			}
		}
		ai_chance = {
			base = 20
		}
		set_temp_variable = { tag_to_release = SER }
		106 = {
			save_event_target_as = granted_land
			transfer_state_and_add_claim = yes
		}
		var:tag_to_release = { country_event = annex.38 }
	}
	option = { #AUS: Offer BUL an alliance for it
		name = annex.1075.f
		trigger = {
			tag = AUS
			is_faction_leader = yes
			BUL = {
				ROOT_can_grant_land = yes
				is_subject = no
				OR = {
					is_in_faction = no
					is_faction_leader = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		BUL = {
			country_event = austria.109
		}
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = {
			base = 1000
		}
		106 = { remove_claim_and_add_core_of_ROOT = yes }
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = SER
				tag = BUL
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = SER_MACED_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Romania
	id = annex.1076
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1076 FROM = [From.GetName]" }
	title = annexation_ROM_CONQ
	desc = annexation_ROM_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = ROM
						is_claimed_by = ROM
					}
					NOT = {
						state = 46 #Muntenia
						state = 79 #Moldavia
						state = 78 #Bessarabia
						state = 81 #Oltenia
					}
				}
				if = {
					limit = { is_core_of = ROM }
					set_state_flag = was_core_of_ROM
					remove_core_of = ROM
				}
				remove_claim_by = ROM
			}
		}
	}

	option = { #liberate
		name = annex.1076.a
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					tag = RUS
					tag = TRM
				}
				78 = { is_valid_annexation_state = yes }
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		var:tag_to_release = { setup_romanian_puppet_leaders = yes }
		hidden_effect = {
			ROM = {
				add_state_core = 772 #Dobrudja
				add_state_claim = 76 #North Transylvania
				add_state_claim = 77 #Silistria
				add_state_claim = 80 #Cernauti
				add_state_claim = 82 #Banat
				add_state_claim = 83 #Partium
				add_state_claim = 84 #Transylvania
				add_state_claim = 713 #Suceava
				add_state_claim = 789 #Szeklerland
			}
			country_event = { id = romania.174 days = 2 }
			if = {
				limit = { tag = BUL }
				ROM = { country_event = romania.240 }
			}
		}
	}
	option = { #Take Bessarabia
		name = annex.1076.b
		trigger = {
			is_russian_tag = yes
			NOT = { is_ally_with = UKR }
			78 = { is_valid_annexation_state = yes }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				tag = SOV
			}
		}
		add_state_claim = 78 #Bessarabia
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		var:tag_to_release = { setup_romanian_puppet_leaders = yes }
		hidden_effect = {
			ROM = {
				add_state_core = 772 #Dobrudja
				add_state_claim = 76 #North Transylvania
				add_state_claim = 77 #Silistria
				add_state_claim = 80 #Cernauti
				add_state_claim = 82 #Banat
				add_state_claim = 83 #Partium
				add_state_claim = 84 #Transylvania
				add_state_claim = 713 #Suceava
				add_state_claim = 789 #Szeklerland
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		hidden_effect = {
			ROM = {
				add_state_core = 772 #Dobrudja
				add_state_claim = 76 #North Transylvania
				add_state_claim = 77 #Silistria
				add_state_claim = 80 #Cernauti
				add_state_claim = 82 #Banat
				add_state_claim = 83 #Partium
				add_state_claim = 84 #Transylvania
				add_state_claim = 713 #Suceava
				add_state_claim = 789 #Szeklerland
			}
		}
		set_country_flag = ROM_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bulgaria
	id = annex.1077
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1077 FROM = [From.GetName]" }
	title = annexation_BUL_CONQ
	desc = annexation_BUL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = BUL
						is_claimed_by = BUL
					}
					NOT = {
						state = 48 #Sofia
						state = 211 #Burgas
						state = 212 #Plovdiv
						state = 770 #Pleven
						state = 771 #Varna
						state = 1090 #Vidin
					}
				}
				remove_claim_by = BUL
				remove_core_of = BUL
			}
			BUL = {
				remove_ideas = GER_mil_support_idea
				create_country_leader = {
					name = "Dimo Kazasov"
					picture = "Portrait_BUL_Dimo_Kazasov.png"
					expire = "1965.1.1"
					ideology = social_democrat_subtype
				}
				create_country_leader = {
					name = "Dimitar Gichev"
					picture = "Portrait_BUL_Dimitar_Gichev.png"
					expire = "1965.1.1"
					ideology = social_liberal_subtype
				}
				create_country_leader = {
					name = "Nikola Mushanov"
					picture = "Portrait_BUL_Nikola_Mushanov.png"
					expire = "1965.1.1"
					ideology = market_liberal_subtype
				}
				create_country_leader = {
					name = "Atanas Burov"
					picture = "Portrait_BUL_Atanas_Burov.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				create_country_leader = {
					name = "Boris III"
					desc = "POLITICS_BORIS_III_DESC"
					picture = "Portrait_BUL_Boris.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				create_country_leader = {
					name = "Kimon Georgiev"
					desc = "POLITICS_GEORGIEV_DESC"
					picture = "Portrait_BUL_Kimon_Georgiev.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
			}
		}
	}

	option = { #liberate
		name = annex.1077.a
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes
		if = {
			limit = { tag = SER }
			var:tag_to_release = {
				if = {
					limit = {
						SER = { has_socialist_government = yes }
					}
					set_politics = {
						ruling_party = radical_socialist
						elections_allowed = no
					}
					set_political_party = {
						ideology = radical_socialist
						popularity = 40
					}
					set_cosmetic_tag = BUL_rep
					mark_focus_tree_layout_dirty = yes
					unlock_national_focus = BUL_front_republic
				}
				else = {
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
					set_political_party = {
						ideology = authoritarian_democrat
						popularity = 40
					}
					create_country_leader = {
						name = "Aleksandŭr Stamboliyski"
						desc = "POLITICS_STAMBOLIYSKI_DESC"
						picture = "Portrait_BUL_Aleksandar_Stamboliyski.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
					set_cosmetic_tag = BUL_rep
					mark_focus_tree_layout_dirty = yes
					unlock_national_focus = BUL_front_republic
					set_party_name = {
						ideology = authoritarian_democrat
						long_name = BUL_its_just_bzns_party_long
						name = BUL_its_just_bzns_party
					}
				}
			}
			# Bulgaria transfers some factories
			belgrade_pact_loot_factory_from_bulgaria = yes
		}
		else_if = {
			limit = {
				OR = {
					tag = AUS
					tag = HUN
				}
				has_government = social_conservative
			}
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
			}
		}
		hidden_effect = {
			BUL = {
				add_state_core = 77 #Silistria
				add_state_core = 1089 #Kardzhali
			}
			var:tag_to_release = {
				if = {
					limit = { has_dictatorship_government = no }
					remove_ideas = {
						BUL_royalist_resistance
						BUL_legionary_revolution
						BUL_legionary_revolution_2
						BUL_legionary_revolution_3
						BUL_legionary_economics
						BUL_legionary_economics_2
						BUL_legionary_economics_3
					}
				}
				if = {
					limit = { has_socialist_government = no }
					remove_ideas = {
						BUL_royalist_resistance_worse
						BUL_royalist_resistance_worse_2
						BUL_socialist_offensive_1
						BUL_socialist_offensive_2
						BUL_socialist_offensive_3
						BUL_ds_established
						BUL_communard_revolution_1
						BUL_communard_revolution_2
						BUL_communard_revolution_3
						BUL_spirit_of_solidarity_1
						BUL_spirit_of_solidarity_2
						BUL_bearing_the_torch
						BUL_consolidation_of_power_1
						BUL_consolidation_of_power_2
						BUL_peasant_state_1
						BUL_peasant_state_2
						BUL_peasant_state_3
						BUL_fighting_for_motherland_1
						BUL_fighting_for_motherland_2
					}
				}
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = { base = 0 }
		hidden_effect = {
			BUL = {
				add_state_core = 77 #Silistria
				add_state_core = 1089 #Kardzhali
			}
		}
		set_country_flag = BUL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Constantinople
	id = annex.1078
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1078 FROM = [From.GetName]" }
	title = annexation_CONSTANTINOPLE_CONQ
	desc = annexation_CONSTANTINOPLE_CONQ_DESC
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #transfer to TUR
		name = annex.1078.a
		trigger = {
			TUR = { ROOT_can_grant_land = yes }
			NOT = {
				tag = GRE
				tag = TUR
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.1
				NOT = { is_ally_with = TUR }
			}
		}
		set_temp_variable = { tag_to_release = TUR }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #transfer to GRE
		name = annex.1078.b
		trigger = {
			GRE = { ROOT_can_grant_land = yes }
			NOT = {
				tag = GRE
				tag = TUR
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.1
				NOT = { is_ally_with = GRE }
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #annex
		name = annex.integration
		trigger = {
			tag = TUR
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			remove_claim_and_add_core_of_ROOT = yes
		}
	}

	option = { #annex
		name = annex.integration
		trigger = {
			tag = GRE
		}
		ai_chance = {
			base = 1000
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
	}

	option = { #occupation
		name = annex.occupation
		trigger = {
			NOT = {
				tag = GRE
				tag = TUR
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = CONSTANTINOPLE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Greece
	id = annex.1079
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1079 FROM = [From.GetName]" }
	title = annexation_GRE_CONQ
	desc = annexation_GRE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = GRE
						is_claimed_by = GRE
					}
					NOT = {
						state = 47 #Central Greece
						state = 182 #Crete
						state = 185 #Epirus
						state = 186 #Peloponnese
						state = 758 #Ionian Islands
						state = 768 #Thessaly
						state = 1076 #Veria
					}
				}
				remove_core_of = GRE
				remove_claim_by = GRE
			}
		}
	}

	option = { #Liberate Greece as republic
		name = annex.1079.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			if = {
				limit = { has_socialist_government = yes }
				GRE_stop_being_syndicalist = yes
			}
			if = {
				limit = { has_cosmetic_tag = GRE_kingdom }
				GRE_restore_republic = yes
			}
			if = {
				limit = { has_country_flag = GRE_monarchists_win_referendum }
				clr_country_flag = GRE_monarchists_win_referendum
				set_country_flag = GRE_republicans_win_referendum
			}
			if = {
				limit = { has_government = authoritarian_democrat }
				add_popularity = { ideology = paternal_autocrat popularity = 0.20 }
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
			}
			hidden_effect = {
				add_state_core = 164 #Dodecanese
				add_state_core = 183 #Cyprus
				add_state_core = 187 #Aegean Islands
				add_state_core = 731 #Western Salonica
				add_state_claim = 769 #Eastern Salonica
				add_state_core = 989 #Chalcidice
			}
		}
	}
	option = { #Liberate Kingdom of Greece
		name = annex.1079.b
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			if = {
				limit = { has_socialist_government = yes }
				GRE_stop_being_syndicalist = yes
			}
			if = {
				limit = { has_idea = GRE_memories_of_king }
				remove_ideas = GRE_memories_of_king
			}
			if = {
				limit = { 	NOT = { has_cosmetic_tag = GRE_kingdom } }
				set_cosmetic_tag = GRE_kingdom
			}
			if = {
				limit = { has_completed_focus = GRE_king_alexandros }
				hidden_effect = {
					country_event = gre.25
				}
			}
			else_if = {
				limit = { has_completed_focus = GRE_king_georgios }
				hidden_effect = {
					country_event = gre.26
				}
			}
			else_if = {
				limit = { has_completed_focus = GRE_restore_monarchy }
				hidden_effect = {
					country_event = gre.27
				}
			}
			else_if = {
				limit = {
					NOT = { has_completed_focus = GRE_monarchy_referendum }
					ROOT = { has_elected_government = yes }
				}
				set_country_flag = GRE_monarchists_win_referendum
			}
			else_if = {
				limit = {
					has_completed_focus = GRE_monarchy_referendum
					has_country_flag = GRE_republicans_win_referendum
				}
				set_country_flag = GRE_monarchists_win_referendum
				clr_country_flag = GRE_republicans_win_referendum
			}
			else_if = {
				limit = {
					ROOT = { has_dictatorship_government = yes }
				}
				hidden_effect = {
					country_event = gre.27
				}
			}
			else = {
				hidden_effect = {
					country_event = gre.25
				}
			}
			hidden_effect = {
				add_state_core = 164 #Dodecanese
				add_state_core = 183 #Cyprus
				add_state_core = 187 #Aegean Islands
				add_state_core = 731 #Western Salonica
				add_state_claim = 769 #Eastern Salonica
				add_state_core = 989 #Chalcidice
			}
		}
	}
	option = { #Liberate Hellenic Commune
		name = annex.1079.c
		ai_chance = {
			base = 100
		}
		trigger = {
			has_socialist_government = yes
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			if = {
				limit = { has_cosmetic_tag = GRE_kingdom }
				GRE_restore_republic = yes
			}
			if = {
				limit = { has_socialist_government = no }
				GRE_become_syndicalist = yes
			}
			if = {
				limit = { has_country_flag = GRE_monarchists_win_referendum }
				clr_country_flag = GRE_monarchists_win_referendum
				set_country_flag = GRE_republicans_win_referendum
			}
			hidden_effect = {
				add_state_core = 164 #Dodecanese
				add_state_core = 183 #Cyprus
				add_state_core = 187 #Aegean Islands
				add_state_core = 731 #Western Salonica
				add_state_claim = 769 #Eastern Salonica
				add_state_core = 989 #Chalcidice
			}
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		hidden_effect = {
			GRE = {
				add_state_core = 164 #Dodecanese
				add_state_core = 183 #Cyprus
				add_state_core = 187 #Aegean Islands
				add_state_core = 731 #Western Salonica
				add_state_core = 989 #Chalcidice
			}
		}
		set_country_flag = GRE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Thessaloniki
	id = annex.1080
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1080 FROM = [From.GetName]" }
	title = annexation_THESS_CONQ
	desc = annexation_THESS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Transfer to Bulgaria
		name = annex.1080.a
		trigger = {
			NOT = {
				tag = BUL
				tag = GRE
			}
			BUL = {
				owns_state = 769
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 10
				BUL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0.5
				BUL = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		989 = { transfer_state_and_add_claim = yes }
		recheck_annexations = yes
	}

	option = { #Transfer to Greece
		name = annex.1080.b
		trigger = {
			NOT = {
				tag = BUL
				tag = GRE
			}
			GRE = {
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 10
				GRE = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0.5
				GRE = { is_subject = yes }
			}
		}
		989 = {
			if = {
				limit = { is_claimed_by = GRE }
				remove_claim_by = GRE
			}
			if = {
				limit = { NOT = { is_core_of = GRE } }
				add_core_of = GRE
			}
			save_event_target_as = transfer_state
			GRE = {
				transfer_state = PREV
				country_event = gre.257
			}
		}
		recheck_annexations = yes
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = GRE
				tag = BUL
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = BUL }
			if = {
				limit = {
					989 = { NOT = { is_claimed_by = ROOT } }
				}
				add_state_claim = 989
			}
		}
		else = {
			989 = {
				if = {
					limit = { is_claimed_by = ROOT }
					remove_claim_by = ROOT
				}
				if = {
					limit = { NOT = { is_core_of = ROOT } }
					add_core_of = ROOT
				}
			}
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = GRE
				tag = BUL
			}
		}
		ai_chance = {
			base = 0
		}
		set_country_flag = THESSA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Keraferia
	id = annex.1081
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1081 FROM = [From.GetName]" }
	title = annexation_KERAF_CONQ
	desc = annexation_KERAF_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Transfer to Greece
		name = annex.1081.b
		ai_chance = {
			base = 50
			modifier = {
				factor = 5
				GRE = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			GRE = {
				OR = {
					owns_state = 768
					is_ally_of_ROOT = yes
				}
				ROOT_can_grant_land = yes
			}
		}
		GRE = {
			transfer_state = 1076
			add_state_core = 1076
		}
	}
	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = KRF_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Northern Epirus
	id = annex.1082
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1082 FROM = [From.GetName]" }
	title = annexation_GRE_EPIRUS_CONQ
	desc = annexation_GRE_EPIRUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1082.a #Give it to GRE
		trigger = {
			GRE = { is_ally_of_ROOT = yes }
			NOT = {
				tag = GRE
				tag = ALB
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 5
				GRE = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		766 = {
			if = {
				limit = { is_claimed_by = GRE }
				remove_claim_by = GRE
			}
			if = {
				limit = { NOT = { is_core_of = GRE } }
				add_core_of = GRE
			}
			GRE = { transfer_state = PREV }
			hidden_effect = { add_core_of = ALB }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1082.b #Give it to ALB
		trigger = {
			ALB = { is_ally_of_ROOT = yes }
			NOT = {
				tag = GRE
				tag = ALB
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 5
				ALB = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
		}
		766 = {
			if = {
				limit = { is_claimed_by = ALB }
				remove_claim_by = ALB
			}
			if = {
				limit = { NOT = { is_core_of = ALB } }
				add_core_of = ALB
			}
			ALB = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1082.c #Grant it to GRE
		trigger = {
			NOT = {
				GRE = { is_ally_of_ROOT = yes }
				ALB = { is_ally_of_ROOT = yes }
				tag = GRE
				tag = ALB
			}
			GRE = {
				ROOT_can_grant_land = yes
				owns_state = 185 #Epirus
			}
		}
		ai_chance = {
			base = 90
		}
		766 = {
			save_event_target_as = granted_land
			if = {
				limit = { is_claimed_by = GRE }
				remove_claim_by = GRE
			}
			if = {
				limit = { NOT = { is_core_of = GRE } }
				add_core_of = GRE
			}
			GRE = { transfer_state = PREV }
			hidden_effect = { add_core_of = ALB }
		}
		GRE = { country_event = annex.38 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1082.d #Grant it to ALB
		trigger = {
			NOT = {
				GRE = { is_ally_of_ROOT = yes }
				ALB = { is_ally_of_ROOT = yes }
				tag = GRE
				tag = ALB
			}
			ALB = {
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
		}
		766 = {
			save_event_target_as = granted_land
			if = {
				limit = { is_claimed_by = ALB }
				remove_claim_by = ALB
			}
			if = {
				limit = { NOT = { is_core_of = ALB } }
				add_core_of = ALB
			}
			ALB = { transfer_state = PREV }
		}
		ALB = { country_event = annex.38 }
		recheck_annexations = yes
	}
	option = { #annex
		name = annex.integration
		trigger = {
			OR = {
				tag = GRE
				tag = ALB
			}
		}
		ai_chance = {
			base = 1000
		}
		766 = {
			if = {
				limit = { is_claimed_by = ROOT }
				remove_claim_by = ROOT
			}
			if = {
				limit = { NOT = { is_core_of = ROOT } }
				add_core_of = ROOT
			}
			hidden_effect = { add_core_of = ALB }
		}
		recheck_annexations = yes
	}
	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = GRE
				tag = ALB
			}
		}
		ai_chance = {
			base = 0
		}
		hidden_effect = { 766 = { add_core_of = ALB } }
		set_country_flag = GRE_EPIRUS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Cyprus
	id = annex.1083
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1083 FROM = [From.GetName]" }
	title = annexation_CYP_CONQ
	desc = annexation_CYP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #liberate
		name = annex.1083.a
		trigger = {
			NOT = { tag = GRE }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = GRE
			}
		}
		CYP = { add_state_core = 183 }
		set_temp_variable = { tag_to_release = CYP }
		release_targeted_tag = yes
	}

	option = { #Give it to the Turks
		name = annex.1083.b
		ai_chance = {
			base = 20
		}
		trigger = {
			NOT = {
				tag = TUR
				tag = GRE
			}
			TUR = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = TUR }
		183 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Greece
		name = annex.1083.c
		trigger = {
			NOT = {
				tag = TUR
				tag = GRE
			}
			GRE = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
		}
		set_temp_variable = { tag_to_release = GRE }
		183 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = TUR
				tag = GRE
			}
		}
		ai_chance = {
			base = 100
		}
		add_state_claim = 183
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_small_country = yes
		set_country_flag = CYP_CONQ
	}
}

#####################################
##  S O U T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Spain
	id = annex.1084
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1084 FROM = [From.GetName]" }
	title = annexation_SPA_CONQ
	desc = annexation_SPA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SWF }
			add_to_temp_array = { core_removal_array = SPA }
			add_to_temp_array = { core_removal_array = SPR }
			remove_all_cores_and_claims_of_tags = yes
			if = {
				limit = {
					OR = {
						tag = ENT
						tag = GBR
					}
				}
				add_state_claim = 118 #Gibraltar
			}
			SPA = {
				if = {
					limit = {
						OR = {
							has_country_leader = { name = "Juan III" }
							has_country_leader = { name = "Javier I" }
							has_country_leader = { name = "Jaime I" }
							has_country_leader = { name = "Alfonso XIII" }
						}
					}
					kill_country_leader = yes
				}
			}
		}
	}

	option = { #Carlists
		name = annex.1084.a
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPR }
		release_spain = yes
		var:tag_to_release = {
			complete_national_focus = SPR_restauracion
			if = {
				limit = {
					NOT = { has_country_leader = { name = "Javier I" } }
				}
				meta_effect = {
					text = {
						create_country_leader = {
							name = "Javier I"
							picture = "Portrait_Javier_I.png"
							expire = "1965.1.1"
							ideology = [OVERLORD_IDEOLOGY]
						}
					}
					OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
				}
			}
		}
	}

	option = { #Kingdom
		name = annex.1084.b
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = {
					NOT = {
						has_completed_focus = SPA_no_civil_war
						has_completed_focus = SPA_victor_civil_war
					}
				}
				unlock_national_focus = SPA_no_civil_war
			}
			if = {
				limit = {
					NOT = {
						has_country_leader = { name = "Juan III" ruling_only = yes }
					}
				}
				meta_effect = {
					text = {
						create_country_leader = {
							name = "Juan III"
							desc = "POLITICS_JUAN_BOURBON_DESC"
							picture = "Portrait_SPA_Juan_III.png"
							expire = "1965.1.1"
							ideology = [OVERLORD_IDEOLOGY]
						}
					}
					OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
				}
			}
		}
		if = {
			limit = { tag = GER }
			country_event = annex.74
		}
	}

	option = { #SWF
		name = annex.1084.c
		trigger = {
			has_socialist_government = yes
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SWF }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = {
					NOT = {
						has_completed_focus = SWF_election_success
						has_completed_focus = SWF_aftermath_of_civil_war
					}
				}
				unlock_national_focus = SWF_election_success
			}
		}
	}

	option = { #Release Spanish Republic
		name = annex.1084.d
		trigger = {
			has_socialist_government = no
			if = {
				limit = { tag = POR }
				has_cosmetic_tag = RPO
			}
		}

		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			set_cosmetic_tag = SPA_republic
			if = {
				limit = {
					NOT = {
						has_completed_focus = SPA_no_civil_war
						has_completed_focus = SPA_victor_civil_war
					}
				}
				unlock_national_focus = SPA_no_civil_war
			}
			if = {
				limit = { has_idea = SPA_memories_of_the_republic }
				remove_ideas = SPA_memories_of_the_republic
			}
		}
	}

	option = { #Balkanize Spain
		name = annex.1084.e
		ai_chance = {
			base = 20
		}
		set_country_flag = { flag = SPA_CONQ days = 100 value = 1 }
		recheck_annexations_immediate = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_large_country = yes
		set_country_flag = SPA_CONQ
		hidden_effect = {
			every_state = {
				limit = { is_spain = yes }
				add_core_of = SPA
			}
		}
	}
}

country_event = { #Fate of Galicia
	id = annex.1085
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1085 FROM = [From.GetName]" }
	title = annexation_GLC_CONQ
	desc = annexation_GLC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet
		name = annex.1085.a
		ai_chance = {
			base = 99
		}
		set_temp_variable = { tag_to_release = GLC }
		release_targeted_tag = yes
	}

	option = { #give to Spain
		name = annex.1085.b
		trigger = {
			var:174.owner = { #Leon
				is_spanish_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		add_to_temp_array = { target_cores_to_release = GLC }
		set_temp_variable = { tag_to_release = 174.owner }
		transfer_territory_from_core_regions_and_add_cores = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
		set_country_flag = GLC_CONQ
	}
}

country_event = { #Fate of Central Spain
	id = annex.1086
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1086 FROM = [From.GetName]" }
	title = annexation_CENTRAL_SPAIN_CONQ
	desc = annexation_CENTRAL_SPAIN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SWF }
			add_to_temp_array = { core_removal_array = SPA }
			add_to_temp_array = { core_removal_array = SPR }
			remove_all_cores_and_claims_of_tags = yes
			SPA = { drop_cosmetic_tag = yes }
			if = {
				limit = {
					OR = {
						tag = ENT
						tag = GBR
					}
				}
				add_state_claim = 118 #Gibraltar
			}
		}
	}

	option = { #Carlists
		name = annex.1084.a
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPR }
		release_spain = yes
		var:tag_to_release = { complete_national_focus = SPR_restauracion }
	}

	option = { #Kingdom
		name = annex.1084.b
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = {
					NOT = {
						has_completed_focus = SPA_no_civil_war
						has_completed_focus = SPA_victor_civil_war
					}
				}
				unlock_national_focus = SPA_no_civil_war
			}
			if = {
				limit = {
					NOT = {
						has_country_leader = { name = "Juan III" ruling_only = yes }
					}
				}
				meta_effect = {
					text = {
						create_country_leader = {
							name = "Juan III"
							desc = "POLITICS_JUAN_BOURBON_DESC"
							picture = "Portrait_SPA_Juan_III.png"
							expire = "1965.1.1"
							ideology = [OVERLORD_IDEOLOGY]
						}
					}
					OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
				}
			}
		}
		if = {
			limit = { tag = GER }
			country_event = annex.74
		}
	}

	option = { #SWF
		name = annex.1084.c
		trigger = {
			has_socialist_government = yes
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SWF }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = {
					NOT = {
						has_completed_focus = SWF_election_success
						has_completed_focus = SWF_aftermath_of_civil_war
					}
				}
				unlock_national_focus = SWF_election_success
			}
		}
	}

	option = { #Release Spanish Republic
		name = annex.1084.d
		trigger = {
			has_socialist_government = no
			if = {
				limit = { tag = POR }
				has_cosmetic_tag = RPO
			}
		}

		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = {
					NOT = {
						has_completed_focus = SPA_no_civil_war
						has_completed_focus = SPA_victor_civil_war
					}
				}
				unlock_national_focus = SPA_no_civil_war
			}
			set_cosmetic_tag = SPA_republic
			if = {
				limit = { has_idea = SPA_memories_of_the_republic }
				remove_ideas = SPA_memories_of_the_republic
			}
			hidden_effect = {
				create_country_leader = {
					name = "Miguel Cabanellas Ferrer"
					desc = "POLITICS_MIGUEL_FERRER_DESC"
					picture = "Portrait_SPA_Miguel_Cabanellas_Ferrer.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_large_country = yes
		set_country_flag = CENTRAL_SPAIN_CONQ
		hidden_effect = {
			every_state = {
				limit = { is_spain = yes }
				add_core_of = SPA
			}
		}
	}
}

country_event = { #Fate of Euskadi
	id = annex.1087
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1087 FROM = [From.GetName]" }
	title = annexation_BAS_CONQ
	desc = annexation_BAS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet
		name = annex.1087.a
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = BAS }
		release_targeted_tag = yes
	}

	option = { #give to Spain
		name = annex.1087.b
		trigger = {
			var:176.owner = { #Old Castille
				is_spanish_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		add_to_temp_array = { target_cores_to_release = BAS }
		set_temp_variable = { tag_to_release = 176.owner }
		transfer_territory_from_core_regions_and_add_cores = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
		set_country_flag = BAS_CONQ
	}
}

country_event = { #Fate of Catalonia
	id = annex.1088
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1088 FROM = [From.GetName]" }
	title = annexation_CAT_CONQ
	desc = annexation_CAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			CAT = { add_state_core = 817 }
		}
	}

	option = { #puppet
		name = annex.1088.a
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = CAT }
		release_targeted_tag = yes
	}

	option = { #give to Spain
		name = annex.1088.b
		trigger = {
			var:166.owner = { #Lower Aragon
				is_spanish_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
		}
		add_to_temp_array = { target_cores_to_release = CAT }
		set_temp_variable = { tag_to_release = 166.owner }
		transfer_territory_from_core_regions_and_add_cores = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
		set_country_flag = CAT_CONQ
	}
}

country_event = { #Fate of Portugal
	id = annex.1089
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1089 FROM = [From.GetName]" }
	title = annexation_POR_CONQ
	desc = annexation_POR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Liberate a republican Portugal
		name = annex.1089.a
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				tag = SWF
			}
			modifier = {
				factor = 0
				NOT = { country_exists = POR }
				OR = {
					is_german_tag = yes
					tag = CAN
					tag = GBR
					tag = NFA
					tag = SPA
					tag = SPR
				}
			}
		}
		if = {
			limit = { country_exists = POR }
			custom_effect_tooltip = POR_puppet_tooltip
			hidden_effect = {
				create_dynamic_country = {
					original_tag = POR
					copy_tag = POR
					create_country_leader = {
						name = "Bento António Gonçalves"
						picture = "gfx/leaders/POR/Portrait_Portugal_Bento_Goncalves.png"
						expire = "1965.1.1"
						ideology = totalist_subtype
					}
					create_country_leader = {
						name = "Manuel Joaquim de Sousa"
						picture = "gfx/leaders/Generic/Portrait_Europe_Generic_new_3.png"
						expire = "1965.1.1"
						ideology = syndicalist_subtype
					}
					create_country_leader = {
						name = "Amílcar Ramada Curto"
						picture = "gfx/leaders/POR/Portrait_POR_Amilcar_Ramada_Curto.png"
						expire = "1965.1.1"
						ideology = radical_socialist_subtype
					}
					create_country_leader = {
						name = "José Domingues dos Santos"
						picture = "gfx/leaders/POR/Portrait_POR_José_Domingues_dos_Santos.png"
						expire = "1965.1.1"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = "Liberato Pinto"
						picture = "gfx/leaders/POR/Portrait_POR_Liberato_Pinto.png"
						expire = "1965.1.1"
						ideology = social_liberal_subtype
					}
					create_country_leader = {
						name = "Antonio Granjo"
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Granjo.png"
						expire = "1965.1.1"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = "Francisco da Cunha Leal"
						picture = "gfx/leaders/POR/Portrait_POR_Francisco_da_Cunha_Leal.png"
						expire = "1965.1.1"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = "Antonio de Oliveira Salazar"
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Carmona.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Antonio Oscar Fragoso Carmona"
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Carmona.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = "Francisco Rolão Preto"
						picture = "gfx/leaders/POR/Portrait_POR_Francisco_Rolao_Preto.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
					}
					set_temp_variable = { tag_to_release = THIS }
				}
				add_to_temp_array = { target_cores_to_release = POR }
				release_targeted_tag_from_core_regions = yes
				var:tag_to_release = { set_cosmetic_tag = RPO }
			}
		}
		else = {
			set_temp_variable = { tag_to_release = POR }
			release_targeted_tag = yes
			var:tag_to_release = {
				remove_portuguese_monarchy = yes
				set_cosmetic_tag = RPO
			}
		}
	}

	option = { #Restore the Portuguese monarchy
		name = annex.1089.b
		trigger = {
			NOT = { country_exists = POR }
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_german_tag = no
				NOT = {
					tag = CAN
					tag = GBR
					tag = NFA
					tag = SPA
					tag = SPR
				}
			}
		}
		set_temp_variable = { tag_to_release = POR }
		release_targeted_tag = yes
		var:tag_to_release = { remove_portuguese_monarchy = yes }
		hidden_effect = {
			if = {
				limit = { is_german_tag = yes }
				var:tag_to_release = {
					set_country_flag = POR_Maria_Ana
					create_country_leader = {
						name = "Maria Ana"
						desc = "POLITICS_MARIA_PUPPET_DESC"
						picture = "Portrait_Portugal_Maria_Ana.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
						female = yes
					}
					create_country_leader = {
						name = "Maria Ana"
						desc = "POLITICS_MARIA_PUPPET_DESC"
						picture = "Portrait_Portugal_Maria_Ana.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
						female = yes
					}
					create_country_leader = {
						name = "Maria Ana"
						desc = "POLITICS_MARIA_PUPPET_DESC"
						picture = "Portrait_Portugal_Maria_Ana.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
						female = yes
					}
					hidden_effect = {
						country_event = { id = por.302 days = 30 }
					}
				}
			}
			else = {
				var:tag_to_release = {
					set_country_flag = POR_Maria_Adelaide
					create_country_leader = {
						name = "Maria III"
						desc = "POLITICS_MARIA_ADLEAIDE_BRAGANCA_DESC"
						picture = "Portrait_Portugal_Maria_Adelaide.png"
						expire = "1965.1.1"
						ideology = national_populist_subtype
						female = yes
					}
					create_country_leader = {
						name = "Maria III"
						desc = "POLITICS_MARIA_ADLEAIDE_BRAGANCA_DESC"
						picture = "Portrait_Portugal_Maria_Adelaide.png"
						expire = "1965.1.1"
						ideology = paternal_autocrat_subtype
						female = yes
					}
					create_country_leader = {
						name = "Maria III"
						desc = "POLITICS_MARIA_ADLEAIDE_BRAGANCA_DESC"
						picture = "Portrait_Portugal_Maria_Adelaide.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
						female = yes
					}
					hidden_effect = {
						country_event = { id = por.303 days = 30 }
					}
				}
			}
			hidden_effect = {
				var:tag_to_release = {
					if = {
						limit = {
							ROOT = { has_authoritarian_government = no }
						}
						set_politics = {
							ruling_party = authoritarian_democrat
							elections_allowed = no
						}
						set_political_party = {
							ideology = authoritarian_democrat
							popularity = 60
						}
					}
				}
			}
		}
	}

	option = { #give to SWF
		name = annex.1089.c
		trigger = {
			NOT = { tag = SWF }
			is_ally_with = SWF
		}
		ai_chance = {
			base = 50
		}
		every_owned_state = {
			limit = {
				is_core_of = POR
				is_not_claim_or_core_of_ROOT = yes
			}
			SWF = {
				add_state_claim = PREV
				transfer_state = PREV
			}
		}
		recheck_annexations = yes
	}

	option = {
		name = annex.1089.d
		trigger = {
			tag = SWF
		}
		ai_chance = {
			base = 100
		}
		occupy_medium_country = yes
		add_state_claim = 112 #Lisbon
		add_state_claim = 179 #Beja
		add_state_claim = 180 #Porto
		add_state_claim = 181 #Guarda
		add_state_claim = 939 #Santarém
		add_state_claim = 697 #Madeira
		add_state_claim = 698 #Azores
	}

	option = { #occupy
		name = annex.occupation
		trigger = { is_ai = no }
		set_country_flag = POR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Southern France
	id = annex.1090
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1090 FROM = [From.GetName]" }
	title = annexation_SOUTHFRANCE_CONQ
	desc = annexation_SOUTHFRANCE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1041.a #Restore the Commune of France!
		ai_chance = {
			base = 1000
		}
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = FRA }
		}
		set_temp_variable = { tag_to_release = FRA }
		release_france = yes
		set_autonomy = {
			target = var:tag_to_release
			autonomy_state = autonomy_free
		}
	}

	option = {
		name = annex.1041.b #Restore National France!
		ai_chance = {
			base = 1000
		}
		trigger = {
			has_socialist_government = no
			is_ally_with = ENT
			NOT = { country_exists = NFA }
		}
		set_temp_variable = { tag_to_release = NFA }
		release_france = yes
		set_autonomy = {
			target = var:tag_to_release
			autonomy_state = autonomy_free
		}
	}

	option = {
		name = annex.1041.c #Set up a French Puppet Government
		ai_chance = {
			base = 90
		}
		trigger = {
			has_socialist_government = no
			NOT = {
				is_ally_with = ENT
				is_ally_with = NFA
				country_exists = FRP
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		release_france = yes
	}

	option = {
		name = annex.1041.d #Give it to our French allies
		trigger = {
			OR = {
				any_allied_country = { is_french_tag = yes }
				has_subject = FRA
				has_subject = NFA
				has_subject = FRP
			}
		}
		ai_chance = {
			base = 10
		}
		hidden_effect = {
			random_other_country = {
				limit = {
					is_french_tag = yes
					is_ally_with = ROOT
				}
				set_temp_variable = { tag_to_release = THIS }
			}
		}
		every_owned_state = {
			limit = {
				is_european_france = yes
				is_claim_or_core_of_ROOT = no
				if = {
					limit = {
						ROOT = { is_italian_tag = yes }
					}
					NOT = {
						state = 762 #Nice
						state = 735 #Savoy
						state = 943 #Upper Savoy
					}
				}
				else_if = {
					limit = {
						ROOT = { is_germany_or_splinter_tag = yes }
					}
					NOT = { state = 28 } #Alsace-Lorraine
				}
			}
			var:tag_to_release = { transfer_state = PREV }
		}
	}

	option = { #Occupy
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
		set_country_flag = SOUTHFRANCE_CONQ
	}
}

country_event = { #Fate of Corsica
	id = annex.1091
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1091 FROM = [From.GetName]" }
	title = annexation_CORSICA_CONQ
	desc = annexation_CORSICA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		name = annex.1091.a #Give to France
		trigger = {
			OR = {
				FRA = { is_ally_with = ROOT }
				NFA = { is_ally_with = ROOT }
				FRP = { is_ally_with = ROOT }
			}
		}
		ai_chance = {
			base = 50
		}
		random_other_country = {
			limit = {
				is_french_tag = yes
				is_ally_with = ROOT
			}
			add_state_core = 1
			transfer_state = 1
		}
		recheck_annexations = yes
	}

	option = {
		name = annex.1091.b #Give to Italian Allies
		trigger = {
			OR = {
				SRD = { is_ally_with = ROOT }
				TUS = { is_ally_with = ROOT }
				ITA = { is_ally_with = ROOT }
				SRI = { is_ally_with = ROOT }
				SIC = { is_ally_with = ROOT }
			}
		}
		ai_chance = {
			base = 50
		}
		random_other_country = {
			limit = {
				OR = {
					tag = SRD
					tag = TUS
					tag = ITA
					tag = SRI
					tag = SIC
				}
				is_ally_with = ROOT
			}
			add_state_claim = 1
			transfer_state = 1
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = { is_ai = no }
		set_country_flag = CORSICA_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Italy
	id = annex.1092
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1092 FROM = [From.GetName]" }
	title = annexation_ITA_CONQ
	desc = annexation_ITA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = ITA_CONQ
			if = {
				limit = { tag = AUS }
				every_state = {
					limit = {
						OR = {
							state = 39 #Southern Tyrol
							state = 488 #Trieste
							state = 783 #Trentino
							state = 736 #Austrian Littoral
						}
					}
					if = {
						limit = { is_core_of = ITA }
						remove_core_of = ITA
						add_claim_by = ITA
					}
					if = {
						limit = { is_core_of = SRI }
						remove_core_of = SRI
						add_claim_by = SRI
					}
					if = {
						limit = { is_not_claim_or_core_of_ROOT = yes }
						add_claim_by = ROOT
					}
				}
			}
		}
	}

	option = {
		name = annex.1092.a #Release as Italy
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = AUS
				has_government = authoritarian_democrat
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}

		}
		clr_country_flag = ITA_CONQ


		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 159 #Lombardy
						state = 160 #Venice
						state = 759 #Friuli
					}
				}
				if = {
					limit = { is_claimed_by = ITA }
					remove_claim_by = ITA
				}
				if = {
					limit = { NOT = { is_core_of = ITA } }
					add_core_of = ITA
				}
			}
		}

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			ITA = { transfer_state = PREV }
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = {
				every_unit_leader = { set_nationality = ITA }
				every_navy_leader = { set_nationality = ITA }
				transfer_navy = { target = ITA }
			}
			ITA = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = ITA }
		puppet_released_tag = yes

		hidden_effect = {
			ITA = {
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_destroy_austrian_influence }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_unitary }
						has_completed_focus = ITA_destroy_austrian_influence
					}
					add_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						has_government = national_populist
						has_idea = ITA_republic_unitary
						has_completed_focus = ITA_centralized_power
					}
					remove_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						NOT = { has_government = national_populist }
						NOT = { has_idea = ITA_republic_federation }
						NOT = {
							has_completed_focus = ITA_nationalist_question
							has_completed_focus = ITA_stable_democracy
						}
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = { has_idea = ITA_federation_transition }
					remove_ideas = ITA_federation_transition
				}
				if = {
					limit = { has_idea = ITA_federation_secure }
					remove_ideas = ITA_federation_secure
				}
				if = {
					limit = { owns_state = 2 } #Rome
					set_capital = 2
					set_variable = { historical_capital_state = 2.id }
				}
			}
		}
	}
	option = {
		name = annex.1092.m #Release as Italian Federation
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				has_government = authoritarian_democrat
			}
			NOT = {
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				NOT = { tag = AUS }
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}

		}
		clr_country_flag = ITA_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 159 #Lombardy
						state = 160 #Venice
						state = 759 #Friuli
					}
				}
				if = {
					limit = { is_claimed_by = ITA }
					remove_claim_by = ITA
				}
				if = {
					limit = { NOT = { is_core_of = ITA } }
					add_core_of = ITA
				}
			}
		}

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			ITA = { transfer_state = PREV }
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = {
				every_unit_leader = { set_nationality = ITA }
				every_navy_leader = { set_nationality = ITA }
				transfer_navy = { target = ITA }
			}
			ITA = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = ITA }
		puppet_released_tag = yes

		hidden_effect = {
			ITA = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				add_popularity = {
					ideology = authoritarian_democrat
					popularity = 0.2
				}
				if = {
					limit = { has_idea = ITA_republic_federation }
					remove_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_transition }
						NOT = { has_completed_focus = ITA_stable_institutions }
					}
					add_ideas = ITA_federation_transition
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_secure }
						has_completed_focus = ITA_stable_institutions
					}
					add_ideas = ITA_federation_secure
				}
				if = {
					limit = { owns_state = 2 } #Rome
					set_capital = 2
					set_variable = { historical_capital_state = 2.id }
				}
			}
		}
	}
	option = {
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = {
				country_exists = SRI
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}

		}
		clr_country_flag = ITA_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1003 #Aosta
						state = 158 #Piedmont
						state = 838 #Liguria
						state = 1004 #Emilia
						state = 161 #Romagna
						state = 162 #Tuscany
						state = 157 #Marches
						state = 1005 #Umbria
						state = 764 #Viterbo
					}
				}
				if = {
					limit = { is_claimed_by = SRI }
					remove_claim_by = SRI
				}
				if = {
					limit = { NOT = { is_core_of = SRI } }
					add_core_of = SRI
				}
			}
		}

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			SRI = { transfer_state = PREV }
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = {
				every_unit_leader = { set_nationality = SRI }
				every_navy_leader = { set_nationality = SRI }
				transfer_navy = { target = SRI }
			}
			SRI = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SRI }
		puppet_released_tag = yes
		SRI = {
			if = {
				limit = { owns_state = 2 } #Rome
				set_capital = 2
				set_variable = { historical_capital_state = 2.id }
			}
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			ITA = { is_ally_of_ROOT = yes }
			NOT = { tag = ITA }
		}
		ai_chance = {
			base = 95
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			ITA = { transfer_state = PREV }
		}
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			SRI = { is_ally_of_ROOT = yes }
			NOT = { tag = SRI }
		}
		ai_chance = {
			base = 95
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			SRI = { transfer_state = PREV }
		}
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			SIC = { is_ally_of_ROOT = yes }
			NOT = { tag = SIC }
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0.5
				is_in_faction_with = SRD
			}
			modifier = {
				factor = 0.1
				OR = {
					is_in_faction_with = ITA
					is_in_faction_with = SRI
				}
			}
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			SIC = { transfer_state = PREV }
		}
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			SRD = { is_ally_of_ROOT = yes }
			NOT = { tag = SRD }
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0.1
				OR = {
					is_in_faction_with = ITA
					is_in_faction_with = SRI
				}
			}
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_not_claim_or_core_of_ROOT = yes
			}
			SRD = { transfer_state = PREV }
		}
	}
	option = {
		name = annex.1092.h #Offer to ITA
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			ITA = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		ITA = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
	}
	option = {
		name = annex.1092.i #Offer to SRD
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			158 = {
				OR = {
					is_owned_and_controlled_by = ROOT
					is_owned_and_controlled_by = SRD
				}
			}
			SRD = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		SRD = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
	}
	option = {
		name = annex.1092.j #Offer to SIC
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			SIC = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		SIC = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
	}
	option = {
		name = annex.1092.k #We'll decide what to do with each region separately
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 5
		}
		set_country_flag = { flag = KR_will_balkanize_italy days = 100 value = 1 }
		custom_effect_tooltip = will_balkanize_italy
		recheck_annexations_immediate = yes
	}
	option = {
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_large_country = yes
	}
}

country_event = { #Fate of the Aosta Valley
	id = annex.1093
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1093 FROM = [From.GetName]" }
	title = annexation_AOSTA_CONQ
	desc = annexation_AOSTA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SRD
		name = annex.1093.a
		trigger = {
			SRD = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRD }
			}
			modifier = {
				factor = 10
				is_ally_with = SRD
			}
		}
		SRD = { transfer_state = 1003 }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = {
			base = 10
		}
		add_political_power = -75
		add_state_claim = 1003
		recheck_annexations = yes
	}
}

country_event = { #Fate of Piedmont
	id = annex.1094
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1094 FROM = [From.GetName]" }
	title = annexation_PIEDMONT_CONQ
	desc = annexation_PIEDMONT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = PIEDMONT_CONQ
		}
	}

	option = {
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = {
				is_italian_tag = yes
				country_exists = SRI
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = PIEDMONT_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1003 #Aosta Valley
						state = 158 #Piedmont
						state = 838 #Liguria
						state = 1004 #Emilia
						state = 161 #Romagna
						state = 162 #Tuscany
						state = 157 #Marches
						state = 1005 #Umbria
						state = 764 #Viterbo
					}
				}
				if = {
					limit = { is_claimed_by = SRI }
					remove_claim_by = SRI
				}
				if = {
					limit = { NOT = { is_core_of = SRI } }
					add_core_of = SRI
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
					state = 1004 #Emilia
					state = 161 #Romagna
					state = 162 #Tuscany
					state = 157 #Marches
					state = 1005 #Umbria
					state = 764 #Viterbo
					state = 762 #Nice
					state = 735 #Savoy
					state = 943 #Upper Savoy
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			SRI = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SRI }
		puppet_released_tag = yes
	}
	option = {
		name = annex.1094.a #Release as SRD
		trigger = {
			has_socialist_government = no
			NOT = {
				country_exists = SRD
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = PIEDMONT_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1002 #Sassari
						state = 114 #Cagliari
						state = 1003 #Aosta Valley
						state = 158 #Piedmont
						state = 838 #Liguria
						state = 762 #Nice
						state = 735 #Savoy
						state = 943 #Upper Savoy
					}
				}
				if = {
					limit = { is_claimed_by = SRD }
					remove_claim_by = SRD
				}
				if = {
					limit = { NOT = { is_core_of = SRD } }
					add_core_of = SRD
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
					state = 1002 #Sassari
					state = 114 #Cagliari
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			SRD = { transfer_state = PREV }
		}

		set_temp_variable = { tag_to_release = SRD }
		puppet_released_tag = yes
		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = SRD
				autonomy_state = kr_federated_state
			}
		}
		if = {
			limit = {
				SRD = {
					owns_state = 158
					NOT = { has_cosmetic_tag = SRD_piedmont }
				}
			}
			SRD = { set_cosmetic_tag = SRD_piedmont }
		}
		else_if = {
			limit = {
				SRD = {
					NOT = { owns_state = 158 }
					has_cosmetic_tag = SRD_piedmont
				}
			}
			SRD = { drop_cosmetic_tag = yes }
		}

		reverse_add_opinion_modifier = { target = SRD modifier = KR_liberated_us }
	}
	option = {
		name = annex.1092.i #Offer to SRD
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			838 = {
				is_owned_and_controlled_by = ROOT
				is_not_claim_or_core_of_ROOT = yes
			}
			SRD = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_piedmont_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		SRD = {
			set_country_flag = offered_piedmont_@ROOT
			set_country_flag = offering_piedmont
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.5
				SRD = { is_ally_of_ROOT = yes }
			}
		}
		clr_country_flag = PIEDMONT_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			ITA = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
		}
		clr_country_flag = PIEDMONT_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			SRI = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				SRD = { is_ally_of_ROOT = yes }
			}
		}
		clr_country_flag = PIEDMONT_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			SIC = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = SIC
					owns_state = 838
					NOT = { has_country_flag = SIC_empire }
					controls_all_owned_states = yes
					SRD = {
						exists = yes
						is_subject = no
						NOT = { has_war_with = ROOT }
						controls_all_owned_states = yes
					}
				}
			}
		}
		ai_chance = {
			base = 200
		}
		clr_country_flag = PIEDMONT_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
					state = 762 #Nice
					state = 735 #Savoy
					state = 943 #Upper Savoy
				}
			}
			if = {
				limit = {
					NOT = {
						is_claimed_by = SRD
						is_core_of = SRD
					}
				}
				add_claim_by = SRD
			}
			SRD = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = SIC_offer_piedmont_to_SRD #Make a deal with SRD
		trigger = {
			tag = SIC
			owns_state = 838
			NOT = { has_country_flag = SIC_empire }
			controls_all_owned_states = yes
			SRD = {
				exists = yes
				is_subject = no
				NOT = {
					has_war_with = ROOT
					has_country_flag = ITA_refuse_join_@ROOT
				}
				controls_all_owned_states = yes
			}
		}
		SRD = { country_event = sic.100 }
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Lombardy
	id = annex.1095
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1095 FROM = [From.GetName]" }
	title = annexation_LOM_CONQ
	desc = annexation_LOM_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = LOM_CONQ
		}
	}

	option = {
		name = annex.1092.a #Release as ITA
		trigger = {
			160 = { #Venice
				is_owned_and_controlled_by = ROOT
				is_not_claim_or_core_of_ROOT = yes
			}
			has_socialist_government = no
			NOT = {
				tag = AUS
				has_government = authoritarian_democrat
				country_exists = ITA
				is_italian_tag = yes
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		clr_country_flag = LOM_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 159 #Lombardy
						state = 160 #Venice
						state = 759 #Friuli
					}
				}
				if = {
					limit = { is_claimed_by = ITA }
					remove_claim_by = ITA
				}
				if = {
					limit = { NOT = { is_core_of = ITA } }
					add_core_of = ITA
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 159
					state = 160
					state = 759
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			ITA = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = ITA }
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_autonomy = {
					target = ITA
					autonomy_state = kr_federated_state
				}
			}
			ITA = {
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_destroy_austrian_influence }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_unitary }
						has_completed_focus = ITA_destroy_austrian_influence
					}
					add_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						has_government = national_populist
						has_idea = ITA_republic_unitary
						has_completed_focus = ITA_centralized_power
					}
					remove_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						NOT = { has_government = national_populist }
						NOT = { has_idea = ITA_republic_federation }
						NOT = {
							has_completed_focus = ITA_nationalist_question
							has_completed_focus = ITA_stable_democracy
						}
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = { has_idea = ITA_federation_transition }
					remove_ideas = ITA_federation_transition
				}
				if = {
					limit = { has_idea = ITA_federation_secure }
					remove_ideas = ITA_federation_secure
				}
			}
		}
	}
	option = {
		name = annex.1092.m #Release as Italian Federation
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				has_government = authoritarian_democrat
			}
			NOT = {
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				is_italian_tag = yes
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				NOT = { tag = AUS }
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}

		}
		clr_country_flag = LOM_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 159 #Lombardy
						state = 160 #Venice
						state = 759 #Friuli
					}
				}
				if = {
					limit = { is_claimed_by = ITA }
					remove_claim_by = ITA
				}
				if = {
					limit = { NOT = { is_core_of = ITA } }
					add_core_of = ITA
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 159
					state = 160
					state = 759
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			ITA = { transfer_state = PREV }
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = {
				every_unit_leader = { set_nationality = ITA }
				every_navy_leader = { set_nationality = ITA }
				transfer_navy = { target = ITA }
			}
			ITA = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = ITA }
		puppet_released_tag = yes

		hidden_effect = {
			ITA = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				add_popularity = {
					ideology = authoritarian_democrat
					popularity = 0.2
				}
				if = {
					limit = { has_idea = ITA_republic_federation }
					remove_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_transition }
						NOT = { has_completed_focus = ITA_stable_institutions }
					}
					add_ideas = ITA_federation_transition
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_secure }
						has_completed_focus = ITA_stable_institutions
					}
					add_ideas = ITA_federation_secure
				}
				if = {
					limit = {
						has_country_leader = { name = "Pietro Ferdinando I" ruling_only = yes }
						country_exists = TUS
						NOT = { country_exists = LOM }
					}
					create_country_leader = {
						name = "Adriano I"
						picture = "gfx/leaders/LOM/Portrait_LOM_Adriano_Visconti.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
				}
				else_if = {
					limit = {
						has_country_leader = { name = "Pietro Ferdinando I" ruling_only = yes }
						country_exists = TUS
						NOT = { country_exists = VNC }
					}
					create_country_leader = {
						name = "Giuseppe Volpi"
						picture = "gfx/leaders/VNC/Portrait_VNC_Giuseppe_Volpi.png"
						expire = "1965.1.1"
						ideology = authoritarian_democrat_subtype
					}
				}
				else_if = {
					limit = {
						has_country_leader = { name = "Pietro Ferdinando I" ruling_only = yes }
						country_exists = TUS
					}
					kill_country_leader = yes
				}
			}
		}
	}
	option = {
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = {
				country_exists = SRI
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}

		}
		clr_country_flag = LOM_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1003 #Aosta
						state = 158 #Piedmont
						state = 838 #Liguria
						state = 1004 #Emilia
						state = 161 #Romagna
						state = 162 #Tuscany
						state = 157 #Marches
						state = 1005 #Umbria
						state = 764 #Viterbo
					}
				}
				if = {
					limit = { is_claimed_by = SRI }
					remove_claim_by = SRI
				}
				if = {
					limit = { NOT = { is_core_of = SRI } }
					add_core_of = SRI
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 159
					state = 160
					state = 759
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			hidden_effect = {
				remove_claim_by = SRI
				add_core_of = SRI
			}
			SRI = { transfer_state = PREV }
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = {
				every_unit_leader = { set_nationality = SRI }
				every_navy_leader = { set_nationality = SRI }
				transfer_navy = { target = SRI }
			}
			SRI = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SRI }
		puppet_released_tag = yes
	}
	option = {
		name = annex.1095.a #Release as LOM duchy
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				tag = GER
				tag = SIC
				tag = SRD
				has_government = authoritarian_democrat
			}
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = LOM_CONQ

		hidden_effect = {
			LOM = {
				add_state_core = 159
			}
		}

		LOM = { transfer_state = 159 }
		reverse_add_opinion_modifier = { target = LOM modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = LOM }
		puppet_released_tag = yes

		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = LOM
				autonomy_state = kr_federated_state
			}
		}
		if = {
			limit = {
				LOM = {
					NOT = {
						has_government = authoritarian_democrat
						has_country_flag = LOM_constitutional_monarchy
					}
				}
			}
			hidden_effect = {
				LOM = {
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
					add_popularity = { ideology = authoritarian_democrat popularity = 0.20 }
				}
			}
		}
		if = {
			limit = {
				ITA = {
					exists = yes
					has_country_leader = {
						ruling_only = yes
						name = "Adriano I"
					}
				}
			}
			ITA = { kill_country_leader = yes }
		}
	}
	option = {
		name = annex.1095.c #Release as LOM republic
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = AUS
				tag = GER
				tag = SIC
				tag = SRD
				has_government = authoritarian_democrat
			}
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = LOM_CONQ

		hidden_effect = {
			LOM = {
				add_state_core = 159
			}
		}

		LOM = { transfer_state = 159 }
		reverse_add_opinion_modifier = { target = LOM modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = LOM }
		puppet_released_tag = yes

		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = LOM
				autonomy_state = kr_federated_state
			}
		}
		if = {
			limit = {
				LOM = { has_country_flag = LOM_constitutional_monarchy }
			}
			LOM = {
				clr_country_flag = LOM_constitutional_monarchy
			}
		}
		if = {
			limit = {
				LOM = {
					has_elected_government = no
				}
			}
			hidden_effect = {
				LOM = {
					set_politics = {
						ruling_party = social_liberal
						elections_allowed = no
					}
					add_popularity = { ideology = social_liberal popularity = 0.20 }
				}
			}
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = LOM_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		ITA = { transfer_state = 159 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = LOM_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		SRI = { transfer_state = 159 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = LOM_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		SIC = { transfer_state = 159 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = LOM_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		SRD = { transfer_state = 159 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1095.b #Give to VNC
		trigger = {
			tag = AUS
			country_exists = VNC
			VNC = {
				has_country_flag = VNC_accepted_austrian_help
				has_country_flag = VNC_republican_revolt
			}
		}
		clr_country_flag = LOM_CONQ
		VNC = { transfer_state = 159 }
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Venice
	id = annex.1096
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1096 FROM = [From.GetName]" }
	title = annexation_VNC_CONQ
	desc = annexation_VNC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = VNC_CONQ
		}
	}

	option = {
		name = annex.1096.a #Release as VNC
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = VNC_CONQ

		hidden_effect = {
			VNC = {
				add_state_core = 160
				add_state_core = 759
			}
		}

		every_owned_state = {
			limit = {
				is_core_of = VNC
				is_not_claim_or_core_of_ROOT = yes
			}
			VNC = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = VNC modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = VNC }
		puppet_released_tag = yes

		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = VNC
				autonomy_state = kr_federated_state
			}
		}
		if = {
			limit = {
				ITA = {
					exists = yes
					has_country_leader = {
						ruling_only = yes
						name = "Giuseppe Volpi"
					}
				}
			}
			ITA = { kill_country_leader = yes }
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = VNC_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		ITA = { transfer_state = 160 }

		if = {
			limit = {
				759 = {
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			ITA = { transfer_state = 759 }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = VNC_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		SRI = { transfer_state = 160 }

		if = {
			limit = {
				759 = {
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			SRI = { transfer_state = 759 }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = VNC_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		SIC = { transfer_state = 160 }

		if = {
			limit = {
				759 = {
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			SIC = { transfer_state = 759 }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = VNC_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		SRD = { transfer_state = 160 }

		if = {
			limit = {
				759 = {
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			SRD = { transfer_state = 759 }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Emilia
	id = annex.1097
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1097 FROM = [From.GetName]" }
	title = annexation_EMI_CONQ
	desc = annexation_EMI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = EMI_CONQ
		}
	}

	option = {
		name = annex.1097.a #Release as EMI
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = SPA
				tag = SIC
				AND = {
					tag = NFA
					NFA_has_monarchy = yes
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = EMI_CONQ

		hidden_effect = {
			EMI = {
				add_state_core = 1004
			}
		}

		EMI = { transfer_state = 1004 }
		reverse_add_opinion_modifier = { target = EMI modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = EMI }
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_autonomy = {
					target = EMI
					autonomy_state = kr_federated_state
				}
			}
			if = {
				limit = {
					NOT = { has_government = authoritarian_democrat }
					OR = {
						tag = GER
						tag = AUS
						tag = SRD
					}
				}
				EMI = {
					add_popularity = { ideology = authoritarian_democrat popularity = 0.2 }
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
				}
			}
		}
	}
	option = {
		name = annex.1097.b #Release as Parma
		trigger = {
			has_socialist_government = no
			OR = {
				tag = SPA
				tag = SIC
				AND = {
					tag = NFA
					NFA_has_monarchy = yes
				}
			}

		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = EMI_CONQ

		EMI = {
			add_state_core = 1004
			transfer_state = 1004
		}
		set_temp_variable = { tag_to_release = EMI }
		puppet_released_tag = yes
		hidden_effect = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_autonomy = {
					target = EMI
					autonomy_state = kr_federated_state
				}
			}
			EMI = {
				set_cosmetic_tag = EMI_PAR
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = national_populist_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = paternal_autocrat_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = authoritarian_democrat_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = social_conservative_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = market_liberal_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = social_liberal_subtype
				}
				create_country_leader = {
					name = "Elias I"
					desc = "POLITICS_DUKE_ELIAS_DESC"
					picture = "Portrait_EMI_Duke_Elias.png"
					expire = "1965.1.1"
					ideology = social_democrat_subtype
				}
			}
		}
		reverse_add_opinion_modifier = { target = EMI modifier = KR_liberated_us }
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = EMI_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		ITA = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = EMI_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		SRI = { transfer_state = 1004 }
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = EMI_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		SIC = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = EMI_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		SRD = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Tuscany
	id = annex.1098
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1098 FROM = [From.GetName]" }
	title = annexation_TUS_CONQ
	desc = annexation_TUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = TUS_CONQ
		}
	}

	option = {
		name = annex.1098.a #Release as TUS grand duchy
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				tag = GER
				tag = SRD
				tag = SIC
				has_government = authoritarian_democrat
				has_government = paternal_autocrat
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = TUS_CONQ

		hidden_effect = {
			TUS = {
				add_state_core = 162
			}
		}

		TUS = { transfer_state = 162 }
		reverse_add_opinion_modifier = { target = TUS modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = TUS }
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_autonomy = {
					target = TUS
					autonomy_state = kr_federated_state
				}
			}
			if = {
				limit = {
					NOT = {
						has_government = authoritarian_democrat
						has_government = paternal_autocrat
					}
				}
				TUS = {
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
					add_popularity = { ideology = authoritarian_democrat popularity = 0.2 }
				}
			}
		}

		if = {
			limit = {
				ITA = {
					exists = yes
					has_country_leader = {
						ruling_only = yes
						name = "Pietro Ferdinando I"
					}
				}
			}
			ITA = { kill_country_leader = yes }
		}
	}
	option = {
		name = annex.1098.b #Release as TUS republic
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = AUS
				tag = GER
				tag = SRD
				tag = SIC
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = TUS_CONQ

		hidden_effect = {
			TUS = {
				add_state_core = 162
			}
		}

		TUS = {
			transfer_state = 162
		}
		reverse_add_opinion_modifier = { target = TUS modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = TUS }
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_autonomy = {
					target = TUS
					autonomy_state = kr_federated_state
				}
			}
			if = {
				limit = {
					TUS = {
						OR = {
							has_government = authoritarian_democrat
							has_government = paternal_autocrat
						}
					}
				}
				TUS = {
					add_popularity = { ideology = social_conservative popularity = 0.2 }
					set_politics = {
						ruling_party = social_conservative
						elections_allowed = no
					}
				}
			}
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = TUS_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		ITA = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = TUS_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		SRI = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = TUS_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		SIC = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = TUS_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		SRD = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Central Italy
	id = annex.1099
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1099 FROM = [From.GetName]" }
	title = annexation_PAP_STATES_CONQ
	desc = annexation_PAP_STATES_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = PAP_STATES_CONQ
		}
	}

	option = {
		name = annex.1099.a #Give to PAP allies
		trigger = {
			NOT = { tag = PAP }
			PAP = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				SIC = {
					is_ally_of_ROOT = yes
					has_country_flag = SIC_empire
				}
			}
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = PAP modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marche
					state = 161 #Romagna
				}
			}
			PAP = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1099.b #Offer to PAP
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			count_triggers = {
				amount = 3
				764 = { #Viterbo
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				1005 = { #Umbria
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				157 = { #Marche
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				161 = { #Romagna
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			PAP = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_papacy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
				PAP = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		PAP = {
			set_country_flag = offered_papacy_@ROOT
			set_country_flag = offering_papacy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.j #Offer to SIC
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			count_triggers = {
				amount = 3
				764 = { #Viterbo
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				1005 = { #Umbria
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				157 = { #Marche
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
				161 = { #Romagna
					is_owned_and_controlled_by = ROOT
					is_not_claim_or_core_of_ROOT = yes
				}
			}
			SIC = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_papacy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
				PAP = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 50
		}
		SIC = {
			set_country_flag = offered_papacy_@ROOT
			set_country_flag = offering_papacy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marche
					state = 161 #Romagna
				}
			}
			ITA = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marche
					state = 161 #Romagna
				}
			}
			SRI = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				PAP = { is_ally_of_ROOT = yes }
				SIC = { NOT = { has_country_flag = SIC_empire } }
			}
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marche
					state = 161 #Romagna
				}
			}
			SIC = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marche
					state = 161 #Romagna
				}
			}
			SRD = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = { is_ai = no }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Rome
	id = annex.1100
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1100 FROM = [From.GetName]" }
	title = annexation_PAP_CONQ
	desc = annexation_PAP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = PAP_CONQ
		}
	}

	option = {
		name = annex.1100.a #Release as PAP
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = PAP }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = PAP_CONQ

		hidden_effect = {
			PAP = {
				add_state_core = 2
				add_state_core = 764
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Rome
					state = 764 #Viterbo
					AND = {
						ROOT = { has_country_flag = SIC_confed }
						OR = {
							state = 764 #Viterbo
							state = 1005 #Umbria
							state = 157 #Marche
							state = 161 #Romagna
						}
					}
				}
			}
			PAP = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = PAP modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = PAP }
		puppet_released_tag = yes
		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = PAP
				autonomy_state = kr_federated_state
			}
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Rome
					state = 764 #Viterbo
				}
			}
			ITA = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Rome
					state = 764 #Viterbo
				}
			}
			SRI = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Rome
					state = 764 #Viterbo
				}
			}
			SIC = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Rome
					state = 764 #Viterbo
				}
			}
			SRD = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Southern Italy
	id = annex.1101
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1101 FROM = [From.GetName]" }
	title = annexation_SIC_CONQ
	desc = annexation_SIC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = SIC_CONQ
		}
	}

	option = {
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = SRI }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = SIC_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1003 #Aosta Valley
						state = 158 #Piedmont
						state = 838 #Liguria
						state = 1004 #Emilia
						state = 161 #Romagna
						state = 162 #Tuscany
						state = 157 #Marches
						state = 1005 #Umbria
						state = 764 #Viterbo
					}
				}
				if = {
					limit = { is_claimed_by = SRI }
					remove_claim_by = SRI
				}
				if = {
					limit = { NOT = { is_core_of = SRI } }
					add_core_of = SRI
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			hidden_effect = {
				remove_claim_by = SRI
				add_core_of = SRI
			}
			SRI = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SRI }
		puppet_released_tag = yes
	}
	option = {
		name = annex.1101.a #Release as SIC
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = SIC }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = SIC_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 117 #Campania
						state = 742 #Abruzzo
						state = 837 #Apulia
						state = 156 #Calabria
						state = 115 #Sicily
					}
				}
				if = {
					limit = { is_claimed_by = SIC }
					remove_claim_by = SIC
				}
				if = {
					limit = { NOT = { is_core_of = SIC } }
					add_core_of = SIC
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			SIC = { transfer_state = PREV }
		}

		reverse_add_opinion_modifier = { target = SIC modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SIC }
		puppet_released_tag = yes
		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = SIC
				autonomy_state = kr_federated_state
			}
		}
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SRD
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			ITA = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SRD
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			SRI = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			SIC = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			SRD = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Sardinia
	id = annex.1102
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1102 FROM = [From.GetName]" }
	title = annexation_SRD_CONQ
	desc = annexation_SRD_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = SRD_CONQ
		}
	}

	option = {
		name = annex.1102.a #Release as SRD
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = SRD }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = SRD_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 1002 #Sassari
						state = 114 #Cagliari
					}
				}
				if = {
					limit = { is_claimed_by = SRD }
					remove_claim_by = SRD
				}
				if = {
					limit = { NOT = { is_core_of = SRD } }
					add_core_of = SRD
				}
			}
			every_state = {
				limit = {
					OR = {
						state = 1003 #Aosta Valley
						state = 158 #Piedmont
						state = 838 #Liguria
					}
				}
				if = {
					limit = {
						NOT = {
							is_claimed_by = SRD
							is_core_of = SRD
						}
					}
					add_claim_by = SRD
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 1002 #Sassari
					state = 114 #Cagliari
				}
				is_not_claim_or_core_of_ROOT = yes
			}
			SRD = { transfer_state = PREV }
		}
		set_temp_variable = { tag_to_release = SRD }
		puppet_released_tag = yes
		if = {
			limit = { has_country_flag = SIC_confed }
			set_autonomy = {
				target = SRD
				autonomy_state = kr_federated_state
			}
		}
		if = {
			limit = {
				SRD = {
					owns_state = 158
					NOT = { has_cosmetic_tag = SRD_piedmont }
				}
			}
			SRD = { set_cosmetic_tag = SRD_piedmont }
		}
		else_if = {
			limit = {
				SRD = {
					NOT = { owns_state = 158 }
					has_cosmetic_tag = SRD_piedmont
				}
			}
			SRD = { drop_cosmetic_tag = yes }
		}

		reverse_add_opinion_modifier = { target = SRD modifier = KR_liberated_us }
	}
	option = {
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
		}
		clr_country_flag = SRD_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1002 #Sassari
					state = 114 #Cagliari
				}
			}
			ITA = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
		}
		clr_country_flag = SRD_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1002 #Sassari
					state = 114 #Cagliari
				}
			}
			SRI = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
		}
		clr_country_flag = SRD_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1002 #Sassari
					state = 114 #Cagliari
				}
			}
			SIC = { transfer_state = PREV }
		}
		recheck_annexations = yes
	}
	option = {
		name = annex.occupation
		trigger = {
			is_ai = no
			NOT = { has_country_flag = SIC_confed }
		}
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Malta
	id = annex.1103
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1103 FROM = [From.GetName]" }
	title = annexation_MLT_CONQ
	desc = annexation_MLT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet Malta
		name = annex.1103.a
		ai_chance = {
			base = 20
		}

		set_temp_variable = { tag_to_release = MLT }
		release_targeted_tag = yes

		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				MLT = {
					add_popularity = { ideology = radical_socialist popularity = 0.20 }
					set_politics = {
						ruling_party = radical_socialist
						elections_allowed = no
					}
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				MLT = {
					add_popularity = { ideology = paternal_autocrat popularity = 0.20 }
					set_politics = {
						ruling_party = paternal_autocrat
						elections_allowed = no
					}
				}
			}
			else = {
				MLT = {
					add_popularity = { ideology = authoritarian_democrat popularity = 0.20 }
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
				}
			}
		}
	}

	option = { #Give it to the British
		name = annex.1103.b
		ai_chance = {
			base = 80
		}
		trigger = {
			OR = {
				CAN = {
					exists = yes
					is_faction_leader = yes
					is_in_faction_with = ROOT
				}
				GBR = {
					exists = yes
					is_in_faction_with = ROOT
				}
			}
		}

		if = {
			limit = {
				GBR = {
					exists = yes
					is_in_faction_with = ROOT
				}
			}
			116 = {
				GBR = { transfer_state = PREV }
				add_compliance = 70
			}
		}
		else = {
			116 = {
				CAN = { transfer_state = PREV }
				add_compliance = 70
			}
		}
	}

	option = { #Give it to an Italian ally
		name = annex.1103.c
		ai_chance = {
			base = 80
		}
		trigger = {
			OR = {
				SIC = {
					exists = yes
					is_in_faction_with = ROOT
				}
				ITA = {
					exists = yes
					is_in_faction_with = ROOT
				}
				SRI = {
					exists = yes
					is_in_faction_with = ROOT
				}
				SRD = {
					exists = yes
					is_in_faction_with = ROOT
					has_completed_focus = SRD_kingdom_of_italy
				}
			}
		}

		if = {
			limit = {
				ITA = {
					exists = yes
					is_in_faction_with = ROOT
				}
			}
			116 = {
				ITA = { transfer_state = PREV }
			}
		}
		else_if = {
			limit = {
				SRI = {
					exists = yes
					is_in_faction_with = ROOT
				}
			}
			116 = {
				SRI = { transfer_state = PREV }
			}
		}
		else_if = {
			limit = {
				SRD = {
					exists = yes
					is_in_faction_with = ROOT
				}
			}
			116 = {
				SRD = { transfer_state = PREV }
			}
		}
		else = {
			116 = {
				SIC = { transfer_state = PREV }
			}
		}
	}

	option = { #occupy
		name = annex.occupation
		ai_chance = {
			base = 0
		}
		set_country_flag = MLT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of the Ardennes
	id = annex.1104
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1104 FROM = [From.GetName]" }
	title = annexation_ARDENNES_CONQ
	desc = annexation_ARDENNES_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Belgium/Wallonia
		name = annex.1104.a
		trigger = {
			var:948.owner = {
				OR = {
					tag = BEL
					tag = WLL
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				NOT = { is_ally_with = 948.owner }
			}
		}
		set_temp_variable = { tag_to_release = 948.owner }
		741 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to France
		name = annex.1104.c
		trigger = {
			is_french_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			var:8.owner = {
				is_french_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				var:948.owner = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = 8.owner }
		741 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Germany
		name = annex.1104.c
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WLL
			}
			var:8.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				var:948.owner = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 0
				is_french_tag = yes
				owns_state = 948 #Liege
			}
		}
		set_temp_variable = { tag_to_release = 8.owner }
		741 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = BEL
				tag = WLL
			}
		}
		ai_chance = {
			base = 1000
		}
		add_state_core = 741
		recheck_annexations = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_french_tag = yes
			OR = {
				owns_state = 8 #Luxembourg
				owns_state = 948 #Liege
			}
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 741
		occupy_small_country = yes
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
			owns_state = 8 #Luxembourg
		}
		ai_chance = {
			base = 1000
		}
		add_state_claim = 741
		occupy_small_country = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = BEL
				tag = WLL
				AND = {
					is_french_tag = yes
					OR = {
						owns_state = 8 #Luxembourg
						owns_state = 948 #Liege
					}
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 8 #Luxembourg
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = ARDENNES_CONQ
	}
}

country_event = { #Fate of Teschen
	id = annex.1105
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1105 FROM = [From.GetName]" }
	title = annexation_TESCHEN_CONQ
	desc = annexation_TESCHEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Czechia
		name = annex.1105.a
		trigger = {
			CZE = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				POL = { is_ally_with = ROOT }
				NOT = { CZE = { is_ally_with = ROOT } }
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		924 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Poland
		name = annex.1105.b
		trigger = {
			POL = {
				OR = {
					owns_state = 67 #Upper Silesia
					owns_state = 88 #Krakow
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				CZE = { is_ally_with = ROOT }
				NOT = { POL = { is_ally_with = ROOT } }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		924 = { transfer_state_and_add_claim = yes }
	}

	option = {
		name = annex.1105.c #give it to Austria/Germany
		trigger = {
			var:75.owner = { #Moravia
				OR = {
					tag = AUS
					is_germany_or_splinter_tag = yes
				}
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
		}
		set_temp_variable = { tag_to_release = 75.owner }
		924 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = CZE
				AND = {
					tag = POL
					OR = {
						owns_state = 67 #Upper Silesia
						owns_state = 88 #Krakow
					}
				}
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		set_temp_variable = { tag_to_release = ROOT }
		if = {
			limit = { tag = POL }
			924 = { transfer_state_and_add_claim = yes }
		}
		else = {
			924 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = CZE
				AND = {
					tag = POL
					owns_state = 88 #Krakow
				}
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = TESCHEN_CONQ
	}
}

country_event = { #Fate of Southern Slovakia
	id = annex.1106
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1106 FROM = [From.GetName]" }
	title = annexation_SOUTHERN_SLOVAKIA_CONQ
	desc = annexation_SOUTHERN_SLOVAKIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Give it to Hungary
		name = annex.1106.a
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
			HUN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					SLO = { is_ally_with = ROOT }
					CZE = {
						owns_state = 70 #Western Slovakia
						has_cosmetic_tag = CZE_czechoslavakia
					}
				}
				NOT = { HUN = { is_ally_with = ROOT } }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		664 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Slovakia
		name = annex.1106.b
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
			SLO = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				HUN = { is_ally_with = ROOT }
				NOT = { SLO = { is_ally_with = ROOT } }
			}
		}
		set_temp_variable = { tag_to_release = SLO }
		664 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Czechoslovakia
		name = annex.1106.c
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
			CZE = {
				owns_state = 70 #Western Slovakia
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 30
		}
		set_temp_variable = { tag_to_release = CZE }
		664 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Austria
		name = annex.1106.d
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
			AUS = {
				AUS_is_unified = yes
				owns_state = 70 # #Western Slovakia
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 1000
		}
		set_temp_variable = { tag_to_release = AUS }
		664 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 1000
		}
		if = {
			limit = { tag = HUN }
			64 = { add_claim_of_target = yes }
		}
		else = {
			664 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = HUN
				tag = CZE
				tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SOUTHERN_SLOVAKIA_CONQ
	}
}

country_event = { #Fate of Volkovysk
	id = annex.1107
	immediate = { log = "[GetDateText]: [Root.GetName]: event annex.1107 FROM = [From.GetName]" }
	title = annexation_VOLKOVYSK_CONQ
	desc = annexation_VOLKOVYSK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Belarus/Russia
		name = annex.1107.a
		trigger = {
			var:204.owner = {
				OR = {
					AND = {
						tag = WHR
						ROOT_can_grant_land = yes
					}
					AND = {
						is_russian_tag = yes
						is_ally_of_ROOT = yes
					}
				}
			}
			if = {
				limit = { tag = LIT }
				NOT = { owns_state = 96 } #Vilnius
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = POL
				NOT = { is_ally_with = 204.owner }
			}
			modifier = {
				factor = 0
				tag = POL
				owns_state = 97 #Bialystok
			}
		}
		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = {
				var:204.owner = { is_russian_tag = yes }
				204 = { is_core_of = owner }
			}
			94 = { transfer_state_and_add_core = yes }
		}
		else = {
			94 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #give to Poland
		name = annex.1107.b
		trigger = {
			NOT = { tag = WHR }
			POL = {
				owns_state = 97 #Bialystok
				ROOT_can_grant_land = yes
			}
			if = {
				limit = { tag = LIT }
				NOT = { owns_state = 96 } #Vilnius
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 4
				POL = { owns_state = 96 } #Vilnius
			}
			modifier = {
				factor = 0
				is_ally_with = WHR
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		94 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Lithuania
		name = annex.1107.c
		trigger = {
			NOT = { tag = WHR }
			LIT = {
				owns_state = 96 #Vilnius
				owns_state = 97 #Bialystok
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = WHR
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0
				tag = POL
				owns_state = 97 #Bialystok
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		94 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				AND = {
					is_russian_tag = yes
					owns_state = 204 #Novogrudok
					owns_state = 206 #Minsk
				}
				AND = {
					tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					tag = LIT
					owns_state = 96 #Vilnius
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				tag = POL
				NOT = { owns_state = 96 } #Vilnius
				var:204.owner = {
					OR = {
						tag = WHR
						is_russian_tag = yes
					}
					ROOT_can_grant_land = yes
				}
			}
		}
		add_state_claim = 94
		recheck_annexations = yes
	}

	option = { #occupy
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					is_russian_tag = yes
					owns_state = 204 #Novogrudok
					owns_state = 206 #Minsk
				}
				AND = {
					tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					tag = LIT
					owns_state = 96 #Vilnius
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = VOLKOVYSK_CONQ
		occupy_small_country = yes
	}
}

